// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: svmp.proto

package org.mitre.svmp.protocol;

public final class SVMPProtocol {
  private SVMPProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public enum IntentAction
      implements com.google.protobuf.Internal.EnumLite {
    ACTION_VIEW(0, 1),
    ACTION_DIAL(1, 2),
    ;
    
    public static final int ACTION_VIEW_VALUE = 1;
    public static final int ACTION_DIAL_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static IntentAction valueOf(int value) {
      switch (value) {
        case 1: return ACTION_VIEW;
        case 2: return ACTION_DIAL;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<IntentAction>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<IntentAction>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<IntentAction>() {
            public IntentAction findValueByNumber(int number) {
              return IntentAction.valueOf(number);
            }
          };
    
    private final int value;
    
    private IntentAction(int index, int value) {
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:svmp.IntentAction)
  }
  
  public enum SensorType
      implements com.google.protobuf.Internal.EnumLite {
    ACCELEROMETER(0, 1),
    MAGNETIC_FIELD(1, 2),
    ORIENTATION(2, 3),
    GYROSCOPE(3, 4),
    LIGHT(4, 5),
    PRESSURE(5, 6),
    TEMPERATURE(6, 7),
    PROXIMITY(7, 8),
    GRAVITY(8, 9),
    LINEAR_ACCELERATION(9, 10),
    ROTATION_VECTOR(10, 11),
    RELATIVE_HUMIDITY(11, 12),
    AMBIENT_TEMPERATURE(12, 13),
    ;
    
    public static final int ACCELEROMETER_VALUE = 1;
    public static final int MAGNETIC_FIELD_VALUE = 2;
    public static final int ORIENTATION_VALUE = 3;
    public static final int GYROSCOPE_VALUE = 4;
    public static final int LIGHT_VALUE = 5;
    public static final int PRESSURE_VALUE = 6;
    public static final int TEMPERATURE_VALUE = 7;
    public static final int PROXIMITY_VALUE = 8;
    public static final int GRAVITY_VALUE = 9;
    public static final int LINEAR_ACCELERATION_VALUE = 10;
    public static final int ROTATION_VECTOR_VALUE = 11;
    public static final int RELATIVE_HUMIDITY_VALUE = 12;
    public static final int AMBIENT_TEMPERATURE_VALUE = 13;
    
    
    public final int getNumber() { return value; }
    
    public static SensorType valueOf(int value) {
      switch (value) {
        case 1: return ACCELEROMETER;
        case 2: return MAGNETIC_FIELD;
        case 3: return ORIENTATION;
        case 4: return GYROSCOPE;
        case 5: return LIGHT;
        case 6: return PRESSURE;
        case 7: return TEMPERATURE;
        case 8: return PROXIMITY;
        case 9: return GRAVITY;
        case 10: return LINEAR_ACCELERATION;
        case 11: return ROTATION_VECTOR;
        case 12: return RELATIVE_HUMIDITY;
        case 13: return AMBIENT_TEMPERATURE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<SensorType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SensorType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SensorType>() {
            public SensorType findValueByNumber(int number) {
              return SensorType.valueOf(number);
            }
          };
    
    private final int value;
    
    private SensorType(int index, int value) {
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:svmp.SensorType)
  }
  
  public interface RequestOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .svmp.Request.RequestType type = 1;
    boolean hasType();
    org.mitre.svmp.protocol.SVMPProtocol.Request.RequestType getType();
    
    // repeated .svmp.TouchEvent touch = 2;
    java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent> 
        getTouchList();
    org.mitre.svmp.protocol.SVMPProtocol.TouchEvent getTouch(int index);
    int getTouchCount();
    
    // repeated .svmp.SensorEvent sensor = 3;
    java.util.List<org.mitre.svmp.protocol.SVMPProtocol.SensorEvent> 
        getSensorList();
    org.mitre.svmp.protocol.SVMPProtocol.SensorEvent getSensor(int index);
    int getSensorCount();
    
    // optional .svmp.LocationRequest locationRequest = 6;
    boolean hasLocationRequest();
    org.mitre.svmp.protocol.SVMPProtocol.LocationRequest getLocationRequest();
    
    // optional .svmp.Intent intent = 7;
    boolean hasIntent();
    org.mitre.svmp.protocol.SVMPProtocol.Intent getIntent();
    
    // optional .svmp.WebRTCMessage webrtcMsg = 9;
    boolean hasWebrtcMsg();
    org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage getWebrtcMsg();
    
    // optional .svmp.RotationInfo rotationInfo = 10;
    boolean hasRotationInfo();
    org.mitre.svmp.protocol.SVMPProtocol.RotationInfo getRotationInfo();
    
    // optional .svmp.Ping pingRequest = 11;
    boolean hasPingRequest();
    org.mitre.svmp.protocol.SVMPProtocol.Ping getPingRequest();
    
    // optional .svmp.VideoStreamInfo videoInfo = 12;
    boolean hasVideoInfo();
    org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo getVideoInfo();
    
    // optional string timezoneId = 13;
    boolean hasTimezoneId();
    String getTimezoneId();
    
    // optional .svmp.AppsRequest apps = 14;
    boolean hasApps();
    org.mitre.svmp.protocol.SVMPProtocol.AppsRequest getApps();
    
    // optional .svmp.KeyEvent key = 15;
    boolean hasKey();
    org.mitre.svmp.protocol.SVMPProtocol.KeyEvent getKey();
    
    // optional .svmp.Config config = 16;
    boolean hasConfig();
    org.mitre.svmp.protocol.SVMPProtocol.Config getConfig();
    
    // optional .svmp.RTCMessage stream = 17;
    boolean hasStream();
    org.mitre.svmp.protocol.SVMPProtocol.RTCMessage getStream();
    
    // optional .svmp.ClientData clientData = 18;
    boolean hasClientData();
    org.mitre.svmp.protocol.SVMPProtocol.ClientData getClientData();
  }
  public static final class Request extends
      com.google.protobuf.GeneratedMessageLite
      implements RequestOrBuilder {
    // Use Request.newBuilder() to construct.
    private Request(Builder builder) {
      super(builder);
    }
    private Request(boolean noInit) {}
    
    private static final Request defaultInstance;
    public static Request getDefaultInstance() {
      return defaultInstance;
    }
    
    public Request getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum RequestType
        implements com.google.protobuf.Internal.EnumLite {
      VIDEO_PARAMS(0, 0),
      TOUCHEVENT(1, 1),
      SENSOREVENT(2, 2),
      LOCATION(3, 3),
      INTENT(4, 4),
      SCREENINFO(5, 5),
      WEBRTC(6, 6),
      ROTATION_INFO(7, 7),
      PING(8, 8),
      TIMEZONE(9, 9),
      APPS(10, 10),
      KEYEVENT(11, 11),
      CONFIG(12, 12),
      STREAM(13, 13),
      CLIENT_DATA(14, 14),
      ;
      
      public static final int VIDEO_PARAMS_VALUE = 0;
      public static final int TOUCHEVENT_VALUE = 1;
      public static final int SENSOREVENT_VALUE = 2;
      public static final int LOCATION_VALUE = 3;
      public static final int INTENT_VALUE = 4;
      public static final int SCREENINFO_VALUE = 5;
      public static final int WEBRTC_VALUE = 6;
      public static final int ROTATION_INFO_VALUE = 7;
      public static final int PING_VALUE = 8;
      public static final int TIMEZONE_VALUE = 9;
      public static final int APPS_VALUE = 10;
      public static final int KEYEVENT_VALUE = 11;
      public static final int CONFIG_VALUE = 12;
      public static final int STREAM_VALUE = 13;
      public static final int CLIENT_DATA_VALUE = 14;
      
      
      public final int getNumber() { return value; }
      
      public static RequestType valueOf(int value) {
        switch (value) {
          case 0: return VIDEO_PARAMS;
          case 1: return TOUCHEVENT;
          case 2: return SENSOREVENT;
          case 3: return LOCATION;
          case 4: return INTENT;
          case 5: return SCREENINFO;
          case 6: return WEBRTC;
          case 7: return ROTATION_INFO;
          case 8: return PING;
          case 9: return TIMEZONE;
          case 10: return APPS;
          case 11: return KEYEVENT;
          case 12: return CONFIG;
          case 13: return STREAM;
          case 14: return CLIENT_DATA;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<RequestType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<RequestType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RequestType>() {
              public RequestType findValueByNumber(int number) {
                return RequestType.valueOf(number);
              }
            };
      
      private final int value;
      
      private RequestType(int index, int value) {
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:svmp.Request.RequestType)
    }
    
    private int bitField0_;
    // required .svmp.Request.RequestType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.mitre.svmp.protocol.SVMPProtocol.Request.RequestType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.Request.RequestType getType() {
      return type_;
    }
    
    // repeated .svmp.TouchEvent touch = 2;
    public static final int TOUCH_FIELD_NUMBER = 2;
    private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent> touch_;
    public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent> getTouchList() {
      return touch_;
    }
    public java.util.List<? extends org.mitre.svmp.protocol.SVMPProtocol.TouchEventOrBuilder> 
        getTouchOrBuilderList() {
      return touch_;
    }
    public int getTouchCount() {
      return touch_.size();
    }
    public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent getTouch(int index) {
      return touch_.get(index);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.TouchEventOrBuilder getTouchOrBuilder(
        int index) {
      return touch_.get(index);
    }
    
    // repeated .svmp.SensorEvent sensor = 3;
    public static final int SENSOR_FIELD_NUMBER = 3;
    private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.SensorEvent> sensor_;
    public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.SensorEvent> getSensorList() {
      return sensor_;
    }
    public java.util.List<? extends org.mitre.svmp.protocol.SVMPProtocol.SensorEventOrBuilder> 
        getSensorOrBuilderList() {
      return sensor_;
    }
    public int getSensorCount() {
      return sensor_.size();
    }
    public org.mitre.svmp.protocol.SVMPProtocol.SensorEvent getSensor(int index) {
      return sensor_.get(index);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.SensorEventOrBuilder getSensorOrBuilder(
        int index) {
      return sensor_.get(index);
    }
    
    // optional .svmp.LocationRequest locationRequest = 6;
    public static final int LOCATIONREQUEST_FIELD_NUMBER = 6;
    private org.mitre.svmp.protocol.SVMPProtocol.LocationRequest locationRequest_;
    public boolean hasLocationRequest() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.LocationRequest getLocationRequest() {
      return locationRequest_;
    }
    
    // optional .svmp.Intent intent = 7;
    public static final int INTENT_FIELD_NUMBER = 7;
    private org.mitre.svmp.protocol.SVMPProtocol.Intent intent_;
    public boolean hasIntent() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.Intent getIntent() {
      return intent_;
    }
    
    // optional .svmp.WebRTCMessage webrtcMsg = 9;
    public static final int WEBRTCMSG_FIELD_NUMBER = 9;
    private org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage webrtcMsg_;
    public boolean hasWebrtcMsg() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage getWebrtcMsg() {
      return webrtcMsg_;
    }
    
    // optional .svmp.RotationInfo rotationInfo = 10;
    public static final int ROTATIONINFO_FIELD_NUMBER = 10;
    private org.mitre.svmp.protocol.SVMPProtocol.RotationInfo rotationInfo_;
    public boolean hasRotationInfo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.RotationInfo getRotationInfo() {
      return rotationInfo_;
    }
    
    // optional .svmp.Ping pingRequest = 11;
    public static final int PINGREQUEST_FIELD_NUMBER = 11;
    private org.mitre.svmp.protocol.SVMPProtocol.Ping pingRequest_;
    public boolean hasPingRequest() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.Ping getPingRequest() {
      return pingRequest_;
    }
    
    // optional .svmp.VideoStreamInfo videoInfo = 12;
    public static final int VIDEOINFO_FIELD_NUMBER = 12;
    private org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo videoInfo_;
    public boolean hasVideoInfo() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo getVideoInfo() {
      return videoInfo_;
    }
    
    // optional string timezoneId = 13;
    public static final int TIMEZONEID_FIELD_NUMBER = 13;
    private java.lang.Object timezoneId_;
    public boolean hasTimezoneId() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getTimezoneId() {
      java.lang.Object ref = timezoneId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          timezoneId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTimezoneIdBytes() {
      java.lang.Object ref = timezoneId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        timezoneId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .svmp.AppsRequest apps = 14;
    public static final int APPS_FIELD_NUMBER = 14;
    private org.mitre.svmp.protocol.SVMPProtocol.AppsRequest apps_;
    public boolean hasApps() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.AppsRequest getApps() {
      return apps_;
    }
    
    // optional .svmp.KeyEvent key = 15;
    public static final int KEY_FIELD_NUMBER = 15;
    private org.mitre.svmp.protocol.SVMPProtocol.KeyEvent key_;
    public boolean hasKey() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.KeyEvent getKey() {
      return key_;
    }
    
    // optional .svmp.Config config = 16;
    public static final int CONFIG_FIELD_NUMBER = 16;
    private org.mitre.svmp.protocol.SVMPProtocol.Config config_;
    public boolean hasConfig() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.Config getConfig() {
      return config_;
    }
    
    // optional .svmp.RTCMessage stream = 17;
    public static final int STREAM_FIELD_NUMBER = 17;
    private org.mitre.svmp.protocol.SVMPProtocol.RTCMessage stream_;
    public boolean hasStream() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.RTCMessage getStream() {
      return stream_;
    }
    
    // optional .svmp.ClientData clientData = 18;
    public static final int CLIENTDATA_FIELD_NUMBER = 18;
    private org.mitre.svmp.protocol.SVMPProtocol.ClientData clientData_;
    public boolean hasClientData() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.ClientData getClientData() {
      return clientData_;
    }
    
    private void initFields() {
      type_ = org.mitre.svmp.protocol.SVMPProtocol.Request.RequestType.VIDEO_PARAMS;
      touch_ = java.util.Collections.emptyList();
      sensor_ = java.util.Collections.emptyList();
      locationRequest_ = org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.getDefaultInstance();
      intent_ = org.mitre.svmp.protocol.SVMPProtocol.Intent.getDefaultInstance();
      webrtcMsg_ = org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.getDefaultInstance();
      rotationInfo_ = org.mitre.svmp.protocol.SVMPProtocol.RotationInfo.getDefaultInstance();
      pingRequest_ = org.mitre.svmp.protocol.SVMPProtocol.Ping.getDefaultInstance();
      videoInfo_ = org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.getDefaultInstance();
      timezoneId_ = "";
      apps_ = org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.getDefaultInstance();
      key_ = org.mitre.svmp.protocol.SVMPProtocol.KeyEvent.getDefaultInstance();
      config_ = org.mitre.svmp.protocol.SVMPProtocol.Config.getDefaultInstance();
      stream_ = org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.getDefaultInstance();
      clientData_ = org.mitre.svmp.protocol.SVMPProtocol.ClientData.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTouchCount(); i++) {
        if (!getTouch(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getSensorCount(); i++) {
        if (!getSensor(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLocationRequest()) {
        if (!getLocationRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasIntent()) {
        if (!getIntent().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasRotationInfo()) {
        if (!getRotationInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPingRequest()) {
        if (!getPingRequest().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasApps()) {
        if (!getApps().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasKey()) {
        if (!getKey().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      for (int i = 0; i < touch_.size(); i++) {
        output.writeMessage(2, touch_.get(i));
      }
      for (int i = 0; i < sensor_.size(); i++) {
        output.writeMessage(3, sensor_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(6, locationRequest_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(7, intent_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(9, webrtcMsg_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(10, rotationInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(11, pingRequest_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(12, videoInfo_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(13, getTimezoneIdBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(14, apps_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(15, key_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(16, config_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(17, stream_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(18, clientData_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      for (int i = 0; i < touch_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, touch_.get(i));
      }
      for (int i = 0; i < sensor_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, sensor_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, locationRequest_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, intent_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, webrtcMsg_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, rotationInfo_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, pingRequest_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, videoInfo_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getTimezoneIdBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, apps_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, key_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, config_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, stream_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, clientData_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.Request, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.RequestOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.Request.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = org.mitre.svmp.protocol.SVMPProtocol.Request.RequestType.VIDEO_PARAMS;
        bitField0_ = (bitField0_ & ~0x00000001);
        touch_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        sensor_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        locationRequest_ = org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        intent_ = org.mitre.svmp.protocol.SVMPProtocol.Intent.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000010);
        webrtcMsg_ = org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000020);
        rotationInfo_ = org.mitre.svmp.protocol.SVMPProtocol.RotationInfo.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000040);
        pingRequest_ = org.mitre.svmp.protocol.SVMPProtocol.Ping.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000080);
        videoInfo_ = org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000100);
        timezoneId_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        apps_ = org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000400);
        key_ = org.mitre.svmp.protocol.SVMPProtocol.KeyEvent.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000800);
        config_ = org.mitre.svmp.protocol.SVMPProtocol.Config.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00001000);
        stream_ = org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00002000);
        clientData_ = org.mitre.svmp.protocol.SVMPProtocol.ClientData.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Request getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.Request.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Request build() {
        org.mitre.svmp.protocol.SVMPProtocol.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.Request buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.Request result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Request buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.Request result = new org.mitre.svmp.protocol.SVMPProtocol.Request(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          touch_ = java.util.Collections.unmodifiableList(touch_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.touch_ = touch_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          sensor_ = java.util.Collections.unmodifiableList(sensor_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.sensor_ = sensor_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.locationRequest_ = locationRequest_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.intent_ = intent_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.webrtcMsg_ = webrtcMsg_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.rotationInfo_ = rotationInfo_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.pingRequest_ = pingRequest_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.videoInfo_ = videoInfo_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.timezoneId_ = timezoneId_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.apps_ = apps_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.config_ = config_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.stream_ = stream_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.clientData_ = clientData_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.Request other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.Request.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (!other.touch_.isEmpty()) {
          if (touch_.isEmpty()) {
            touch_ = other.touch_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTouchIsMutable();
            touch_.addAll(other.touch_);
          }
          
        }
        if (!other.sensor_.isEmpty()) {
          if (sensor_.isEmpty()) {
            sensor_ = other.sensor_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSensorIsMutable();
            sensor_.addAll(other.sensor_);
          }
          
        }
        if (other.hasLocationRequest()) {
          mergeLocationRequest(other.getLocationRequest());
        }
        if (other.hasIntent()) {
          mergeIntent(other.getIntent());
        }
        if (other.hasWebrtcMsg()) {
          mergeWebrtcMsg(other.getWebrtcMsg());
        }
        if (other.hasRotationInfo()) {
          mergeRotationInfo(other.getRotationInfo());
        }
        if (other.hasPingRequest()) {
          mergePingRequest(other.getPingRequest());
        }
        if (other.hasVideoInfo()) {
          mergeVideoInfo(other.getVideoInfo());
        }
        if (other.hasTimezoneId()) {
          setTimezoneId(other.getTimezoneId());
        }
        if (other.hasApps()) {
          mergeApps(other.getApps());
        }
        if (other.hasKey()) {
          mergeKey(other.getKey());
        }
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        if (other.hasStream()) {
          mergeStream(other.getStream());
        }
        if (other.hasClientData()) {
          mergeClientData(other.getClientData());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        for (int i = 0; i < getTouchCount(); i++) {
          if (!getTouch(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getSensorCount(); i++) {
          if (!getSensor(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasLocationRequest()) {
          if (!getLocationRequest().isInitialized()) {
            
            return false;
          }
        }
        if (hasIntent()) {
          if (!getIntent().isInitialized()) {
            
            return false;
          }
        }
        if (hasRotationInfo()) {
          if (!getRotationInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasPingRequest()) {
          if (!getPingRequest().isInitialized()) {
            
            return false;
          }
        }
        if (hasApps()) {
          if (!getApps().isInitialized()) {
            
            return false;
          }
        }
        if (hasKey()) {
          if (!getKey().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.mitre.svmp.protocol.SVMPProtocol.Request.RequestType value = org.mitre.svmp.protocol.SVMPProtocol.Request.RequestType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTouch(subBuilder.buildPartial());
              break;
            }
            case 26: {
              org.mitre.svmp.protocol.SVMPProtocol.SensorEvent.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.SensorEvent.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSensor(subBuilder.buildPartial());
              break;
            }
            case 50: {
              org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.newBuilder();
              if (hasLocationRequest()) {
                subBuilder.mergeFrom(getLocationRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLocationRequest(subBuilder.buildPartial());
              break;
            }
            case 58: {
              org.mitre.svmp.protocol.SVMPProtocol.Intent.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.Intent.newBuilder();
              if (hasIntent()) {
                subBuilder.mergeFrom(getIntent());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setIntent(subBuilder.buildPartial());
              break;
            }
            case 74: {
              org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.newBuilder();
              if (hasWebrtcMsg()) {
                subBuilder.mergeFrom(getWebrtcMsg());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setWebrtcMsg(subBuilder.buildPartial());
              break;
            }
            case 82: {
              org.mitre.svmp.protocol.SVMPProtocol.RotationInfo.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.RotationInfo.newBuilder();
              if (hasRotationInfo()) {
                subBuilder.mergeFrom(getRotationInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRotationInfo(subBuilder.buildPartial());
              break;
            }
            case 90: {
              org.mitre.svmp.protocol.SVMPProtocol.Ping.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.Ping.newBuilder();
              if (hasPingRequest()) {
                subBuilder.mergeFrom(getPingRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPingRequest(subBuilder.buildPartial());
              break;
            }
            case 98: {
              org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.newBuilder();
              if (hasVideoInfo()) {
                subBuilder.mergeFrom(getVideoInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setVideoInfo(subBuilder.buildPartial());
              break;
            }
            case 106: {
              bitField0_ |= 0x00000200;
              timezoneId_ = input.readBytes();
              break;
            }
            case 114: {
              org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.newBuilder();
              if (hasApps()) {
                subBuilder.mergeFrom(getApps());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setApps(subBuilder.buildPartial());
              break;
            }
            case 122: {
              org.mitre.svmp.protocol.SVMPProtocol.KeyEvent.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.KeyEvent.newBuilder();
              if (hasKey()) {
                subBuilder.mergeFrom(getKey());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setKey(subBuilder.buildPartial());
              break;
            }
            case 130: {
              org.mitre.svmp.protocol.SVMPProtocol.Config.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.Config.newBuilder();
              if (hasConfig()) {
                subBuilder.mergeFrom(getConfig());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setConfig(subBuilder.buildPartial());
              break;
            }
            case 138: {
              org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.newBuilder();
              if (hasStream()) {
                subBuilder.mergeFrom(getStream());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStream(subBuilder.buildPartial());
              break;
            }
            case 146: {
              org.mitre.svmp.protocol.SVMPProtocol.ClientData.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.ClientData.newBuilder();
              if (hasClientData()) {
                subBuilder.mergeFrom(getClientData());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setClientData(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .svmp.Request.RequestType type = 1;
      private org.mitre.svmp.protocol.SVMPProtocol.Request.RequestType type_ = org.mitre.svmp.protocol.SVMPProtocol.Request.RequestType.VIDEO_PARAMS;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.Request.RequestType getType() {
        return type_;
      }
      public Builder setType(org.mitre.svmp.protocol.SVMPProtocol.Request.RequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.mitre.svmp.protocol.SVMPProtocol.Request.RequestType.VIDEO_PARAMS;
        
        return this;
      }
      
      // repeated .svmp.TouchEvent touch = 2;
      private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent> touch_ =
        java.util.Collections.emptyList();
      private void ensureTouchIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          touch_ = new java.util.ArrayList<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent>(touch_);
          bitField0_ |= 0x00000002;
         }
      }
      
      public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent> getTouchList() {
        return java.util.Collections.unmodifiableList(touch_);
      }
      public int getTouchCount() {
        return touch_.size();
      }
      public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent getTouch(int index) {
        return touch_.get(index);
      }
      public Builder setTouch(
          int index, org.mitre.svmp.protocol.SVMPProtocol.TouchEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTouchIsMutable();
        touch_.set(index, value);
        
        return this;
      }
      public Builder setTouch(
          int index, org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.Builder builderForValue) {
        ensureTouchIsMutable();
        touch_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addTouch(org.mitre.svmp.protocol.SVMPProtocol.TouchEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTouchIsMutable();
        touch_.add(value);
        
        return this;
      }
      public Builder addTouch(
          int index, org.mitre.svmp.protocol.SVMPProtocol.TouchEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTouchIsMutable();
        touch_.add(index, value);
        
        return this;
      }
      public Builder addTouch(
          org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.Builder builderForValue) {
        ensureTouchIsMutable();
        touch_.add(builderForValue.build());
        
        return this;
      }
      public Builder addTouch(
          int index, org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.Builder builderForValue) {
        ensureTouchIsMutable();
        touch_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllTouch(
          java.lang.Iterable<? extends org.mitre.svmp.protocol.SVMPProtocol.TouchEvent> values) {
        ensureTouchIsMutable();
        super.addAll(values, touch_);
        
        return this;
      }
      public Builder clearTouch() {
        touch_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }
      public Builder removeTouch(int index) {
        ensureTouchIsMutable();
        touch_.remove(index);
        
        return this;
      }
      
      // repeated .svmp.SensorEvent sensor = 3;
      private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.SensorEvent> sensor_ =
        java.util.Collections.emptyList();
      private void ensureSensorIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          sensor_ = new java.util.ArrayList<org.mitre.svmp.protocol.SVMPProtocol.SensorEvent>(sensor_);
          bitField0_ |= 0x00000004;
         }
      }
      
      public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.SensorEvent> getSensorList() {
        return java.util.Collections.unmodifiableList(sensor_);
      }
      public int getSensorCount() {
        return sensor_.size();
      }
      public org.mitre.svmp.protocol.SVMPProtocol.SensorEvent getSensor(int index) {
        return sensor_.get(index);
      }
      public Builder setSensor(
          int index, org.mitre.svmp.protocol.SVMPProtocol.SensorEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSensorIsMutable();
        sensor_.set(index, value);
        
        return this;
      }
      public Builder setSensor(
          int index, org.mitre.svmp.protocol.SVMPProtocol.SensorEvent.Builder builderForValue) {
        ensureSensorIsMutable();
        sensor_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addSensor(org.mitre.svmp.protocol.SVMPProtocol.SensorEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSensorIsMutable();
        sensor_.add(value);
        
        return this;
      }
      public Builder addSensor(
          int index, org.mitre.svmp.protocol.SVMPProtocol.SensorEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSensorIsMutable();
        sensor_.add(index, value);
        
        return this;
      }
      public Builder addSensor(
          org.mitre.svmp.protocol.SVMPProtocol.SensorEvent.Builder builderForValue) {
        ensureSensorIsMutable();
        sensor_.add(builderForValue.build());
        
        return this;
      }
      public Builder addSensor(
          int index, org.mitre.svmp.protocol.SVMPProtocol.SensorEvent.Builder builderForValue) {
        ensureSensorIsMutable();
        sensor_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllSensor(
          java.lang.Iterable<? extends org.mitre.svmp.protocol.SVMPProtocol.SensorEvent> values) {
        ensureSensorIsMutable();
        super.addAll(values, sensor_);
        
        return this;
      }
      public Builder clearSensor() {
        sensor_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        
        return this;
      }
      public Builder removeSensor(int index) {
        ensureSensorIsMutable();
        sensor_.remove(index);
        
        return this;
      }
      
      // optional .svmp.LocationRequest locationRequest = 6;
      private org.mitre.svmp.protocol.SVMPProtocol.LocationRequest locationRequest_ = org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.getDefaultInstance();
      public boolean hasLocationRequest() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.LocationRequest getLocationRequest() {
        return locationRequest_;
      }
      public Builder setLocationRequest(org.mitre.svmp.protocol.SVMPProtocol.LocationRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        locationRequest_ = value;
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setLocationRequest(
          org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.Builder builderForValue) {
        locationRequest_ = builderForValue.build();
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeLocationRequest(org.mitre.svmp.protocol.SVMPProtocol.LocationRequest value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            locationRequest_ != org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.getDefaultInstance()) {
          locationRequest_ =
            org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.newBuilder(locationRequest_).mergeFrom(value).buildPartial();
        } else {
          locationRequest_ = value;
        }
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearLocationRequest() {
        locationRequest_ = org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      // optional .svmp.Intent intent = 7;
      private org.mitre.svmp.protocol.SVMPProtocol.Intent intent_ = org.mitre.svmp.protocol.SVMPProtocol.Intent.getDefaultInstance();
      public boolean hasIntent() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.Intent getIntent() {
        return intent_;
      }
      public Builder setIntent(org.mitre.svmp.protocol.SVMPProtocol.Intent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        intent_ = value;
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setIntent(
          org.mitre.svmp.protocol.SVMPProtocol.Intent.Builder builderForValue) {
        intent_ = builderForValue.build();
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeIntent(org.mitre.svmp.protocol.SVMPProtocol.Intent value) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            intent_ != org.mitre.svmp.protocol.SVMPProtocol.Intent.getDefaultInstance()) {
          intent_ =
            org.mitre.svmp.protocol.SVMPProtocol.Intent.newBuilder(intent_).mergeFrom(value).buildPartial();
        } else {
          intent_ = value;
        }
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearIntent() {
        intent_ = org.mitre.svmp.protocol.SVMPProtocol.Intent.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      // optional .svmp.WebRTCMessage webrtcMsg = 9;
      private org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage webrtcMsg_ = org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.getDefaultInstance();
      public boolean hasWebrtcMsg() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage getWebrtcMsg() {
        return webrtcMsg_;
      }
      public Builder setWebrtcMsg(org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        webrtcMsg_ = value;
        
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder setWebrtcMsg(
          org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.Builder builderForValue) {
        webrtcMsg_ = builderForValue.build();
        
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder mergeWebrtcMsg(org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage value) {
        if (((bitField0_ & 0x00000020) == 0x00000020) &&
            webrtcMsg_ != org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.getDefaultInstance()) {
          webrtcMsg_ =
            org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.newBuilder(webrtcMsg_).mergeFrom(value).buildPartial();
        } else {
          webrtcMsg_ = value;
        }
        
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder clearWebrtcMsg() {
        webrtcMsg_ = org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      // optional .svmp.RotationInfo rotationInfo = 10;
      private org.mitre.svmp.protocol.SVMPProtocol.RotationInfo rotationInfo_ = org.mitre.svmp.protocol.SVMPProtocol.RotationInfo.getDefaultInstance();
      public boolean hasRotationInfo() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.RotationInfo getRotationInfo() {
        return rotationInfo_;
      }
      public Builder setRotationInfo(org.mitre.svmp.protocol.SVMPProtocol.RotationInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        rotationInfo_ = value;
        
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder setRotationInfo(
          org.mitre.svmp.protocol.SVMPProtocol.RotationInfo.Builder builderForValue) {
        rotationInfo_ = builderForValue.build();
        
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder mergeRotationInfo(org.mitre.svmp.protocol.SVMPProtocol.RotationInfo value) {
        if (((bitField0_ & 0x00000040) == 0x00000040) &&
            rotationInfo_ != org.mitre.svmp.protocol.SVMPProtocol.RotationInfo.getDefaultInstance()) {
          rotationInfo_ =
            org.mitre.svmp.protocol.SVMPProtocol.RotationInfo.newBuilder(rotationInfo_).mergeFrom(value).buildPartial();
        } else {
          rotationInfo_ = value;
        }
        
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder clearRotationInfo() {
        rotationInfo_ = org.mitre.svmp.protocol.SVMPProtocol.RotationInfo.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      // optional .svmp.Ping pingRequest = 11;
      private org.mitre.svmp.protocol.SVMPProtocol.Ping pingRequest_ = org.mitre.svmp.protocol.SVMPProtocol.Ping.getDefaultInstance();
      public boolean hasPingRequest() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.Ping getPingRequest() {
        return pingRequest_;
      }
      public Builder setPingRequest(org.mitre.svmp.protocol.SVMPProtocol.Ping value) {
        if (value == null) {
          throw new NullPointerException();
        }
        pingRequest_ = value;
        
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder setPingRequest(
          org.mitre.svmp.protocol.SVMPProtocol.Ping.Builder builderForValue) {
        pingRequest_ = builderForValue.build();
        
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder mergePingRequest(org.mitre.svmp.protocol.SVMPProtocol.Ping value) {
        if (((bitField0_ & 0x00000080) == 0x00000080) &&
            pingRequest_ != org.mitre.svmp.protocol.SVMPProtocol.Ping.getDefaultInstance()) {
          pingRequest_ =
            org.mitre.svmp.protocol.SVMPProtocol.Ping.newBuilder(pingRequest_).mergeFrom(value).buildPartial();
        } else {
          pingRequest_ = value;
        }
        
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder clearPingRequest() {
        pingRequest_ = org.mitre.svmp.protocol.SVMPProtocol.Ping.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      // optional .svmp.VideoStreamInfo videoInfo = 12;
      private org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo videoInfo_ = org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.getDefaultInstance();
      public boolean hasVideoInfo() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo getVideoInfo() {
        return videoInfo_;
      }
      public Builder setVideoInfo(org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        videoInfo_ = value;
        
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder setVideoInfo(
          org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.Builder builderForValue) {
        videoInfo_ = builderForValue.build();
        
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder mergeVideoInfo(org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo value) {
        if (((bitField0_ & 0x00000100) == 0x00000100) &&
            videoInfo_ != org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.getDefaultInstance()) {
          videoInfo_ =
            org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.newBuilder(videoInfo_).mergeFrom(value).buildPartial();
        } else {
          videoInfo_ = value;
        }
        
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder clearVideoInfo() {
        videoInfo_ = org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      // optional string timezoneId = 13;
      private java.lang.Object timezoneId_ = "";
      public boolean hasTimezoneId() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public String getTimezoneId() {
        java.lang.Object ref = timezoneId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          timezoneId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTimezoneId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        timezoneId_ = value;
        
        return this;
      }
      public Builder clearTimezoneId() {
        bitField0_ = (bitField0_ & ~0x00000200);
        timezoneId_ = getDefaultInstance().getTimezoneId();
        
        return this;
      }
      void setTimezoneId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000200;
        timezoneId_ = value;
        
      }
      
      // optional .svmp.AppsRequest apps = 14;
      private org.mitre.svmp.protocol.SVMPProtocol.AppsRequest apps_ = org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.getDefaultInstance();
      public boolean hasApps() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.AppsRequest getApps() {
        return apps_;
      }
      public Builder setApps(org.mitre.svmp.protocol.SVMPProtocol.AppsRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        apps_ = value;
        
        bitField0_ |= 0x00000400;
        return this;
      }
      public Builder setApps(
          org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.Builder builderForValue) {
        apps_ = builderForValue.build();
        
        bitField0_ |= 0x00000400;
        return this;
      }
      public Builder mergeApps(org.mitre.svmp.protocol.SVMPProtocol.AppsRequest value) {
        if (((bitField0_ & 0x00000400) == 0x00000400) &&
            apps_ != org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.getDefaultInstance()) {
          apps_ =
            org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.newBuilder(apps_).mergeFrom(value).buildPartial();
        } else {
          apps_ = value;
        }
        
        bitField0_ |= 0x00000400;
        return this;
      }
      public Builder clearApps() {
        apps_ = org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      
      // optional .svmp.KeyEvent key = 15;
      private org.mitre.svmp.protocol.SVMPProtocol.KeyEvent key_ = org.mitre.svmp.protocol.SVMPProtocol.KeyEvent.getDefaultInstance();
      public boolean hasKey() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.KeyEvent getKey() {
        return key_;
      }
      public Builder setKey(org.mitre.svmp.protocol.SVMPProtocol.KeyEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        key_ = value;
        
        bitField0_ |= 0x00000800;
        return this;
      }
      public Builder setKey(
          org.mitre.svmp.protocol.SVMPProtocol.KeyEvent.Builder builderForValue) {
        key_ = builderForValue.build();
        
        bitField0_ |= 0x00000800;
        return this;
      }
      public Builder mergeKey(org.mitre.svmp.protocol.SVMPProtocol.KeyEvent value) {
        if (((bitField0_ & 0x00000800) == 0x00000800) &&
            key_ != org.mitre.svmp.protocol.SVMPProtocol.KeyEvent.getDefaultInstance()) {
          key_ =
            org.mitre.svmp.protocol.SVMPProtocol.KeyEvent.newBuilder(key_).mergeFrom(value).buildPartial();
        } else {
          key_ = value;
        }
        
        bitField0_ |= 0x00000800;
        return this;
      }
      public Builder clearKey() {
        key_ = org.mitre.svmp.protocol.SVMPProtocol.KeyEvent.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      
      // optional .svmp.Config config = 16;
      private org.mitre.svmp.protocol.SVMPProtocol.Config config_ = org.mitre.svmp.protocol.SVMPProtocol.Config.getDefaultInstance();
      public boolean hasConfig() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.Config getConfig() {
        return config_;
      }
      public Builder setConfig(org.mitre.svmp.protocol.SVMPProtocol.Config value) {
        if (value == null) {
          throw new NullPointerException();
        }
        config_ = value;
        
        bitField0_ |= 0x00001000;
        return this;
      }
      public Builder setConfig(
          org.mitre.svmp.protocol.SVMPProtocol.Config.Builder builderForValue) {
        config_ = builderForValue.build();
        
        bitField0_ |= 0x00001000;
        return this;
      }
      public Builder mergeConfig(org.mitre.svmp.protocol.SVMPProtocol.Config value) {
        if (((bitField0_ & 0x00001000) == 0x00001000) &&
            config_ != org.mitre.svmp.protocol.SVMPProtocol.Config.getDefaultInstance()) {
          config_ =
            org.mitre.svmp.protocol.SVMPProtocol.Config.newBuilder(config_).mergeFrom(value).buildPartial();
        } else {
          config_ = value;
        }
        
        bitField0_ |= 0x00001000;
        return this;
      }
      public Builder clearConfig() {
        config_ = org.mitre.svmp.protocol.SVMPProtocol.Config.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      
      // optional .svmp.RTCMessage stream = 17;
      private org.mitre.svmp.protocol.SVMPProtocol.RTCMessage stream_ = org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.getDefaultInstance();
      public boolean hasStream() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.RTCMessage getStream() {
        return stream_;
      }
      public Builder setStream(org.mitre.svmp.protocol.SVMPProtocol.RTCMessage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        stream_ = value;
        
        bitField0_ |= 0x00002000;
        return this;
      }
      public Builder setStream(
          org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.Builder builderForValue) {
        stream_ = builderForValue.build();
        
        bitField0_ |= 0x00002000;
        return this;
      }
      public Builder mergeStream(org.mitre.svmp.protocol.SVMPProtocol.RTCMessage value) {
        if (((bitField0_ & 0x00002000) == 0x00002000) &&
            stream_ != org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.getDefaultInstance()) {
          stream_ =
            org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.newBuilder(stream_).mergeFrom(value).buildPartial();
        } else {
          stream_ = value;
        }
        
        bitField0_ |= 0x00002000;
        return this;
      }
      public Builder clearStream() {
        stream_ = org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      
      // optional .svmp.ClientData clientData = 18;
      private org.mitre.svmp.protocol.SVMPProtocol.ClientData clientData_ = org.mitre.svmp.protocol.SVMPProtocol.ClientData.getDefaultInstance();
      public boolean hasClientData() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.ClientData getClientData() {
        return clientData_;
      }
      public Builder setClientData(org.mitre.svmp.protocol.SVMPProtocol.ClientData value) {
        if (value == null) {
          throw new NullPointerException();
        }
        clientData_ = value;
        
        bitField0_ |= 0x00004000;
        return this;
      }
      public Builder setClientData(
          org.mitre.svmp.protocol.SVMPProtocol.ClientData.Builder builderForValue) {
        clientData_ = builderForValue.build();
        
        bitField0_ |= 0x00004000;
        return this;
      }
      public Builder mergeClientData(org.mitre.svmp.protocol.SVMPProtocol.ClientData value) {
        if (((bitField0_ & 0x00004000) == 0x00004000) &&
            clientData_ != org.mitre.svmp.protocol.SVMPProtocol.ClientData.getDefaultInstance()) {
          clientData_ =
            org.mitre.svmp.protocol.SVMPProtocol.ClientData.newBuilder(clientData_).mergeFrom(value).buildPartial();
        } else {
          clientData_ = value;
        }
        
        bitField0_ |= 0x00004000;
        return this;
      }
      public Builder clearClientData() {
        clientData_ = org.mitre.svmp.protocol.SVMPProtocol.ClientData.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.Request)
    }
    
    static {
      defaultInstance = new Request(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.Request)
  }
  
  public interface ResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .svmp.Response.ResponseType type = 1;
    boolean hasType();
    org.mitre.svmp.protocol.SVMPProtocol.Response.ResponseType getType();
    
    // optional .svmp.AuthResponse authResponse = 3;
    boolean hasAuthResponse();
    org.mitre.svmp.protocol.SVMPProtocol.AuthResponse getAuthResponse();
    
    // optional .svmp.Intent intent = 4;
    boolean hasIntent();
    org.mitre.svmp.protocol.SVMPProtocol.Intent getIntent();
    
    // optional .svmp.Notification notification = 5;
    boolean hasNotification();
    org.mitre.svmp.protocol.SVMPProtocol.Notification getNotification();
    
    // optional .svmp.LocationResponse locationResponse = 6;
    boolean hasLocationResponse();
    org.mitre.svmp.protocol.SVMPProtocol.LocationResponse getLocationResponse();
    
    // optional .svmp.Ping pingResponse = 7;
    boolean hasPingResponse();
    org.mitre.svmp.protocol.SVMPProtocol.Ping getPingResponse();
    
    // optional .svmp.AppsResponse apps = 8;
    boolean hasApps();
    org.mitre.svmp.protocol.SVMPProtocol.AppsResponse getApps();
    
    // optional .svmp.ScreenInfo screenInfo = 16;
    boolean hasScreenInfo();
    org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo getScreenInfo();
    
    // optional .svmp.VideoStreamInfo videoInfo = 17;
    boolean hasVideoInfo();
    org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo getVideoInfo();
    
    // optional .svmp.WebRTCMessage webrtcMsg = 18;
    boolean hasWebrtcMsg();
    org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage getWebrtcMsg();
    
    // optional .svmp.RTCMessage stream = 19;
    boolean hasStream();
    org.mitre.svmp.protocol.SVMPProtocol.RTCMessage getStream();
  }
  public static final class Response extends
      com.google.protobuf.GeneratedMessageLite
      implements ResponseOrBuilder {
    // Use Response.newBuilder() to construct.
    private Response(Builder builder) {
      super(builder);
    }
    private Response(boolean noInit) {}
    
    private static final Response defaultInstance;
    public static Response getDefaultInstance() {
      return defaultInstance;
    }
    
    public Response getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum ResponseType
        implements com.google.protobuf.Internal.EnumLite {
      ERROR(0, 0),
      AUTH(1, 1),
      VMREADY(2, 2),
      SCREENINFO(3, 3),
      INTENT(4, 4),
      NOTIFICATION(5, 5),
      LOCATION(6, 6),
      WEBRTC(7, 7),
      PING(8, 8),
      APPS(9, 9),
      STREAM(10, 10),
      ;
      
      public static final int ERROR_VALUE = 0;
      public static final int AUTH_VALUE = 1;
      public static final int VMREADY_VALUE = 2;
      public static final int SCREENINFO_VALUE = 3;
      public static final int INTENT_VALUE = 4;
      public static final int NOTIFICATION_VALUE = 5;
      public static final int LOCATION_VALUE = 6;
      public static final int WEBRTC_VALUE = 7;
      public static final int PING_VALUE = 8;
      public static final int APPS_VALUE = 9;
      public static final int STREAM_VALUE = 10;
      
      
      public final int getNumber() { return value; }
      
      public static ResponseType valueOf(int value) {
        switch (value) {
          case 0: return ERROR;
          case 1: return AUTH;
          case 2: return VMREADY;
          case 3: return SCREENINFO;
          case 4: return INTENT;
          case 5: return NOTIFICATION;
          case 6: return LOCATION;
          case 7: return WEBRTC;
          case 8: return PING;
          case 9: return APPS;
          case 10: return STREAM;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<ResponseType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ResponseType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ResponseType>() {
              public ResponseType findValueByNumber(int number) {
                return ResponseType.valueOf(number);
              }
            };
      
      private final int value;
      
      private ResponseType(int index, int value) {
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:svmp.Response.ResponseType)
    }
    
    private int bitField0_;
    // required .svmp.Response.ResponseType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.mitre.svmp.protocol.SVMPProtocol.Response.ResponseType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.Response.ResponseType getType() {
      return type_;
    }
    
    // optional .svmp.AuthResponse authResponse = 3;
    public static final int AUTHRESPONSE_FIELD_NUMBER = 3;
    private org.mitre.svmp.protocol.SVMPProtocol.AuthResponse authResponse_;
    public boolean hasAuthResponse() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.AuthResponse getAuthResponse() {
      return authResponse_;
    }
    
    // optional .svmp.Intent intent = 4;
    public static final int INTENT_FIELD_NUMBER = 4;
    private org.mitre.svmp.protocol.SVMPProtocol.Intent intent_;
    public boolean hasIntent() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.Intent getIntent() {
      return intent_;
    }
    
    // optional .svmp.Notification notification = 5;
    public static final int NOTIFICATION_FIELD_NUMBER = 5;
    private org.mitre.svmp.protocol.SVMPProtocol.Notification notification_;
    public boolean hasNotification() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.Notification getNotification() {
      return notification_;
    }
    
    // optional .svmp.LocationResponse locationResponse = 6;
    public static final int LOCATIONRESPONSE_FIELD_NUMBER = 6;
    private org.mitre.svmp.protocol.SVMPProtocol.LocationResponse locationResponse_;
    public boolean hasLocationResponse() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.LocationResponse getLocationResponse() {
      return locationResponse_;
    }
    
    // optional .svmp.Ping pingResponse = 7;
    public static final int PINGRESPONSE_FIELD_NUMBER = 7;
    private org.mitre.svmp.protocol.SVMPProtocol.Ping pingResponse_;
    public boolean hasPingResponse() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.Ping getPingResponse() {
      return pingResponse_;
    }
    
    // optional .svmp.AppsResponse apps = 8;
    public static final int APPS_FIELD_NUMBER = 8;
    private org.mitre.svmp.protocol.SVMPProtocol.AppsResponse apps_;
    public boolean hasApps() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.AppsResponse getApps() {
      return apps_;
    }
    
    // optional .svmp.ScreenInfo screenInfo = 16;
    public static final int SCREENINFO_FIELD_NUMBER = 16;
    private org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo screenInfo_;
    public boolean hasScreenInfo() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo getScreenInfo() {
      return screenInfo_;
    }
    
    // optional .svmp.VideoStreamInfo videoInfo = 17;
    public static final int VIDEOINFO_FIELD_NUMBER = 17;
    private org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo videoInfo_;
    public boolean hasVideoInfo() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo getVideoInfo() {
      return videoInfo_;
    }
    
    // optional .svmp.WebRTCMessage webrtcMsg = 18;
    public static final int WEBRTCMSG_FIELD_NUMBER = 18;
    private org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage webrtcMsg_;
    public boolean hasWebrtcMsg() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage getWebrtcMsg() {
      return webrtcMsg_;
    }
    
    // optional .svmp.RTCMessage stream = 19;
    public static final int STREAM_FIELD_NUMBER = 19;
    private org.mitre.svmp.protocol.SVMPProtocol.RTCMessage stream_;
    public boolean hasStream() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.RTCMessage getStream() {
      return stream_;
    }
    
    private void initFields() {
      type_ = org.mitre.svmp.protocol.SVMPProtocol.Response.ResponseType.ERROR;
      authResponse_ = org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.getDefaultInstance();
      intent_ = org.mitre.svmp.protocol.SVMPProtocol.Intent.getDefaultInstance();
      notification_ = org.mitre.svmp.protocol.SVMPProtocol.Notification.getDefaultInstance();
      locationResponse_ = org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.getDefaultInstance();
      pingResponse_ = org.mitre.svmp.protocol.SVMPProtocol.Ping.getDefaultInstance();
      apps_ = org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.getDefaultInstance();
      screenInfo_ = org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo.getDefaultInstance();
      videoInfo_ = org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.getDefaultInstance();
      webrtcMsg_ = org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.getDefaultInstance();
      stream_ = org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasAuthResponse()) {
        if (!getAuthResponse().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasIntent()) {
        if (!getIntent().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasNotification()) {
        if (!getNotification().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasLocationResponse()) {
        if (!getLocationResponse().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPingResponse()) {
        if (!getPingResponse().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasApps()) {
        if (!getApps().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasScreenInfo()) {
        if (!getScreenInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, authResponse_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(4, intent_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(5, notification_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(6, locationResponse_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, pingResponse_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(8, apps_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(16, screenInfo_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(17, videoInfo_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(18, webrtcMsg_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(19, stream_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, authResponse_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, intent_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, notification_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, locationResponse_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, pingResponse_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, apps_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, screenInfo_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, videoInfo_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, webrtcMsg_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, stream_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.Response, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.ResponseOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.Response.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = org.mitre.svmp.protocol.SVMPProtocol.Response.ResponseType.ERROR;
        bitField0_ = (bitField0_ & ~0x00000001);
        authResponse_ = org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        intent_ = org.mitre.svmp.protocol.SVMPProtocol.Intent.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        notification_ = org.mitre.svmp.protocol.SVMPProtocol.Notification.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        locationResponse_ = org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000010);
        pingResponse_ = org.mitre.svmp.protocol.SVMPProtocol.Ping.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000020);
        apps_ = org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000040);
        screenInfo_ = org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000080);
        videoInfo_ = org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000100);
        webrtcMsg_ = org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000200);
        stream_ = org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Response getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.Response.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Response build() {
        org.mitre.svmp.protocol.SVMPProtocol.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.Response buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.Response result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Response buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.Response result = new org.mitre.svmp.protocol.SVMPProtocol.Response(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.authResponse_ = authResponse_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.intent_ = intent_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.notification_ = notification_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.locationResponse_ = locationResponse_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.pingResponse_ = pingResponse_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.apps_ = apps_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.screenInfo_ = screenInfo_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.videoInfo_ = videoInfo_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.webrtcMsg_ = webrtcMsg_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.stream_ = stream_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.Response other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.Response.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasAuthResponse()) {
          mergeAuthResponse(other.getAuthResponse());
        }
        if (other.hasIntent()) {
          mergeIntent(other.getIntent());
        }
        if (other.hasNotification()) {
          mergeNotification(other.getNotification());
        }
        if (other.hasLocationResponse()) {
          mergeLocationResponse(other.getLocationResponse());
        }
        if (other.hasPingResponse()) {
          mergePingResponse(other.getPingResponse());
        }
        if (other.hasApps()) {
          mergeApps(other.getApps());
        }
        if (other.hasScreenInfo()) {
          mergeScreenInfo(other.getScreenInfo());
        }
        if (other.hasVideoInfo()) {
          mergeVideoInfo(other.getVideoInfo());
        }
        if (other.hasWebrtcMsg()) {
          mergeWebrtcMsg(other.getWebrtcMsg());
        }
        if (other.hasStream()) {
          mergeStream(other.getStream());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (hasAuthResponse()) {
          if (!getAuthResponse().isInitialized()) {
            
            return false;
          }
        }
        if (hasIntent()) {
          if (!getIntent().isInitialized()) {
            
            return false;
          }
        }
        if (hasNotification()) {
          if (!getNotification().isInitialized()) {
            
            return false;
          }
        }
        if (hasLocationResponse()) {
          if (!getLocationResponse().isInitialized()) {
            
            return false;
          }
        }
        if (hasPingResponse()) {
          if (!getPingResponse().isInitialized()) {
            
            return false;
          }
        }
        if (hasApps()) {
          if (!getApps().isInitialized()) {
            
            return false;
          }
        }
        if (hasScreenInfo()) {
          if (!getScreenInfo().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.mitre.svmp.protocol.SVMPProtocol.Response.ResponseType value = org.mitre.svmp.protocol.SVMPProtocol.Response.ResponseType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 26: {
              org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.newBuilder();
              if (hasAuthResponse()) {
                subBuilder.mergeFrom(getAuthResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAuthResponse(subBuilder.buildPartial());
              break;
            }
            case 34: {
              org.mitre.svmp.protocol.SVMPProtocol.Intent.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.Intent.newBuilder();
              if (hasIntent()) {
                subBuilder.mergeFrom(getIntent());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setIntent(subBuilder.buildPartial());
              break;
            }
            case 42: {
              org.mitre.svmp.protocol.SVMPProtocol.Notification.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.Notification.newBuilder();
              if (hasNotification()) {
                subBuilder.mergeFrom(getNotification());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNotification(subBuilder.buildPartial());
              break;
            }
            case 50: {
              org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.newBuilder();
              if (hasLocationResponse()) {
                subBuilder.mergeFrom(getLocationResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLocationResponse(subBuilder.buildPartial());
              break;
            }
            case 58: {
              org.mitre.svmp.protocol.SVMPProtocol.Ping.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.Ping.newBuilder();
              if (hasPingResponse()) {
                subBuilder.mergeFrom(getPingResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPingResponse(subBuilder.buildPartial());
              break;
            }
            case 66: {
              org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.newBuilder();
              if (hasApps()) {
                subBuilder.mergeFrom(getApps());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setApps(subBuilder.buildPartial());
              break;
            }
            case 130: {
              org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo.newBuilder();
              if (hasScreenInfo()) {
                subBuilder.mergeFrom(getScreenInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setScreenInfo(subBuilder.buildPartial());
              break;
            }
            case 138: {
              org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.newBuilder();
              if (hasVideoInfo()) {
                subBuilder.mergeFrom(getVideoInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setVideoInfo(subBuilder.buildPartial());
              break;
            }
            case 146: {
              org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.newBuilder();
              if (hasWebrtcMsg()) {
                subBuilder.mergeFrom(getWebrtcMsg());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setWebrtcMsg(subBuilder.buildPartial());
              break;
            }
            case 154: {
              org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.newBuilder();
              if (hasStream()) {
                subBuilder.mergeFrom(getStream());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStream(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .svmp.Response.ResponseType type = 1;
      private org.mitre.svmp.protocol.SVMPProtocol.Response.ResponseType type_ = org.mitre.svmp.protocol.SVMPProtocol.Response.ResponseType.ERROR;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.Response.ResponseType getType() {
        return type_;
      }
      public Builder setType(org.mitre.svmp.protocol.SVMPProtocol.Response.ResponseType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.mitre.svmp.protocol.SVMPProtocol.Response.ResponseType.ERROR;
        
        return this;
      }
      
      // optional .svmp.AuthResponse authResponse = 3;
      private org.mitre.svmp.protocol.SVMPProtocol.AuthResponse authResponse_ = org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.getDefaultInstance();
      public boolean hasAuthResponse() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.AuthResponse getAuthResponse() {
        return authResponse_;
      }
      public Builder setAuthResponse(org.mitre.svmp.protocol.SVMPProtocol.AuthResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        authResponse_ = value;
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setAuthResponse(
          org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.Builder builderForValue) {
        authResponse_ = builderForValue.build();
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeAuthResponse(org.mitre.svmp.protocol.SVMPProtocol.AuthResponse value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            authResponse_ != org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.getDefaultInstance()) {
          authResponse_ =
            org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.newBuilder(authResponse_).mergeFrom(value).buildPartial();
        } else {
          authResponse_ = value;
        }
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearAuthResponse() {
        authResponse_ = org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      // optional .svmp.Intent intent = 4;
      private org.mitre.svmp.protocol.SVMPProtocol.Intent intent_ = org.mitre.svmp.protocol.SVMPProtocol.Intent.getDefaultInstance();
      public boolean hasIntent() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.Intent getIntent() {
        return intent_;
      }
      public Builder setIntent(org.mitre.svmp.protocol.SVMPProtocol.Intent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        intent_ = value;
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setIntent(
          org.mitre.svmp.protocol.SVMPProtocol.Intent.Builder builderForValue) {
        intent_ = builderForValue.build();
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeIntent(org.mitre.svmp.protocol.SVMPProtocol.Intent value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            intent_ != org.mitre.svmp.protocol.SVMPProtocol.Intent.getDefaultInstance()) {
          intent_ =
            org.mitre.svmp.protocol.SVMPProtocol.Intent.newBuilder(intent_).mergeFrom(value).buildPartial();
        } else {
          intent_ = value;
        }
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearIntent() {
        intent_ = org.mitre.svmp.protocol.SVMPProtocol.Intent.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      // optional .svmp.Notification notification = 5;
      private org.mitre.svmp.protocol.SVMPProtocol.Notification notification_ = org.mitre.svmp.protocol.SVMPProtocol.Notification.getDefaultInstance();
      public boolean hasNotification() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.Notification getNotification() {
        return notification_;
      }
      public Builder setNotification(org.mitre.svmp.protocol.SVMPProtocol.Notification value) {
        if (value == null) {
          throw new NullPointerException();
        }
        notification_ = value;
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setNotification(
          org.mitre.svmp.protocol.SVMPProtocol.Notification.Builder builderForValue) {
        notification_ = builderForValue.build();
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeNotification(org.mitre.svmp.protocol.SVMPProtocol.Notification value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            notification_ != org.mitre.svmp.protocol.SVMPProtocol.Notification.getDefaultInstance()) {
          notification_ =
            org.mitre.svmp.protocol.SVMPProtocol.Notification.newBuilder(notification_).mergeFrom(value).buildPartial();
        } else {
          notification_ = value;
        }
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearNotification() {
        notification_ = org.mitre.svmp.protocol.SVMPProtocol.Notification.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      // optional .svmp.LocationResponse locationResponse = 6;
      private org.mitre.svmp.protocol.SVMPProtocol.LocationResponse locationResponse_ = org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.getDefaultInstance();
      public boolean hasLocationResponse() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.LocationResponse getLocationResponse() {
        return locationResponse_;
      }
      public Builder setLocationResponse(org.mitre.svmp.protocol.SVMPProtocol.LocationResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        locationResponse_ = value;
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setLocationResponse(
          org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.Builder builderForValue) {
        locationResponse_ = builderForValue.build();
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeLocationResponse(org.mitre.svmp.protocol.SVMPProtocol.LocationResponse value) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            locationResponse_ != org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.getDefaultInstance()) {
          locationResponse_ =
            org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.newBuilder(locationResponse_).mergeFrom(value).buildPartial();
        } else {
          locationResponse_ = value;
        }
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearLocationResponse() {
        locationResponse_ = org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      // optional .svmp.Ping pingResponse = 7;
      private org.mitre.svmp.protocol.SVMPProtocol.Ping pingResponse_ = org.mitre.svmp.protocol.SVMPProtocol.Ping.getDefaultInstance();
      public boolean hasPingResponse() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.Ping getPingResponse() {
        return pingResponse_;
      }
      public Builder setPingResponse(org.mitre.svmp.protocol.SVMPProtocol.Ping value) {
        if (value == null) {
          throw new NullPointerException();
        }
        pingResponse_ = value;
        
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder setPingResponse(
          org.mitre.svmp.protocol.SVMPProtocol.Ping.Builder builderForValue) {
        pingResponse_ = builderForValue.build();
        
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder mergePingResponse(org.mitre.svmp.protocol.SVMPProtocol.Ping value) {
        if (((bitField0_ & 0x00000020) == 0x00000020) &&
            pingResponse_ != org.mitre.svmp.protocol.SVMPProtocol.Ping.getDefaultInstance()) {
          pingResponse_ =
            org.mitre.svmp.protocol.SVMPProtocol.Ping.newBuilder(pingResponse_).mergeFrom(value).buildPartial();
        } else {
          pingResponse_ = value;
        }
        
        bitField0_ |= 0x00000020;
        return this;
      }
      public Builder clearPingResponse() {
        pingResponse_ = org.mitre.svmp.protocol.SVMPProtocol.Ping.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      // optional .svmp.AppsResponse apps = 8;
      private org.mitre.svmp.protocol.SVMPProtocol.AppsResponse apps_ = org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.getDefaultInstance();
      public boolean hasApps() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.AppsResponse getApps() {
        return apps_;
      }
      public Builder setApps(org.mitre.svmp.protocol.SVMPProtocol.AppsResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        apps_ = value;
        
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder setApps(
          org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.Builder builderForValue) {
        apps_ = builderForValue.build();
        
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder mergeApps(org.mitre.svmp.protocol.SVMPProtocol.AppsResponse value) {
        if (((bitField0_ & 0x00000040) == 0x00000040) &&
            apps_ != org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.getDefaultInstance()) {
          apps_ =
            org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.newBuilder(apps_).mergeFrom(value).buildPartial();
        } else {
          apps_ = value;
        }
        
        bitField0_ |= 0x00000040;
        return this;
      }
      public Builder clearApps() {
        apps_ = org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      // optional .svmp.ScreenInfo screenInfo = 16;
      private org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo screenInfo_ = org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo.getDefaultInstance();
      public boolean hasScreenInfo() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo getScreenInfo() {
        return screenInfo_;
      }
      public Builder setScreenInfo(org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        screenInfo_ = value;
        
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder setScreenInfo(
          org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo.Builder builderForValue) {
        screenInfo_ = builderForValue.build();
        
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder mergeScreenInfo(org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo value) {
        if (((bitField0_ & 0x00000080) == 0x00000080) &&
            screenInfo_ != org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo.getDefaultInstance()) {
          screenInfo_ =
            org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo.newBuilder(screenInfo_).mergeFrom(value).buildPartial();
        } else {
          screenInfo_ = value;
        }
        
        bitField0_ |= 0x00000080;
        return this;
      }
      public Builder clearScreenInfo() {
        screenInfo_ = org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      // optional .svmp.VideoStreamInfo videoInfo = 17;
      private org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo videoInfo_ = org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.getDefaultInstance();
      public boolean hasVideoInfo() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo getVideoInfo() {
        return videoInfo_;
      }
      public Builder setVideoInfo(org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        videoInfo_ = value;
        
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder setVideoInfo(
          org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.Builder builderForValue) {
        videoInfo_ = builderForValue.build();
        
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder mergeVideoInfo(org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo value) {
        if (((bitField0_ & 0x00000100) == 0x00000100) &&
            videoInfo_ != org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.getDefaultInstance()) {
          videoInfo_ =
            org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.newBuilder(videoInfo_).mergeFrom(value).buildPartial();
        } else {
          videoInfo_ = value;
        }
        
        bitField0_ |= 0x00000100;
        return this;
      }
      public Builder clearVideoInfo() {
        videoInfo_ = org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      // optional .svmp.WebRTCMessage webrtcMsg = 18;
      private org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage webrtcMsg_ = org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.getDefaultInstance();
      public boolean hasWebrtcMsg() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage getWebrtcMsg() {
        return webrtcMsg_;
      }
      public Builder setWebrtcMsg(org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        webrtcMsg_ = value;
        
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder setWebrtcMsg(
          org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.Builder builderForValue) {
        webrtcMsg_ = builderForValue.build();
        
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder mergeWebrtcMsg(org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage value) {
        if (((bitField0_ & 0x00000200) == 0x00000200) &&
            webrtcMsg_ != org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.getDefaultInstance()) {
          webrtcMsg_ =
            org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.newBuilder(webrtcMsg_).mergeFrom(value).buildPartial();
        } else {
          webrtcMsg_ = value;
        }
        
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder clearWebrtcMsg() {
        webrtcMsg_ = org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      
      // optional .svmp.RTCMessage stream = 19;
      private org.mitre.svmp.protocol.SVMPProtocol.RTCMessage stream_ = org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.getDefaultInstance();
      public boolean hasStream() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.RTCMessage getStream() {
        return stream_;
      }
      public Builder setStream(org.mitre.svmp.protocol.SVMPProtocol.RTCMessage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        stream_ = value;
        
        bitField0_ |= 0x00000400;
        return this;
      }
      public Builder setStream(
          org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.Builder builderForValue) {
        stream_ = builderForValue.build();
        
        bitField0_ |= 0x00000400;
        return this;
      }
      public Builder mergeStream(org.mitre.svmp.protocol.SVMPProtocol.RTCMessage value) {
        if (((bitField0_ & 0x00000400) == 0x00000400) &&
            stream_ != org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.getDefaultInstance()) {
          stream_ =
            org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.newBuilder(stream_).mergeFrom(value).buildPartial();
        } else {
          stream_ = value;
        }
        
        bitField0_ |= 0x00000400;
        return this;
      }
      public Builder clearStream() {
        stream_ = org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.Response)
    }
    
    static {
      defaultInstance = new Response(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.Response)
  }
  
  public interface IntentOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .svmp.IntentAction action = 1;
    boolean hasAction();
    org.mitre.svmp.protocol.SVMPProtocol.IntentAction getAction();
    
    // repeated .svmp.Intent.Tuple extras = 2;
    java.util.List<org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple> 
        getExtrasList();
    org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple getExtras(int index);
    int getExtrasCount();
    
    // optional string data = 3;
    boolean hasData();
    String getData();
    
    // repeated int32 flags = 4;
    java.util.List<java.lang.Integer> getFlagsList();
    int getFlagsCount();
    int getFlags(int index);
    
    // repeated string categories = 5;
    java.util.List<String> getCategoriesList();
    int getCategoriesCount();
    String getCategories(int index);
    
    // optional string intentAction = 6;
    boolean hasIntentAction();
    String getIntentAction();
    
    // optional string type = 7;
    boolean hasType();
    String getType();
  }
  public static final class Intent extends
      com.google.protobuf.GeneratedMessageLite
      implements IntentOrBuilder {
    // Use Intent.newBuilder() to construct.
    private Intent(Builder builder) {
      super(builder);
    }
    private Intent(boolean noInit) {}
    
    private static final Intent defaultInstance;
    public static Intent getDefaultInstance() {
      return defaultInstance;
    }
    
    public Intent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public interface TupleOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {
      
      // required string key = 1;
      boolean hasKey();
      String getKey();
      
      // required string value = 2;
      boolean hasValue();
      String getValue();
    }
    public static final class Tuple extends
        com.google.protobuf.GeneratedMessageLite
        implements TupleOrBuilder {
      // Use Tuple.newBuilder() to construct.
      private Tuple(Builder builder) {
        super(builder);
      }
      private Tuple(boolean noInit) {}
      
      private static final Tuple defaultInstance;
      public static Tuple getDefaultInstance() {
        return defaultInstance;
      }
      
      public Tuple getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      private int bitField0_;
      // required string key = 1;
      public static final int KEY_FIELD_NUMBER = 1;
      private java.lang.Object key_;
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getKey() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            key_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // required string value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private java.lang.Object value_;
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            value_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      private void initFields() {
        key_ = "";
        value_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasKey()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getKeyBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getValueBytes());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getKeyBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getValueBytes());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple, Builder>
          implements org.mitre.svmp.protocol.SVMPProtocol.Intent.TupleOrBuilder {
        // Construct using org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          key_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple getDefaultInstanceForType() {
          return org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple.getDefaultInstance();
        }
        
        public org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple build() {
          org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple buildPartial() {
          org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple result = new org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.key_ = key_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          result.bitField0_ = to_bitField0_;
          return result;
        }
        
        public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple other) {
          if (other == org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple.getDefaultInstance()) return this;
          if (other.hasKey()) {
            setKey(other.getKey());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasKey()) {
            
            return false;
          }
          if (!hasValue()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  
                  return this;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                key_ = input.readBytes();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                value_ = input.readBytes();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required string key = 1;
        private java.lang.Object key_ = "";
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public String getKey() {
          java.lang.Object ref = key_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            key_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setKey(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          key_ = value;
          
          return this;
        }
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = getDefaultInstance().getKey();
          
          return this;
        }
        void setKey(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000001;
          key_ = value;
          
        }
        
        // required string value = 2;
        private java.lang.Object value_ = "";
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            value_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setValue(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          
          return this;
        }
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = getDefaultInstance().getValue();
          
          return this;
        }
        void setValue(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000002;
          value_ = value;
          
        }
        
        // @@protoc_insertion_point(builder_scope:svmp.Intent.Tuple)
      }
      
      static {
        defaultInstance = new Tuple(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:svmp.Intent.Tuple)
    }
    
    private int bitField0_;
    // required .svmp.IntentAction action = 1;
    public static final int ACTION_FIELD_NUMBER = 1;
    private org.mitre.svmp.protocol.SVMPProtocol.IntentAction action_;
    public boolean hasAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.IntentAction getAction() {
      return action_;
    }
    
    // repeated .svmp.Intent.Tuple extras = 2;
    public static final int EXTRAS_FIELD_NUMBER = 2;
    private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple> extras_;
    public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple> getExtrasList() {
      return extras_;
    }
    public java.util.List<? extends org.mitre.svmp.protocol.SVMPProtocol.Intent.TupleOrBuilder> 
        getExtrasOrBuilderList() {
      return extras_;
    }
    public int getExtrasCount() {
      return extras_.size();
    }
    public org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple getExtras(int index) {
      return extras_.get(index);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.Intent.TupleOrBuilder getExtrasOrBuilder(
        int index) {
      return extras_.get(index);
    }
    
    // optional string data = 3;
    public static final int DATA_FIELD_NUMBER = 3;
    private java.lang.Object data_;
    public boolean hasData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getData() {
      java.lang.Object ref = data_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          data_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDataBytes() {
      java.lang.Object ref = data_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        data_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated int32 flags = 4;
    public static final int FLAGS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> flags_;
    public java.util.List<java.lang.Integer>
        getFlagsList() {
      return flags_;
    }
    public int getFlagsCount() {
      return flags_.size();
    }
    public int getFlags(int index) {
      return flags_.get(index);
    }
    
    // repeated string categories = 5;
    public static final int CATEGORIES_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList categories_;
    public java.util.List<String>
        getCategoriesList() {
      return categories_;
    }
    public int getCategoriesCount() {
      return categories_.size();
    }
    public String getCategories(int index) {
      return categories_.get(index);
    }
    
    // optional string intentAction = 6;
    public static final int INTENTACTION_FIELD_NUMBER = 6;
    private java.lang.Object intentAction_;
    public boolean hasIntentAction() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getIntentAction() {
      java.lang.Object ref = intentAction_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          intentAction_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIntentActionBytes() {
      java.lang.Object ref = intentAction_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        intentAction_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string type = 7;
    public static final int TYPE_FIELD_NUMBER = 7;
    private java.lang.Object type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          type_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      action_ = org.mitre.svmp.protocol.SVMPProtocol.IntentAction.ACTION_VIEW;
      extras_ = java.util.Collections.emptyList();
      data_ = "";
      flags_ = java.util.Collections.emptyList();;
      categories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      intentAction_ = "";
      type_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasAction()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getExtrasCount(); i++) {
        if (!getExtras(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, action_.getNumber());
      }
      for (int i = 0; i < extras_.size(); i++) {
        output.writeMessage(2, extras_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, getDataBytes());
      }
      for (int i = 0; i < flags_.size(); i++) {
        output.writeInt32(4, flags_.get(i));
      }
      for (int i = 0; i < categories_.size(); i++) {
        output.writeBytes(5, categories_.getByteString(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(6, getIntentActionBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(7, getTypeBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, action_.getNumber());
      }
      for (int i = 0; i < extras_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, extras_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDataBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < flags_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(flags_.get(i));
        }
        size += dataSize;
        size += 1 * getFlagsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < categories_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(categories_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getCategoriesList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getIntentActionBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getTypeBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.Intent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Intent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Intent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Intent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Intent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Intent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Intent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Intent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Intent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Intent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.Intent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.Intent, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.IntentOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.Intent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        action_ = org.mitre.svmp.protocol.SVMPProtocol.IntentAction.ACTION_VIEW;
        bitField0_ = (bitField0_ & ~0x00000001);
        extras_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        data_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        flags_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        categories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        intentAction_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Intent getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.Intent.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Intent build() {
        org.mitre.svmp.protocol.SVMPProtocol.Intent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.Intent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.Intent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Intent buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.Intent result = new org.mitre.svmp.protocol.SVMPProtocol.Intent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.action_ = action_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          extras_ = java.util.Collections.unmodifiableList(extras_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.extras_ = extras_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.data_ = data_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          flags_ = java.util.Collections.unmodifiableList(flags_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.flags_ = flags_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          categories_ = new com.google.protobuf.UnmodifiableLazyStringList(
              categories_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.categories_ = categories_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000004;
        }
        result.intentAction_ = intentAction_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.Intent other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.Intent.getDefaultInstance()) return this;
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (!other.extras_.isEmpty()) {
          if (extras_.isEmpty()) {
            extras_ = other.extras_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureExtrasIsMutable();
            extras_.addAll(other.extras_);
          }
          
        }
        if (other.hasData()) {
          setData(other.getData());
        }
        if (!other.flags_.isEmpty()) {
          if (flags_.isEmpty()) {
            flags_ = other.flags_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureFlagsIsMutable();
            flags_.addAll(other.flags_);
          }
          
        }
        if (!other.categories_.isEmpty()) {
          if (categories_.isEmpty()) {
            categories_ = other.categories_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureCategoriesIsMutable();
            categories_.addAll(other.categories_);
          }
          
        }
        if (other.hasIntentAction()) {
          setIntentAction(other.getIntentAction());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasAction()) {
          
          return false;
        }
        for (int i = 0; i < getExtrasCount(); i++) {
          if (!getExtras(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.mitre.svmp.protocol.SVMPProtocol.IntentAction value = org.mitre.svmp.protocol.SVMPProtocol.IntentAction.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                action_ = value;
              }
              break;
            }
            case 18: {
              org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addExtras(subBuilder.buildPartial());
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              data_ = input.readBytes();
              break;
            }
            case 32: {
              ensureFlagsIsMutable();
              flags_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addFlags(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              ensureCategoriesIsMutable();
              categories_.add(input.readBytes());
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              intentAction_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              type_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .svmp.IntentAction action = 1;
      private org.mitre.svmp.protocol.SVMPProtocol.IntentAction action_ = org.mitre.svmp.protocol.SVMPProtocol.IntentAction.ACTION_VIEW;
      public boolean hasAction() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.IntentAction getAction() {
        return action_;
      }
      public Builder setAction(org.mitre.svmp.protocol.SVMPProtocol.IntentAction value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        action_ = value;
        
        return this;
      }
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000001);
        action_ = org.mitre.svmp.protocol.SVMPProtocol.IntentAction.ACTION_VIEW;
        
        return this;
      }
      
      // repeated .svmp.Intent.Tuple extras = 2;
      private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple> extras_ =
        java.util.Collections.emptyList();
      private void ensureExtrasIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          extras_ = new java.util.ArrayList<org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple>(extras_);
          bitField0_ |= 0x00000002;
         }
      }
      
      public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple> getExtrasList() {
        return java.util.Collections.unmodifiableList(extras_);
      }
      public int getExtrasCount() {
        return extras_.size();
      }
      public org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple getExtras(int index) {
        return extras_.get(index);
      }
      public Builder setExtras(
          int index, org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtrasIsMutable();
        extras_.set(index, value);
        
        return this;
      }
      public Builder setExtras(
          int index, org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple.Builder builderForValue) {
        ensureExtrasIsMutable();
        extras_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addExtras(org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtrasIsMutable();
        extras_.add(value);
        
        return this;
      }
      public Builder addExtras(
          int index, org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtrasIsMutable();
        extras_.add(index, value);
        
        return this;
      }
      public Builder addExtras(
          org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple.Builder builderForValue) {
        ensureExtrasIsMutable();
        extras_.add(builderForValue.build());
        
        return this;
      }
      public Builder addExtras(
          int index, org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple.Builder builderForValue) {
        ensureExtrasIsMutable();
        extras_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllExtras(
          java.lang.Iterable<? extends org.mitre.svmp.protocol.SVMPProtocol.Intent.Tuple> values) {
        ensureExtrasIsMutable();
        super.addAll(values, extras_);
        
        return this;
      }
      public Builder clearExtras() {
        extras_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }
      public Builder removeExtras(int index) {
        ensureExtrasIsMutable();
        extras_.remove(index);
        
        return this;
      }
      
      // optional string data = 3;
      private java.lang.Object data_ = "";
      public boolean hasData() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getData() {
        java.lang.Object ref = data_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          data_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setData(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        data_ = value;
        
        return this;
      }
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = getDefaultInstance().getData();
        
        return this;
      }
      void setData(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        data_ = value;
        
      }
      
      // repeated int32 flags = 4;
      private java.util.List<java.lang.Integer> flags_ = java.util.Collections.emptyList();;
      private void ensureFlagsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          flags_ = new java.util.ArrayList<java.lang.Integer>(flags_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<java.lang.Integer>
          getFlagsList() {
        return java.util.Collections.unmodifiableList(flags_);
      }
      public int getFlagsCount() {
        return flags_.size();
      }
      public int getFlags(int index) {
        return flags_.get(index);
      }
      public Builder setFlags(
          int index, int value) {
        ensureFlagsIsMutable();
        flags_.set(index, value);
        
        return this;
      }
      public Builder addFlags(int value) {
        ensureFlagsIsMutable();
        flags_.add(value);
        
        return this;
      }
      public Builder addAllFlags(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFlagsIsMutable();
        super.addAll(values, flags_);
        
        return this;
      }
      public Builder clearFlags() {
        flags_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        
        return this;
      }
      
      // repeated string categories = 5;
      private com.google.protobuf.LazyStringList categories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCategoriesIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          categories_ = new com.google.protobuf.LazyStringArrayList(categories_);
          bitField0_ |= 0x00000010;
         }
      }
      public java.util.List<String>
          getCategoriesList() {
        return java.util.Collections.unmodifiableList(categories_);
      }
      public int getCategoriesCount() {
        return categories_.size();
      }
      public String getCategories(int index) {
        return categories_.get(index);
      }
      public Builder setCategories(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCategoriesIsMutable();
        categories_.set(index, value);
        
        return this;
      }
      public Builder addCategories(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCategoriesIsMutable();
        categories_.add(value);
        
        return this;
      }
      public Builder addAllCategories(
          java.lang.Iterable<String> values) {
        ensureCategoriesIsMutable();
        super.addAll(values, categories_);
        
        return this;
      }
      public Builder clearCategories() {
        categories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        
        return this;
      }
      void addCategories(com.google.protobuf.ByteString value) {
        ensureCategoriesIsMutable();
        categories_.add(value);
        
      }
      
      // optional string intentAction = 6;
      private java.lang.Object intentAction_ = "";
      public boolean hasIntentAction() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getIntentAction() {
        java.lang.Object ref = intentAction_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          intentAction_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setIntentAction(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        intentAction_ = value;
        
        return this;
      }
      public Builder clearIntentAction() {
        bitField0_ = (bitField0_ & ~0x00000020);
        intentAction_ = getDefaultInstance().getIntentAction();
        
        return this;
      }
      void setIntentAction(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        intentAction_ = value;
        
      }
      
      // optional string type = 7;
      private java.lang.Object type_ = "";
      public boolean hasType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setType(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        type_ = value;
        
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        type_ = getDefaultInstance().getType();
        
        return this;
      }
      void setType(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        type_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.Intent)
    }
    
    static {
      defaultInstance = new Intent(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.Intent)
  }
  
  public interface RTCMessageOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional bytes frameBytes = 1;
    boolean hasFrameBytes();
    com.google.protobuf.ByteString getFrameBytes();
    
    // optional int32 quality = 2;
    boolean hasQuality();
    int getQuality();
    
    // optional int32 period = 3;
    boolean hasPeriod();
    int getPeriod();
    
    // optional string format = 4;
    boolean hasFormat();
    String getFormat();
    
    // optional bool toScale = 5;
    boolean hasToScale();
    boolean getToScale();
    
    // optional bool toDeflate = 6;
    boolean hasToDeflate();
    boolean getToDeflate();
    
    // optional string tag = 7;
    boolean hasTag();
    String getTag();
    
    // optional int32 compressLevel = 8;
    boolean hasCompressLevel();
    int getCompressLevel();
    
    // optional int32 compressionStrategy = 9;
    boolean hasCompressionStrategy();
    int getCompressionStrategy();
    
    // optional int32 dividingFactor = 10;
    boolean hasDividingFactor();
    int getDividingFactor();
    
    // optional int32 requiredSection = 11;
    boolean hasRequiredSection();
    int getRequiredSection();
  }
  public static final class RTCMessage extends
      com.google.protobuf.GeneratedMessageLite
      implements RTCMessageOrBuilder {
    // Use RTCMessage.newBuilder() to construct.
    private RTCMessage(Builder builder) {
      super(builder);
    }
    private RTCMessage(boolean noInit) {}
    
    private static final RTCMessage defaultInstance;
    public static RTCMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public RTCMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional bytes frameBytes = 1;
    public static final int FRAMEBYTES_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString frameBytes_;
    public boolean hasFrameBytes() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.google.protobuf.ByteString getFrameBytes() {
      return frameBytes_;
    }
    
    // optional int32 quality = 2;
    public static final int QUALITY_FIELD_NUMBER = 2;
    private int quality_;
    public boolean hasQuality() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getQuality() {
      return quality_;
    }
    
    // optional int32 period = 3;
    public static final int PERIOD_FIELD_NUMBER = 3;
    private int period_;
    public boolean hasPeriod() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getPeriod() {
      return period_;
    }
    
    // optional string format = 4;
    public static final int FORMAT_FIELD_NUMBER = 4;
    private java.lang.Object format_;
    public boolean hasFormat() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getFormat() {
      java.lang.Object ref = format_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          format_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFormatBytes() {
      java.lang.Object ref = format_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        format_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool toScale = 5;
    public static final int TOSCALE_FIELD_NUMBER = 5;
    private boolean toScale_;
    public boolean hasToScale() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public boolean getToScale() {
      return toScale_;
    }
    
    // optional bool toDeflate = 6;
    public static final int TODEFLATE_FIELD_NUMBER = 6;
    private boolean toDeflate_;
    public boolean hasToDeflate() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getToDeflate() {
      return toDeflate_;
    }
    
    // optional string tag = 7;
    public static final int TAG_FIELD_NUMBER = 7;
    private java.lang.Object tag_;
    public boolean hasTag() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getTag() {
      java.lang.Object ref = tag_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          tag_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTagBytes() {
      java.lang.Object ref = tag_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        tag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 compressLevel = 8;
    public static final int COMPRESSLEVEL_FIELD_NUMBER = 8;
    private int compressLevel_;
    public boolean hasCompressLevel() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getCompressLevel() {
      return compressLevel_;
    }
    
    // optional int32 compressionStrategy = 9;
    public static final int COMPRESSIONSTRATEGY_FIELD_NUMBER = 9;
    private int compressionStrategy_;
    public boolean hasCompressionStrategy() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getCompressionStrategy() {
      return compressionStrategy_;
    }
    
    // optional int32 dividingFactor = 10;
    public static final int DIVIDINGFACTOR_FIELD_NUMBER = 10;
    private int dividingFactor_;
    public boolean hasDividingFactor() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getDividingFactor() {
      return dividingFactor_;
    }
    
    // optional int32 requiredSection = 11;
    public static final int REQUIREDSECTION_FIELD_NUMBER = 11;
    private int requiredSection_;
    public boolean hasRequiredSection() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getRequiredSection() {
      return requiredSection_;
    }
    
    private void initFields() {
      frameBytes_ = com.google.protobuf.ByteString.EMPTY;
      quality_ = 0;
      period_ = 0;
      format_ = "";
      toScale_ = false;
      toDeflate_ = false;
      tag_ = "";
      compressLevel_ = 0;
      compressionStrategy_ = 0;
      dividingFactor_ = 0;
      requiredSection_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, frameBytes_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, quality_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, period_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getFormatBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, toScale_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, toDeflate_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getTagBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, compressLevel_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, compressionStrategy_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, dividingFactor_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, requiredSection_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, frameBytes_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, quality_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, period_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getFormatBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, toScale_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, toDeflate_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getTagBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, compressLevel_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, compressionStrategy_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, dividingFactor_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, requiredSection_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.RTCMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RTCMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RTCMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RTCMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RTCMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RTCMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RTCMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RTCMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RTCMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RTCMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.RTCMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.RTCMessage, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.RTCMessageOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        frameBytes_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        quality_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        period_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        format_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        toScale_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        toDeflate_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        tag_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        compressLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        compressionStrategy_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        dividingFactor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        requiredSection_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.RTCMessage getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.RTCMessage build() {
        org.mitre.svmp.protocol.SVMPProtocol.RTCMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.RTCMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.RTCMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.RTCMessage buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.RTCMessage result = new org.mitre.svmp.protocol.SVMPProtocol.RTCMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.frameBytes_ = frameBytes_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.quality_ = quality_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.period_ = period_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.format_ = format_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.toScale_ = toScale_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.toDeflate_ = toDeflate_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.tag_ = tag_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.compressLevel_ = compressLevel_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.compressionStrategy_ = compressionStrategy_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.dividingFactor_ = dividingFactor_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.requiredSection_ = requiredSection_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.RTCMessage other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.RTCMessage.getDefaultInstance()) return this;
        if (other.hasFrameBytes()) {
          setFrameBytes(other.getFrameBytes());
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        if (other.hasPeriod()) {
          setPeriod(other.getPeriod());
        }
        if (other.hasFormat()) {
          setFormat(other.getFormat());
        }
        if (other.hasToScale()) {
          setToScale(other.getToScale());
        }
        if (other.hasToDeflate()) {
          setToDeflate(other.getToDeflate());
        }
        if (other.hasTag()) {
          setTag(other.getTag());
        }
        if (other.hasCompressLevel()) {
          setCompressLevel(other.getCompressLevel());
        }
        if (other.hasCompressionStrategy()) {
          setCompressionStrategy(other.getCompressionStrategy());
        }
        if (other.hasDividingFactor()) {
          setDividingFactor(other.getDividingFactor());
        }
        if (other.hasRequiredSection()) {
          setRequiredSection(other.getRequiredSection());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              frameBytes_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              quality_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              period_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              format_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              toScale_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              toDeflate_ = input.readBool();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              tag_ = input.readBytes();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              compressLevel_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              compressionStrategy_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              dividingFactor_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              requiredSection_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bytes frameBytes = 1;
      private com.google.protobuf.ByteString frameBytes_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasFrameBytes() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.google.protobuf.ByteString getFrameBytes() {
        return frameBytes_;
      }
      public Builder setFrameBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        frameBytes_ = value;
        
        return this;
      }
      public Builder clearFrameBytes() {
        bitField0_ = (bitField0_ & ~0x00000001);
        frameBytes_ = getDefaultInstance().getFrameBytes();
        
        return this;
      }
      
      // optional int32 quality = 2;
      private int quality_ ;
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getQuality() {
        return quality_;
      }
      public Builder setQuality(int value) {
        bitField0_ |= 0x00000002;
        quality_ = value;
        
        return this;
      }
      public Builder clearQuality() {
        bitField0_ = (bitField0_ & ~0x00000002);
        quality_ = 0;
        
        return this;
      }
      
      // optional int32 period = 3;
      private int period_ ;
      public boolean hasPeriod() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getPeriod() {
        return period_;
      }
      public Builder setPeriod(int value) {
        bitField0_ |= 0x00000004;
        period_ = value;
        
        return this;
      }
      public Builder clearPeriod() {
        bitField0_ = (bitField0_ & ~0x00000004);
        period_ = 0;
        
        return this;
      }
      
      // optional string format = 4;
      private java.lang.Object format_ = "";
      public boolean hasFormat() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getFormat() {
        java.lang.Object ref = format_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          format_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFormat(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        format_ = value;
        
        return this;
      }
      public Builder clearFormat() {
        bitField0_ = (bitField0_ & ~0x00000008);
        format_ = getDefaultInstance().getFormat();
        
        return this;
      }
      void setFormat(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        format_ = value;
        
      }
      
      // optional bool toScale = 5;
      private boolean toScale_ ;
      public boolean hasToScale() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getToScale() {
        return toScale_;
      }
      public Builder setToScale(boolean value) {
        bitField0_ |= 0x00000010;
        toScale_ = value;
        
        return this;
      }
      public Builder clearToScale() {
        bitField0_ = (bitField0_ & ~0x00000010);
        toScale_ = false;
        
        return this;
      }
      
      // optional bool toDeflate = 6;
      private boolean toDeflate_ ;
      public boolean hasToDeflate() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public boolean getToDeflate() {
        return toDeflate_;
      }
      public Builder setToDeflate(boolean value) {
        bitField0_ |= 0x00000020;
        toDeflate_ = value;
        
        return this;
      }
      public Builder clearToDeflate() {
        bitField0_ = (bitField0_ & ~0x00000020);
        toDeflate_ = false;
        
        return this;
      }
      
      // optional string tag = 7;
      private java.lang.Object tag_ = "";
      public boolean hasTag() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getTag() {
        java.lang.Object ref = tag_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          tag_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTag(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        tag_ = value;
        
        return this;
      }
      public Builder clearTag() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tag_ = getDefaultInstance().getTag();
        
        return this;
      }
      void setTag(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        tag_ = value;
        
      }
      
      // optional int32 compressLevel = 8;
      private int compressLevel_ ;
      public boolean hasCompressLevel() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getCompressLevel() {
        return compressLevel_;
      }
      public Builder setCompressLevel(int value) {
        bitField0_ |= 0x00000080;
        compressLevel_ = value;
        
        return this;
      }
      public Builder clearCompressLevel() {
        bitField0_ = (bitField0_ & ~0x00000080);
        compressLevel_ = 0;
        
        return this;
      }
      
      // optional int32 compressionStrategy = 9;
      private int compressionStrategy_ ;
      public boolean hasCompressionStrategy() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getCompressionStrategy() {
        return compressionStrategy_;
      }
      public Builder setCompressionStrategy(int value) {
        bitField0_ |= 0x00000100;
        compressionStrategy_ = value;
        
        return this;
      }
      public Builder clearCompressionStrategy() {
        bitField0_ = (bitField0_ & ~0x00000100);
        compressionStrategy_ = 0;
        
        return this;
      }
      
      // optional int32 dividingFactor = 10;
      private int dividingFactor_ ;
      public boolean hasDividingFactor() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getDividingFactor() {
        return dividingFactor_;
      }
      public Builder setDividingFactor(int value) {
        bitField0_ |= 0x00000200;
        dividingFactor_ = value;
        
        return this;
      }
      public Builder clearDividingFactor() {
        bitField0_ = (bitField0_ & ~0x00000200);
        dividingFactor_ = 0;
        
        return this;
      }
      
      // optional int32 requiredSection = 11;
      private int requiredSection_ ;
      public boolean hasRequiredSection() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getRequiredSection() {
        return requiredSection_;
      }
      public Builder setRequiredSection(int value) {
        bitField0_ |= 0x00000400;
        requiredSection_ = value;
        
        return this;
      }
      public Builder clearRequiredSection() {
        bitField0_ = (bitField0_ & ~0x00000400);
        requiredSection_ = 0;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.RTCMessage)
    }
    
    static {
      defaultInstance = new RTCMessage(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.RTCMessage)
  }
  
  public interface ClientDataOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional bytes dataBytes = 1;
    boolean hasDataBytes();
    com.google.protobuf.ByteString getDataBytes();
    
    // optional string type = 2;
    boolean hasType();
    String getType();
  }
  public static final class ClientData extends
      com.google.protobuf.GeneratedMessageLite
      implements ClientDataOrBuilder {
    // Use ClientData.newBuilder() to construct.
    private ClientData(Builder builder) {
      super(builder);
    }
    private ClientData(boolean noInit) {}
    
    private static final ClientData defaultInstance;
    public static ClientData getDefaultInstance() {
      return defaultInstance;
    }
    
    public ClientData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional bytes dataBytes = 1;
    public static final int DATABYTES_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString dataBytes_;
    public boolean hasDataBytes() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.google.protobuf.ByteString getDataBytes() {
      return dataBytes_;
    }
    
    // optional string type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private java.lang.Object type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          type_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      dataBytes_ = com.google.protobuf.ByteString.EMPTY;
      type_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, dataBytes_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTypeBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, dataBytes_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTypeBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.ClientData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ClientData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ClientData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ClientData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ClientData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ClientData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ClientData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ClientData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ClientData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ClientData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.ClientData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.ClientData, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.ClientDataOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.ClientData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        dataBytes_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.ClientData getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.ClientData.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.ClientData build() {
        org.mitre.svmp.protocol.SVMPProtocol.ClientData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.ClientData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.ClientData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.ClientData buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.ClientData result = new org.mitre.svmp.protocol.SVMPProtocol.ClientData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dataBytes_ = dataBytes_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.ClientData other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.ClientData.getDefaultInstance()) return this;
        if (other.hasDataBytes()) {
          setDataBytes(other.getDataBytes());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              dataBytes_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              type_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bytes dataBytes = 1;
      private com.google.protobuf.ByteString dataBytes_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasDataBytes() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.google.protobuf.ByteString getDataBytes() {
        return dataBytes_;
      }
      public Builder setDataBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        dataBytes_ = value;
        
        return this;
      }
      public Builder clearDataBytes() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dataBytes_ = getDefaultInstance().getDataBytes();
        
        return this;
      }
      
      // optional string type = 2;
      private java.lang.Object type_ = "";
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setType(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        type_ = value;
        
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = getDefaultInstance().getType();
        
        return this;
      }
      void setType(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        type_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.ClientData)
    }
    
    static {
      defaultInstance = new ClientData(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.ClientData)
  }
  
  public interface NotificationOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string contentTitle = 1;
    boolean hasContentTitle();
    String getContentTitle();
    
    // required string contentText = 2;
    boolean hasContentText();
    String getContentText();
    
    // required bytes smallIcon = 3;
    boolean hasSmallIcon();
    com.google.protobuf.ByteString getSmallIcon();
    
    // optional bytes largeIcon = 4;
    boolean hasLargeIcon();
    com.google.protobuf.ByteString getLargeIcon();
  }
  public static final class Notification extends
      com.google.protobuf.GeneratedMessageLite
      implements NotificationOrBuilder {
    // Use Notification.newBuilder() to construct.
    private Notification(Builder builder) {
      super(builder);
    }
    private Notification(boolean noInit) {}
    
    private static final Notification defaultInstance;
    public static Notification getDefaultInstance() {
      return defaultInstance;
    }
    
    public Notification getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string contentTitle = 1;
    public static final int CONTENTTITLE_FIELD_NUMBER = 1;
    private java.lang.Object contentTitle_;
    public boolean hasContentTitle() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getContentTitle() {
      java.lang.Object ref = contentTitle_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          contentTitle_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getContentTitleBytes() {
      java.lang.Object ref = contentTitle_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        contentTitle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string contentText = 2;
    public static final int CONTENTTEXT_FIELD_NUMBER = 2;
    private java.lang.Object contentText_;
    public boolean hasContentText() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getContentText() {
      java.lang.Object ref = contentText_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          contentText_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getContentTextBytes() {
      java.lang.Object ref = contentText_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        contentText_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required bytes smallIcon = 3;
    public static final int SMALLICON_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString smallIcon_;
    public boolean hasSmallIcon() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.google.protobuf.ByteString getSmallIcon() {
      return smallIcon_;
    }
    
    // optional bytes largeIcon = 4;
    public static final int LARGEICON_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString largeIcon_;
    public boolean hasLargeIcon() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public com.google.protobuf.ByteString getLargeIcon() {
      return largeIcon_;
    }
    
    private void initFields() {
      contentTitle_ = "";
      contentText_ = "";
      smallIcon_ = com.google.protobuf.ByteString.EMPTY;
      largeIcon_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasContentTitle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasContentText()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSmallIcon()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getContentTitleBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getContentTextBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, smallIcon_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, largeIcon_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getContentTitleBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getContentTextBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, smallIcon_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, largeIcon_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.Notification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Notification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Notification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Notification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Notification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Notification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Notification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Notification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Notification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Notification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.Notification prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.Notification, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.NotificationOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.Notification.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        contentTitle_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        contentText_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        smallIcon_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        largeIcon_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Notification getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.Notification.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Notification build() {
        org.mitre.svmp.protocol.SVMPProtocol.Notification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.Notification buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.Notification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Notification buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.Notification result = new org.mitre.svmp.protocol.SVMPProtocol.Notification(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.contentTitle_ = contentTitle_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.contentText_ = contentText_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.smallIcon_ = smallIcon_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.largeIcon_ = largeIcon_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.Notification other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.Notification.getDefaultInstance()) return this;
        if (other.hasContentTitle()) {
          setContentTitle(other.getContentTitle());
        }
        if (other.hasContentText()) {
          setContentText(other.getContentText());
        }
        if (other.hasSmallIcon()) {
          setSmallIcon(other.getSmallIcon());
        }
        if (other.hasLargeIcon()) {
          setLargeIcon(other.getLargeIcon());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasContentTitle()) {
          
          return false;
        }
        if (!hasContentText()) {
          
          return false;
        }
        if (!hasSmallIcon()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              contentTitle_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              contentText_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              smallIcon_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              largeIcon_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string contentTitle = 1;
      private java.lang.Object contentTitle_ = "";
      public boolean hasContentTitle() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getContentTitle() {
        java.lang.Object ref = contentTitle_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          contentTitle_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setContentTitle(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        contentTitle_ = value;
        
        return this;
      }
      public Builder clearContentTitle() {
        bitField0_ = (bitField0_ & ~0x00000001);
        contentTitle_ = getDefaultInstance().getContentTitle();
        
        return this;
      }
      void setContentTitle(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        contentTitle_ = value;
        
      }
      
      // required string contentText = 2;
      private java.lang.Object contentText_ = "";
      public boolean hasContentText() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getContentText() {
        java.lang.Object ref = contentText_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          contentText_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setContentText(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        contentText_ = value;
        
        return this;
      }
      public Builder clearContentText() {
        bitField0_ = (bitField0_ & ~0x00000002);
        contentText_ = getDefaultInstance().getContentText();
        
        return this;
      }
      void setContentText(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        contentText_ = value;
        
      }
      
      // required bytes smallIcon = 3;
      private com.google.protobuf.ByteString smallIcon_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasSmallIcon() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.google.protobuf.ByteString getSmallIcon() {
        return smallIcon_;
      }
      public Builder setSmallIcon(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        smallIcon_ = value;
        
        return this;
      }
      public Builder clearSmallIcon() {
        bitField0_ = (bitField0_ & ~0x00000004);
        smallIcon_ = getDefaultInstance().getSmallIcon();
        
        return this;
      }
      
      // optional bytes largeIcon = 4;
      private com.google.protobuf.ByteString largeIcon_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasLargeIcon() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.google.protobuf.ByteString getLargeIcon() {
        return largeIcon_;
      }
      public Builder setLargeIcon(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        largeIcon_ = value;
        
        return this;
      }
      public Builder clearLargeIcon() {
        bitField0_ = (bitField0_ & ~0x00000008);
        largeIcon_ = getDefaultInstance().getLargeIcon();
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.Notification)
    }
    
    static {
      defaultInstance = new Notification(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.Notification)
  }
  
  public interface TouchEventOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required int32 action = 1;
    boolean hasAction();
    int getAction();
    
    // repeated .svmp.TouchEvent.PointerCoords items = 2;
    java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords> 
        getItemsList();
    org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords getItems(int index);
    int getItemsCount();
    
    // optional int64 downTime = 3;
    boolean hasDownTime();
    long getDownTime();
    
    // optional int64 eventTime = 4;
    boolean hasEventTime();
    long getEventTime();
    
    // repeated .svmp.TouchEvent.HistoricalEvent historical = 5;
    java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent> 
        getHistoricalList();
    org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent getHistorical(int index);
    int getHistoricalCount();
    
    // optional int32 edgeFlags = 6;
    boolean hasEdgeFlags();
    int getEdgeFlags();
  }
  public static final class TouchEvent extends
      com.google.protobuf.GeneratedMessageLite
      implements TouchEventOrBuilder {
    // Use TouchEvent.newBuilder() to construct.
    private TouchEvent(Builder builder) {
      super(builder);
    }
    private TouchEvent(boolean noInit) {}
    
    private static final TouchEvent defaultInstance;
    public static TouchEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public TouchEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public interface PointerCoordsOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {
      
      // required int32 id = 1;
      boolean hasId();
      int getId();
      
      // required float x = 2;
      boolean hasX();
      float getX();
      
      // required float y = 3;
      boolean hasY();
      float getY();
      
      // required float pressure = 4;
      boolean hasPressure();
      float getPressure();
      
      // required float size = 5;
      boolean hasSize();
      float getSize();
    }
    public static final class PointerCoords extends
        com.google.protobuf.GeneratedMessageLite
        implements PointerCoordsOrBuilder {
      // Use PointerCoords.newBuilder() to construct.
      private PointerCoords(Builder builder) {
        super(builder);
      }
      private PointerCoords(boolean noInit) {}
      
      private static final PointerCoords defaultInstance;
      public static PointerCoords getDefaultInstance() {
        return defaultInstance;
      }
      
      public PointerCoords getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      private int bitField0_;
      // required int32 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      
      // required float x = 2;
      public static final int X_FIELD_NUMBER = 2;
      private float x_;
      public boolean hasX() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getX() {
        return x_;
      }
      
      // required float y = 3;
      public static final int Y_FIELD_NUMBER = 3;
      private float y_;
      public boolean hasY() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getY() {
        return y_;
      }
      
      // required float pressure = 4;
      public static final int PRESSURE_FIELD_NUMBER = 4;
      private float pressure_;
      public boolean hasPressure() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getPressure() {
        return pressure_;
      }
      
      // required float size = 5;
      public static final int SIZE_FIELD_NUMBER = 5;
      private float size_;
      public boolean hasSize() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public float getSize() {
        return size_;
      }
      
      private void initFields() {
        id_ = 0;
        x_ = 0F;
        y_ = 0F;
        pressure_ = 0F;
        size_ = 0F;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasX()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasY()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPressure()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSize()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFloat(2, x_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, y_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFloat(4, pressure_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFloat(5, size_);
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, x_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, y_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, pressure_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, size_);
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords, Builder>
          implements org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoordsOrBuilder {
        // Construct using org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          x_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          y_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          pressure_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000008);
          size_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords getDefaultInstanceForType() {
          return org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords.getDefaultInstance();
        }
        
        public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords build() {
          org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords buildPartial() {
          org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords result = new org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.x_ = x_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.y_ = y_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.pressure_ = pressure_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.size_ = size_;
          result.bitField0_ = to_bitField0_;
          return result;
        }
        
        public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords other) {
          if (other == org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasPressure()) {
            setPressure(other.getPressure());
          }
          if (other.hasSize()) {
            setSize(other.getSize());
          }
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasId()) {
            
            return false;
          }
          if (!hasX()) {
            
            return false;
          }
          if (!hasY()) {
            
            return false;
          }
          if (!hasPressure()) {
            
            return false;
          }
          if (!hasSize()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readInt32();
                break;
              }
              case 21: {
                bitField0_ |= 0x00000002;
                x_ = input.readFloat();
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                y_ = input.readFloat();
                break;
              }
              case 37: {
                bitField0_ |= 0x00000008;
                pressure_ = input.readFloat();
                break;
              }
              case 45: {
                bitField0_ |= 0x00000010;
                size_ = input.readFloat();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required int32 id = 1;
        private int id_ ;
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public int getId() {
          return id_;
        }
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          
          return this;
        }
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          
          return this;
        }
        
        // required float x = 2;
        private float x_ ;
        public boolean hasX() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public float getX() {
          return x_;
        }
        public Builder setX(float value) {
          bitField0_ |= 0x00000002;
          x_ = value;
          
          return this;
        }
        public Builder clearX() {
          bitField0_ = (bitField0_ & ~0x00000002);
          x_ = 0F;
          
          return this;
        }
        
        // required float y = 3;
        private float y_ ;
        public boolean hasY() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        public float getY() {
          return y_;
        }
        public Builder setY(float value) {
          bitField0_ |= 0x00000004;
          y_ = value;
          
          return this;
        }
        public Builder clearY() {
          bitField0_ = (bitField0_ & ~0x00000004);
          y_ = 0F;
          
          return this;
        }
        
        // required float pressure = 4;
        private float pressure_ ;
        public boolean hasPressure() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        public float getPressure() {
          return pressure_;
        }
        public Builder setPressure(float value) {
          bitField0_ |= 0x00000008;
          pressure_ = value;
          
          return this;
        }
        public Builder clearPressure() {
          bitField0_ = (bitField0_ & ~0x00000008);
          pressure_ = 0F;
          
          return this;
        }
        
        // required float size = 5;
        private float size_ ;
        public boolean hasSize() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        public float getSize() {
          return size_;
        }
        public Builder setSize(float value) {
          bitField0_ |= 0x00000010;
          size_ = value;
          
          return this;
        }
        public Builder clearSize() {
          bitField0_ = (bitField0_ & ~0x00000010);
          size_ = 0F;
          
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:svmp.TouchEvent.PointerCoords)
      }
      
      static {
        defaultInstance = new PointerCoords(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:svmp.TouchEvent.PointerCoords)
    }
    
    public interface HistoricalEventOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {
      
      // required int64 eventTime = 1;
      boolean hasEventTime();
      long getEventTime();
      
      // repeated .svmp.TouchEvent.PointerCoords coords = 2;
      java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords> 
          getCoordsList();
      org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords getCoords(int index);
      int getCoordsCount();
    }
    public static final class HistoricalEvent extends
        com.google.protobuf.GeneratedMessageLite
        implements HistoricalEventOrBuilder {
      // Use HistoricalEvent.newBuilder() to construct.
      private HistoricalEvent(Builder builder) {
        super(builder);
      }
      private HistoricalEvent(boolean noInit) {}
      
      private static final HistoricalEvent defaultInstance;
      public static HistoricalEvent getDefaultInstance() {
        return defaultInstance;
      }
      
      public HistoricalEvent getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      private int bitField0_;
      // required int64 eventTime = 1;
      public static final int EVENTTIME_FIELD_NUMBER = 1;
      private long eventTime_;
      public boolean hasEventTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getEventTime() {
        return eventTime_;
      }
      
      // repeated .svmp.TouchEvent.PointerCoords coords = 2;
      public static final int COORDS_FIELD_NUMBER = 2;
      private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords> coords_;
      public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords> getCoordsList() {
        return coords_;
      }
      public java.util.List<? extends org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoordsOrBuilder> 
          getCoordsOrBuilderList() {
        return coords_;
      }
      public int getCoordsCount() {
        return coords_.size();
      }
      public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords getCoords(int index) {
        return coords_.get(index);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoordsOrBuilder getCoordsOrBuilder(
          int index) {
        return coords_.get(index);
      }
      
      private void initFields() {
        eventTime_ = 0L;
        coords_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasEventTime()) {
          memoizedIsInitialized = 0;
          return false;
        }
        for (int i = 0; i < getCoordsCount(); i++) {
          if (!getCoords(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, eventTime_);
        }
        for (int i = 0; i < coords_.size(); i++) {
          output.writeMessage(2, coords_.get(i));
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, eventTime_);
        }
        for (int i = 0; i < coords_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, coords_.get(i));
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent, Builder>
          implements org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEventOrBuilder {
        // Construct using org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          eventTime_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          coords_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent getDefaultInstanceForType() {
          return org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent.getDefaultInstance();
        }
        
        public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent build() {
          org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent buildPartial() {
          org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent result = new org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.eventTime_ = eventTime_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            coords_ = java.util.Collections.unmodifiableList(coords_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.coords_ = coords_;
          result.bitField0_ = to_bitField0_;
          return result;
        }
        
        public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent other) {
          if (other == org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent.getDefaultInstance()) return this;
          if (other.hasEventTime()) {
            setEventTime(other.getEventTime());
          }
          if (!other.coords_.isEmpty()) {
            if (coords_.isEmpty()) {
              coords_ = other.coords_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCoordsIsMutable();
              coords_.addAll(other.coords_);
            }
            
          }
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasEventTime()) {
            
            return false;
          }
          for (int i = 0; i < getCoordsCount(); i++) {
            if (!getCoords(i).isInitialized()) {
              
              return false;
            }
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  
                  return this;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                eventTime_ = input.readInt64();
                break;
              }
              case 18: {
                org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords.newBuilder();
                input.readMessage(subBuilder, extensionRegistry);
                addCoords(subBuilder.buildPartial());
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required int64 eventTime = 1;
        private long eventTime_ ;
        public boolean hasEventTime() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public long getEventTime() {
          return eventTime_;
        }
        public Builder setEventTime(long value) {
          bitField0_ |= 0x00000001;
          eventTime_ = value;
          
          return this;
        }
        public Builder clearEventTime() {
          bitField0_ = (bitField0_ & ~0x00000001);
          eventTime_ = 0L;
          
          return this;
        }
        
        // repeated .svmp.TouchEvent.PointerCoords coords = 2;
        private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords> coords_ =
          java.util.Collections.emptyList();
        private void ensureCoordsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            coords_ = new java.util.ArrayList<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords>(coords_);
            bitField0_ |= 0x00000002;
           }
        }
        
        public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords> getCoordsList() {
          return java.util.Collections.unmodifiableList(coords_);
        }
        public int getCoordsCount() {
          return coords_.size();
        }
        public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords getCoords(int index) {
          return coords_.get(index);
        }
        public Builder setCoords(
            int index, org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoordsIsMutable();
          coords_.set(index, value);
          
          return this;
        }
        public Builder setCoords(
            int index, org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
          ensureCoordsIsMutable();
          coords_.set(index, builderForValue.build());
          
          return this;
        }
        public Builder addCoords(org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoordsIsMutable();
          coords_.add(value);
          
          return this;
        }
        public Builder addCoords(
            int index, org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCoordsIsMutable();
          coords_.add(index, value);
          
          return this;
        }
        public Builder addCoords(
            org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
          ensureCoordsIsMutable();
          coords_.add(builderForValue.build());
          
          return this;
        }
        public Builder addCoords(
            int index, org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
          ensureCoordsIsMutable();
          coords_.add(index, builderForValue.build());
          
          return this;
        }
        public Builder addAllCoords(
            java.lang.Iterable<? extends org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords> values) {
          ensureCoordsIsMutable();
          super.addAll(values, coords_);
          
          return this;
        }
        public Builder clearCoords() {
          coords_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          
          return this;
        }
        public Builder removeCoords(int index) {
          ensureCoordsIsMutable();
          coords_.remove(index);
          
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:svmp.TouchEvent.HistoricalEvent)
      }
      
      static {
        defaultInstance = new HistoricalEvent(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:svmp.TouchEvent.HistoricalEvent)
    }
    
    private int bitField0_;
    // required int32 action = 1;
    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_;
    public boolean hasAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getAction() {
      return action_;
    }
    
    // repeated .svmp.TouchEvent.PointerCoords items = 2;
    public static final int ITEMS_FIELD_NUMBER = 2;
    private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords> items_;
    public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords> getItemsList() {
      return items_;
    }
    public java.util.List<? extends org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoordsOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    public int getItemsCount() {
      return items_.size();
    }
    public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords getItems(int index) {
      return items_.get(index);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoordsOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }
    
    // optional int64 downTime = 3;
    public static final int DOWNTIME_FIELD_NUMBER = 3;
    private long downTime_;
    public boolean hasDownTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getDownTime() {
      return downTime_;
    }
    
    // optional int64 eventTime = 4;
    public static final int EVENTTIME_FIELD_NUMBER = 4;
    private long eventTime_;
    public boolean hasEventTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getEventTime() {
      return eventTime_;
    }
    
    // repeated .svmp.TouchEvent.HistoricalEvent historical = 5;
    public static final int HISTORICAL_FIELD_NUMBER = 5;
    private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent> historical_;
    public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent> getHistoricalList() {
      return historical_;
    }
    public java.util.List<? extends org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEventOrBuilder> 
        getHistoricalOrBuilderList() {
      return historical_;
    }
    public int getHistoricalCount() {
      return historical_.size();
    }
    public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent getHistorical(int index) {
      return historical_.get(index);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEventOrBuilder getHistoricalOrBuilder(
        int index) {
      return historical_.get(index);
    }
    
    // optional int32 edgeFlags = 6;
    public static final int EDGEFLAGS_FIELD_NUMBER = 6;
    private int edgeFlags_;
    public boolean hasEdgeFlags() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getEdgeFlags() {
      return edgeFlags_;
    }
    
    private void initFields() {
      action_ = 0;
      items_ = java.util.Collections.emptyList();
      downTime_ = 0L;
      eventTime_ = 0L;
      historical_ = java.util.Collections.emptyList();
      edgeFlags_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasAction()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getItemsCount(); i++) {
        if (!getItems(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getHistoricalCount(); i++) {
        if (!getHistorical(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, action_);
      }
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(2, items_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(3, downTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(4, eventTime_);
      }
      for (int i = 0; i < historical_.size(); i++) {
        output.writeMessage(5, historical_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, edgeFlags_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, action_);
      }
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, items_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, downTime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, eventTime_);
      }
      for (int i = 0; i < historical_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, historical_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, edgeFlags_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.TouchEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.TouchEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.TouchEvent, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.TouchEventOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        action_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        items_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        downTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        eventTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        historical_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        edgeFlags_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent build() {
        org.mitre.svmp.protocol.SVMPProtocol.TouchEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.TouchEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.TouchEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.TouchEvent result = new org.mitre.svmp.protocol.SVMPProtocol.TouchEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.action_ = action_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          items_ = java.util.Collections.unmodifiableList(items_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.items_ = items_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.downTime_ = downTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.eventTime_ = eventTime_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          historical_ = java.util.Collections.unmodifiableList(historical_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.historical_ = historical_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.edgeFlags_ = edgeFlags_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.TouchEvent other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.getDefaultInstance()) return this;
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (!other.items_.isEmpty()) {
          if (items_.isEmpty()) {
            items_ = other.items_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureItemsIsMutable();
            items_.addAll(other.items_);
          }
          
        }
        if (other.hasDownTime()) {
          setDownTime(other.getDownTime());
        }
        if (other.hasEventTime()) {
          setEventTime(other.getEventTime());
        }
        if (!other.historical_.isEmpty()) {
          if (historical_.isEmpty()) {
            historical_ = other.historical_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureHistoricalIsMutable();
            historical_.addAll(other.historical_);
          }
          
        }
        if (other.hasEdgeFlags()) {
          setEdgeFlags(other.getEdgeFlags());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasAction()) {
          
          return false;
        }
        for (int i = 0; i < getItemsCount(); i++) {
          if (!getItems(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getHistoricalCount(); i++) {
          if (!getHistorical(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              action_ = input.readInt32();
              break;
            }
            case 18: {
              org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addItems(subBuilder.buildPartial());
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              downTime_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              eventTime_ = input.readInt64();
              break;
            }
            case 42: {
              org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addHistorical(subBuilder.buildPartial());
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              edgeFlags_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 action = 1;
      private int action_ ;
      public boolean hasAction() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getAction() {
        return action_;
      }
      public Builder setAction(int value) {
        bitField0_ |= 0x00000001;
        action_ = value;
        
        return this;
      }
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000001);
        action_ = 0;
        
        return this;
      }
      
      // repeated .svmp.TouchEvent.PointerCoords items = 2;
      private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          items_ = new java.util.ArrayList<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords>(items_);
          bitField0_ |= 0x00000002;
         }
      }
      
      public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords> getItemsList() {
        return java.util.Collections.unmodifiableList(items_);
      }
      public int getItemsCount() {
        return items_.size();
      }
      public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords getItems(int index) {
        return items_.get(index);
      }
      public Builder setItems(
          int index, org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemsIsMutable();
        items_.set(index, value);
        
        return this;
      }
      public Builder setItems(
          int index, org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
        ensureItemsIsMutable();
        items_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addItems(org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemsIsMutable();
        items_.add(value);
        
        return this;
      }
      public Builder addItems(
          int index, org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureItemsIsMutable();
        items_.add(index, value);
        
        return this;
      }
      public Builder addItems(
          org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
        ensureItemsIsMutable();
        items_.add(builderForValue.build());
        
        return this;
      }
      public Builder addItems(
          int index, org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords.Builder builderForValue) {
        ensureItemsIsMutable();
        items_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllItems(
          java.lang.Iterable<? extends org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.PointerCoords> values) {
        ensureItemsIsMutable();
        super.addAll(values, items_);
        
        return this;
      }
      public Builder clearItems() {
        items_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }
      public Builder removeItems(int index) {
        ensureItemsIsMutable();
        items_.remove(index);
        
        return this;
      }
      
      // optional int64 downTime = 3;
      private long downTime_ ;
      public boolean hasDownTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getDownTime() {
        return downTime_;
      }
      public Builder setDownTime(long value) {
        bitField0_ |= 0x00000004;
        downTime_ = value;
        
        return this;
      }
      public Builder clearDownTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        downTime_ = 0L;
        
        return this;
      }
      
      // optional int64 eventTime = 4;
      private long eventTime_ ;
      public boolean hasEventTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public long getEventTime() {
        return eventTime_;
      }
      public Builder setEventTime(long value) {
        bitField0_ |= 0x00000008;
        eventTime_ = value;
        
        return this;
      }
      public Builder clearEventTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        eventTime_ = 0L;
        
        return this;
      }
      
      // repeated .svmp.TouchEvent.HistoricalEvent historical = 5;
      private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent> historical_ =
        java.util.Collections.emptyList();
      private void ensureHistoricalIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          historical_ = new java.util.ArrayList<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent>(historical_);
          bitField0_ |= 0x00000010;
         }
      }
      
      public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent> getHistoricalList() {
        return java.util.Collections.unmodifiableList(historical_);
      }
      public int getHistoricalCount() {
        return historical_.size();
      }
      public org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent getHistorical(int index) {
        return historical_.get(index);
      }
      public Builder setHistorical(
          int index, org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHistoricalIsMutable();
        historical_.set(index, value);
        
        return this;
      }
      public Builder setHistorical(
          int index, org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent.Builder builderForValue) {
        ensureHistoricalIsMutable();
        historical_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addHistorical(org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHistoricalIsMutable();
        historical_.add(value);
        
        return this;
      }
      public Builder addHistorical(
          int index, org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureHistoricalIsMutable();
        historical_.add(index, value);
        
        return this;
      }
      public Builder addHistorical(
          org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent.Builder builderForValue) {
        ensureHistoricalIsMutable();
        historical_.add(builderForValue.build());
        
        return this;
      }
      public Builder addHistorical(
          int index, org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent.Builder builderForValue) {
        ensureHistoricalIsMutable();
        historical_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllHistorical(
          java.lang.Iterable<? extends org.mitre.svmp.protocol.SVMPProtocol.TouchEvent.HistoricalEvent> values) {
        ensureHistoricalIsMutable();
        super.addAll(values, historical_);
        
        return this;
      }
      public Builder clearHistorical() {
        historical_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        
        return this;
      }
      public Builder removeHistorical(int index) {
        ensureHistoricalIsMutable();
        historical_.remove(index);
        
        return this;
      }
      
      // optional int32 edgeFlags = 6;
      private int edgeFlags_ ;
      public boolean hasEdgeFlags() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getEdgeFlags() {
        return edgeFlags_;
      }
      public Builder setEdgeFlags(int value) {
        bitField0_ |= 0x00000020;
        edgeFlags_ = value;
        
        return this;
      }
      public Builder clearEdgeFlags() {
        bitField0_ = (bitField0_ & ~0x00000020);
        edgeFlags_ = 0;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.TouchEvent)
    }
    
    static {
      defaultInstance = new TouchEvent(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.TouchEvent)
  }
  
  public interface ScreenInfoOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required int32 x = 1;
    boolean hasX();
    int getX();
    
    // required int32 y = 2;
    boolean hasY();
    int getY();
  }
  public static final class ScreenInfo extends
      com.google.protobuf.GeneratedMessageLite
      implements ScreenInfoOrBuilder {
    // Use ScreenInfo.newBuilder() to construct.
    private ScreenInfo(Builder builder) {
      super(builder);
    }
    private ScreenInfo(boolean noInit) {}
    
    private static final ScreenInfo defaultInstance;
    public static ScreenInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public ScreenInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required int32 x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getX() {
      return x_;
    }
    
    // required int32 y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getY() {
      return y_;
    }
    
    private void initFields() {
      x_ = 0;
      y_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, y_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.ScreenInfoOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo build() {
        org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo result = new org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.ScreenInfo.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              y_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 x = 1;
      private int x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getX() {
        return x_;
      }
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        
        return this;
      }
      
      // required int32 y = 2;
      private int y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getY() {
        return y_;
      }
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.ScreenInfo)
    }
    
    static {
      defaultInstance = new ScreenInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.ScreenInfo)
  }
  
  public interface SensorEventOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .svmp.SensorType type = 1;
    boolean hasType();
    org.mitre.svmp.protocol.SVMPProtocol.SensorType getType();
    
    // required int32 accuracy = 2;
    boolean hasAccuracy();
    int getAccuracy();
    
    // required int64 timestamp = 3;
    boolean hasTimestamp();
    long getTimestamp();
    
    // repeated float values = 4;
    java.util.List<java.lang.Float> getValuesList();
    int getValuesCount();
    float getValues(int index);
  }
  public static final class SensorEvent extends
      com.google.protobuf.GeneratedMessageLite
      implements SensorEventOrBuilder {
    // Use SensorEvent.newBuilder() to construct.
    private SensorEvent(Builder builder) {
      super(builder);
    }
    private SensorEvent(boolean noInit) {}
    
    private static final SensorEvent defaultInstance;
    public static SensorEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public SensorEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required .svmp.SensorType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.mitre.svmp.protocol.SVMPProtocol.SensorType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.SensorType getType() {
      return type_;
    }
    
    // required int32 accuracy = 2;
    public static final int ACCURACY_FIELD_NUMBER = 2;
    private int accuracy_;
    public boolean hasAccuracy() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getAccuracy() {
      return accuracy_;
    }
    
    // required int64 timestamp = 3;
    public static final int TIMESTAMP_FIELD_NUMBER = 3;
    private long timestamp_;
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getTimestamp() {
      return timestamp_;
    }
    
    // repeated float values = 4;
    public static final int VALUES_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Float> values_;
    public java.util.List<java.lang.Float>
        getValuesList() {
      return values_;
    }
    public int getValuesCount() {
      return values_.size();
    }
    public float getValues(int index) {
      return values_.get(index);
    }
    
    private void initFields() {
      type_ = org.mitre.svmp.protocol.SVMPProtocol.SensorType.ACCELEROMETER;
      accuracy_ = 0;
      timestamp_ = 0L;
      values_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAccuracy()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, accuracy_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, timestamp_);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeFloat(4, values_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, accuracy_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, timestamp_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getValuesList().size();
        size += dataSize;
        size += 1 * getValuesList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.SensorEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.SensorEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.SensorEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.SensorEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.SensorEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.SensorEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.SensorEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.SensorEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.SensorEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.SensorEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.SensorEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.SensorEvent, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.SensorEventOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.SensorEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = org.mitre.svmp.protocol.SVMPProtocol.SensorType.ACCELEROMETER;
        bitField0_ = (bitField0_ & ~0x00000001);
        accuracy_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        values_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.SensorEvent getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.SensorEvent.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.SensorEvent build() {
        org.mitre.svmp.protocol.SVMPProtocol.SensorEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.SensorEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.SensorEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.SensorEvent buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.SensorEvent result = new org.mitre.svmp.protocol.SVMPProtocol.SensorEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.accuracy_ = accuracy_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.timestamp_ = timestamp_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          values_ = java.util.Collections.unmodifiableList(values_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.values_ = values_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.SensorEvent other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.SensorEvent.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasAccuracy()) {
          setAccuracy(other.getAccuracy());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasAccuracy()) {
          
          return false;
        }
        if (!hasTimestamp()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.mitre.svmp.protocol.SVMPProtocol.SensorType value = org.mitre.svmp.protocol.SVMPProtocol.SensorType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              accuracy_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              timestamp_ = input.readInt64();
              break;
            }
            case 37: {
              ensureValuesIsMutable();
              values_.add(input.readFloat());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addValues(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .svmp.SensorType type = 1;
      private org.mitre.svmp.protocol.SVMPProtocol.SensorType type_ = org.mitre.svmp.protocol.SVMPProtocol.SensorType.ACCELEROMETER;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.SensorType getType() {
        return type_;
      }
      public Builder setType(org.mitre.svmp.protocol.SVMPProtocol.SensorType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.mitre.svmp.protocol.SVMPProtocol.SensorType.ACCELEROMETER;
        
        return this;
      }
      
      // required int32 accuracy = 2;
      private int accuracy_ ;
      public boolean hasAccuracy() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getAccuracy() {
        return accuracy_;
      }
      public Builder setAccuracy(int value) {
        bitField0_ |= 0x00000002;
        accuracy_ = value;
        
        return this;
      }
      public Builder clearAccuracy() {
        bitField0_ = (bitField0_ & ~0x00000002);
        accuracy_ = 0;
        
        return this;
      }
      
      // required int64 timestamp = 3;
      private long timestamp_ ;
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getTimestamp() {
        return timestamp_;
      }
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000004;
        timestamp_ = value;
        
        return this;
      }
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        timestamp_ = 0L;
        
        return this;
      }
      
      // repeated float values = 4;
      private java.util.List<java.lang.Float> values_ = java.util.Collections.emptyList();;
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          values_ = new java.util.ArrayList<java.lang.Float>(values_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<java.lang.Float>
          getValuesList() {
        return java.util.Collections.unmodifiableList(values_);
      }
      public int getValuesCount() {
        return values_.size();
      }
      public float getValues(int index) {
        return values_.get(index);
      }
      public Builder setValues(
          int index, float value) {
        ensureValuesIsMutable();
        values_.set(index, value);
        
        return this;
      }
      public Builder addValues(float value) {
        ensureValuesIsMutable();
        values_.add(value);
        
        return this;
      }
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureValuesIsMutable();
        super.addAll(values, values_);
        
        return this;
      }
      public Builder clearValues() {
        values_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000008);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.SensorEvent)
    }
    
    static {
      defaultInstance = new SensorEvent(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.SensorEvent)
  }
  
  public interface LocationProviderInfoOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string provider = 1;
    boolean hasProvider();
    String getProvider();
    
    // required bool requiresNetwork = 2;
    boolean hasRequiresNetwork();
    boolean getRequiresNetwork();
    
    // required bool requiresSatellite = 3;
    boolean hasRequiresSatellite();
    boolean getRequiresSatellite();
    
    // required bool requiresCell = 4;
    boolean hasRequiresCell();
    boolean getRequiresCell();
    
    // required bool hasMonetaryCost = 5;
    boolean hasHasMonetaryCost();
    boolean getHasMonetaryCost();
    
    // required bool supportsAltitude = 6;
    boolean hasSupportsAltitude();
    boolean getSupportsAltitude();
    
    // required bool supportsSpeed = 7;
    boolean hasSupportsSpeed();
    boolean getSupportsSpeed();
    
    // required bool supportsBearing = 8;
    boolean hasSupportsBearing();
    boolean getSupportsBearing();
    
    // required int32 powerRequirement = 9;
    boolean hasPowerRequirement();
    int getPowerRequirement();
    
    // required int32 accuracy = 10;
    boolean hasAccuracy();
    int getAccuracy();
  }
  public static final class LocationProviderInfo extends
      com.google.protobuf.GeneratedMessageLite
      implements LocationProviderInfoOrBuilder {
    // Use LocationProviderInfo.newBuilder() to construct.
    private LocationProviderInfo(Builder builder) {
      super(builder);
    }
    private LocationProviderInfo(boolean noInit) {}
    
    private static final LocationProviderInfo defaultInstance;
    public static LocationProviderInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public LocationProviderInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string provider = 1;
    public static final int PROVIDER_FIELD_NUMBER = 1;
    private java.lang.Object provider_;
    public boolean hasProvider() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getProvider() {
      java.lang.Object ref = provider_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          provider_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getProviderBytes() {
      java.lang.Object ref = provider_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        provider_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required bool requiresNetwork = 2;
    public static final int REQUIRESNETWORK_FIELD_NUMBER = 2;
    private boolean requiresNetwork_;
    public boolean hasRequiresNetwork() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getRequiresNetwork() {
      return requiresNetwork_;
    }
    
    // required bool requiresSatellite = 3;
    public static final int REQUIRESSATELLITE_FIELD_NUMBER = 3;
    private boolean requiresSatellite_;
    public boolean hasRequiresSatellite() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public boolean getRequiresSatellite() {
      return requiresSatellite_;
    }
    
    // required bool requiresCell = 4;
    public static final int REQUIRESCELL_FIELD_NUMBER = 4;
    private boolean requiresCell_;
    public boolean hasRequiresCell() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getRequiresCell() {
      return requiresCell_;
    }
    
    // required bool hasMonetaryCost = 5;
    public static final int HASMONETARYCOST_FIELD_NUMBER = 5;
    private boolean hasMonetaryCost_;
    public boolean hasHasMonetaryCost() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public boolean getHasMonetaryCost() {
      return hasMonetaryCost_;
    }
    
    // required bool supportsAltitude = 6;
    public static final int SUPPORTSALTITUDE_FIELD_NUMBER = 6;
    private boolean supportsAltitude_;
    public boolean hasSupportsAltitude() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getSupportsAltitude() {
      return supportsAltitude_;
    }
    
    // required bool supportsSpeed = 7;
    public static final int SUPPORTSSPEED_FIELD_NUMBER = 7;
    private boolean supportsSpeed_;
    public boolean hasSupportsSpeed() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getSupportsSpeed() {
      return supportsSpeed_;
    }
    
    // required bool supportsBearing = 8;
    public static final int SUPPORTSBEARING_FIELD_NUMBER = 8;
    private boolean supportsBearing_;
    public boolean hasSupportsBearing() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public boolean getSupportsBearing() {
      return supportsBearing_;
    }
    
    // required int32 powerRequirement = 9;
    public static final int POWERREQUIREMENT_FIELD_NUMBER = 9;
    private int powerRequirement_;
    public boolean hasPowerRequirement() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getPowerRequirement() {
      return powerRequirement_;
    }
    
    // required int32 accuracy = 10;
    public static final int ACCURACY_FIELD_NUMBER = 10;
    private int accuracy_;
    public boolean hasAccuracy() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getAccuracy() {
      return accuracy_;
    }
    
    private void initFields() {
      provider_ = "";
      requiresNetwork_ = false;
      requiresSatellite_ = false;
      requiresCell_ = false;
      hasMonetaryCost_ = false;
      supportsAltitude_ = false;
      supportsSpeed_ = false;
      supportsBearing_ = false;
      powerRequirement_ = 0;
      accuracy_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasProvider()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequiresNetwork()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequiresSatellite()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRequiresCell()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasHasMonetaryCost()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSupportsAltitude()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSupportsSpeed()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSupportsBearing()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPowerRequirement()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAccuracy()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getProviderBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, requiresNetwork_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, requiresSatellite_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, requiresCell_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, hasMonetaryCost_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, supportsAltitude_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, supportsSpeed_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, supportsBearing_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, powerRequirement_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, accuracy_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getProviderBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, requiresNetwork_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, requiresSatellite_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, requiresCell_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, hasMonetaryCost_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, supportsAltitude_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, supportsSpeed_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, supportsBearing_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, powerRequirement_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, accuracy_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfoOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        provider_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        requiresNetwork_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        requiresSatellite_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        requiresCell_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        hasMonetaryCost_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        supportsAltitude_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        supportsSpeed_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        supportsBearing_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        powerRequirement_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        accuracy_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo build() {
        org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo result = new org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.provider_ = provider_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.requiresNetwork_ = requiresNetwork_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.requiresSatellite_ = requiresSatellite_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.requiresCell_ = requiresCell_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.hasMonetaryCost_ = hasMonetaryCost_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.supportsAltitude_ = supportsAltitude_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.supportsSpeed_ = supportsSpeed_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.supportsBearing_ = supportsBearing_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.powerRequirement_ = powerRequirement_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.accuracy_ = accuracy_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo.getDefaultInstance()) return this;
        if (other.hasProvider()) {
          setProvider(other.getProvider());
        }
        if (other.hasRequiresNetwork()) {
          setRequiresNetwork(other.getRequiresNetwork());
        }
        if (other.hasRequiresSatellite()) {
          setRequiresSatellite(other.getRequiresSatellite());
        }
        if (other.hasRequiresCell()) {
          setRequiresCell(other.getRequiresCell());
        }
        if (other.hasHasMonetaryCost()) {
          setHasMonetaryCost(other.getHasMonetaryCost());
        }
        if (other.hasSupportsAltitude()) {
          setSupportsAltitude(other.getSupportsAltitude());
        }
        if (other.hasSupportsSpeed()) {
          setSupportsSpeed(other.getSupportsSpeed());
        }
        if (other.hasSupportsBearing()) {
          setSupportsBearing(other.getSupportsBearing());
        }
        if (other.hasPowerRequirement()) {
          setPowerRequirement(other.getPowerRequirement());
        }
        if (other.hasAccuracy()) {
          setAccuracy(other.getAccuracy());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasProvider()) {
          
          return false;
        }
        if (!hasRequiresNetwork()) {
          
          return false;
        }
        if (!hasRequiresSatellite()) {
          
          return false;
        }
        if (!hasRequiresCell()) {
          
          return false;
        }
        if (!hasHasMonetaryCost()) {
          
          return false;
        }
        if (!hasSupportsAltitude()) {
          
          return false;
        }
        if (!hasSupportsSpeed()) {
          
          return false;
        }
        if (!hasSupportsBearing()) {
          
          return false;
        }
        if (!hasPowerRequirement()) {
          
          return false;
        }
        if (!hasAccuracy()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              provider_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              requiresNetwork_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              requiresSatellite_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              requiresCell_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              hasMonetaryCost_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              supportsAltitude_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              supportsSpeed_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              supportsBearing_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              powerRequirement_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              accuracy_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string provider = 1;
      private java.lang.Object provider_ = "";
      public boolean hasProvider() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getProvider() {
        java.lang.Object ref = provider_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          provider_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setProvider(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        provider_ = value;
        
        return this;
      }
      public Builder clearProvider() {
        bitField0_ = (bitField0_ & ~0x00000001);
        provider_ = getDefaultInstance().getProvider();
        
        return this;
      }
      void setProvider(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        provider_ = value;
        
      }
      
      // required bool requiresNetwork = 2;
      private boolean requiresNetwork_ ;
      public boolean hasRequiresNetwork() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getRequiresNetwork() {
        return requiresNetwork_;
      }
      public Builder setRequiresNetwork(boolean value) {
        bitField0_ |= 0x00000002;
        requiresNetwork_ = value;
        
        return this;
      }
      public Builder clearRequiresNetwork() {
        bitField0_ = (bitField0_ & ~0x00000002);
        requiresNetwork_ = false;
        
        return this;
      }
      
      // required bool requiresSatellite = 3;
      private boolean requiresSatellite_ ;
      public boolean hasRequiresSatellite() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getRequiresSatellite() {
        return requiresSatellite_;
      }
      public Builder setRequiresSatellite(boolean value) {
        bitField0_ |= 0x00000004;
        requiresSatellite_ = value;
        
        return this;
      }
      public Builder clearRequiresSatellite() {
        bitField0_ = (bitField0_ & ~0x00000004);
        requiresSatellite_ = false;
        
        return this;
      }
      
      // required bool requiresCell = 4;
      private boolean requiresCell_ ;
      public boolean hasRequiresCell() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getRequiresCell() {
        return requiresCell_;
      }
      public Builder setRequiresCell(boolean value) {
        bitField0_ |= 0x00000008;
        requiresCell_ = value;
        
        return this;
      }
      public Builder clearRequiresCell() {
        bitField0_ = (bitField0_ & ~0x00000008);
        requiresCell_ = false;
        
        return this;
      }
      
      // required bool hasMonetaryCost = 5;
      private boolean hasMonetaryCost_ ;
      public boolean hasHasMonetaryCost() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getHasMonetaryCost() {
        return hasMonetaryCost_;
      }
      public Builder setHasMonetaryCost(boolean value) {
        bitField0_ |= 0x00000010;
        hasMonetaryCost_ = value;
        
        return this;
      }
      public Builder clearHasMonetaryCost() {
        bitField0_ = (bitField0_ & ~0x00000010);
        hasMonetaryCost_ = false;
        
        return this;
      }
      
      // required bool supportsAltitude = 6;
      private boolean supportsAltitude_ ;
      public boolean hasSupportsAltitude() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public boolean getSupportsAltitude() {
        return supportsAltitude_;
      }
      public Builder setSupportsAltitude(boolean value) {
        bitField0_ |= 0x00000020;
        supportsAltitude_ = value;
        
        return this;
      }
      public Builder clearSupportsAltitude() {
        bitField0_ = (bitField0_ & ~0x00000020);
        supportsAltitude_ = false;
        
        return this;
      }
      
      // required bool supportsSpeed = 7;
      private boolean supportsSpeed_ ;
      public boolean hasSupportsSpeed() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public boolean getSupportsSpeed() {
        return supportsSpeed_;
      }
      public Builder setSupportsSpeed(boolean value) {
        bitField0_ |= 0x00000040;
        supportsSpeed_ = value;
        
        return this;
      }
      public Builder clearSupportsSpeed() {
        bitField0_ = (bitField0_ & ~0x00000040);
        supportsSpeed_ = false;
        
        return this;
      }
      
      // required bool supportsBearing = 8;
      private boolean supportsBearing_ ;
      public boolean hasSupportsBearing() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getSupportsBearing() {
        return supportsBearing_;
      }
      public Builder setSupportsBearing(boolean value) {
        bitField0_ |= 0x00000080;
        supportsBearing_ = value;
        
        return this;
      }
      public Builder clearSupportsBearing() {
        bitField0_ = (bitField0_ & ~0x00000080);
        supportsBearing_ = false;
        
        return this;
      }
      
      // required int32 powerRequirement = 9;
      private int powerRequirement_ ;
      public boolean hasPowerRequirement() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getPowerRequirement() {
        return powerRequirement_;
      }
      public Builder setPowerRequirement(int value) {
        bitField0_ |= 0x00000100;
        powerRequirement_ = value;
        
        return this;
      }
      public Builder clearPowerRequirement() {
        bitField0_ = (bitField0_ & ~0x00000100);
        powerRequirement_ = 0;
        
        return this;
      }
      
      // required int32 accuracy = 10;
      private int accuracy_ ;
      public boolean hasAccuracy() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getAccuracy() {
        return accuracy_;
      }
      public Builder setAccuracy(int value) {
        bitField0_ |= 0x00000200;
        accuracy_ = value;
        
        return this;
      }
      public Builder clearAccuracy() {
        bitField0_ = (bitField0_ & ~0x00000200);
        accuracy_ = 0;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.LocationProviderInfo)
    }
    
    static {
      defaultInstance = new LocationProviderInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.LocationProviderInfo)
  }
  
  public interface LocationProviderStatusOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string provider = 1;
    boolean hasProvider();
    String getProvider();
    
    // required int32 status = 2;
    boolean hasStatus();
    int getStatus();
    
    // repeated .svmp.LocationProviderStatus.Tuple extras = 3;
    java.util.List<org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple> 
        getExtrasList();
    org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple getExtras(int index);
    int getExtrasCount();
  }
  public static final class LocationProviderStatus extends
      com.google.protobuf.GeneratedMessageLite
      implements LocationProviderStatusOrBuilder {
    // Use LocationProviderStatus.newBuilder() to construct.
    private LocationProviderStatus(Builder builder) {
      super(builder);
    }
    private LocationProviderStatus(boolean noInit) {}
    
    private static final LocationProviderStatus defaultInstance;
    public static LocationProviderStatus getDefaultInstance() {
      return defaultInstance;
    }
    
    public LocationProviderStatus getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public interface TupleOrBuilder
        extends com.google.protobuf.MessageLiteOrBuilder {
      
      // required string key = 1;
      boolean hasKey();
      String getKey();
      
      // required string value = 2;
      boolean hasValue();
      String getValue();
    }
    public static final class Tuple extends
        com.google.protobuf.GeneratedMessageLite
        implements TupleOrBuilder {
      // Use Tuple.newBuilder() to construct.
      private Tuple(Builder builder) {
        super(builder);
      }
      private Tuple(boolean noInit) {}
      
      private static final Tuple defaultInstance;
      public static Tuple getDefaultInstance() {
        return defaultInstance;
      }
      
      public Tuple getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      private int bitField0_;
      // required string key = 1;
      public static final int KEY_FIELD_NUMBER = 1;
      private java.lang.Object key_;
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getKey() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            key_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      // required string value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private java.lang.Object value_;
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getValue() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (com.google.protobuf.Internal.isValidUtf8(bs)) {
            value_ = s;
          }
          return s;
        }
      }
      private com.google.protobuf.ByteString getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8((String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      
      private void initFields() {
        key_ = "";
        value_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;
        
        if (!hasKey()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }
      
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getKeyBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getValueBytes());
        }
      }
      
      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
      
        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getKeyBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getValueBytes());
        }
        memoizedSerializedSize = size;
        return size;
      }
      
      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }
      
      public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple, Builder>
          implements org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.TupleOrBuilder {
        // Construct using org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }
        
        private void maybeForceBuilderInitialization() {
        }
        private static Builder create() {
          return new Builder();
        }
        
        public Builder clear() {
          super.clear();
          key_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }
        
        public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple getDefaultInstanceForType() {
          return org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple.getDefaultInstance();
        }
        
        public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple build() {
          org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }
        
        private org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return result;
        }
        
        public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple buildPartial() {
          org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple result = new org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.key_ = key_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          result.bitField0_ = to_bitField0_;
          return result;
        }
        
        public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple other) {
          if (other == org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple.getDefaultInstance()) return this;
          if (other.hasKey()) {
            setKey(other.getKey());
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          return this;
        }
        
        public final boolean isInitialized() {
          if (!hasKey()) {
            
            return false;
          }
          if (!hasValue()) {
            
            return false;
          }
          return true;
        }
        
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                
                return this;
              default: {
                if (!parseUnknownField(input, extensionRegistry, tag)) {
                  
                  return this;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                key_ = input.readBytes();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                value_ = input.readBytes();
                break;
              }
            }
          }
        }
        
        private int bitField0_;
        
        // required string key = 1;
        private java.lang.Object key_ = "";
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        public String getKey() {
          java.lang.Object ref = key_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            key_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setKey(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          key_ = value;
          
          return this;
        }
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = getDefaultInstance().getKey();
          
          return this;
        }
        void setKey(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000001;
          key_ = value;
          
        }
        
        // required string value = 2;
        private java.lang.Object value_ = "";
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        public String getValue() {
          java.lang.Object ref = value_;
          if (!(ref instanceof String)) {
            String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
            value_ = s;
            return s;
          } else {
            return (String) ref;
          }
        }
        public Builder setValue(String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          value_ = value;
          
          return this;
        }
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = getDefaultInstance().getValue();
          
          return this;
        }
        void setValue(com.google.protobuf.ByteString value) {
          bitField0_ |= 0x00000002;
          value_ = value;
          
        }
        
        // @@protoc_insertion_point(builder_scope:svmp.LocationProviderStatus.Tuple)
      }
      
      static {
        defaultInstance = new Tuple(true);
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:svmp.LocationProviderStatus.Tuple)
    }
    
    private int bitField0_;
    // required string provider = 1;
    public static final int PROVIDER_FIELD_NUMBER = 1;
    private java.lang.Object provider_;
    public boolean hasProvider() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getProvider() {
      java.lang.Object ref = provider_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          provider_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getProviderBytes() {
      java.lang.Object ref = provider_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        provider_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int32 status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private int status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getStatus() {
      return status_;
    }
    
    // repeated .svmp.LocationProviderStatus.Tuple extras = 3;
    public static final int EXTRAS_FIELD_NUMBER = 3;
    private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple> extras_;
    public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple> getExtrasList() {
      return extras_;
    }
    public java.util.List<? extends org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.TupleOrBuilder> 
        getExtrasOrBuilderList() {
      return extras_;
    }
    public int getExtrasCount() {
      return extras_.size();
    }
    public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple getExtras(int index) {
      return extras_.get(index);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.TupleOrBuilder getExtrasOrBuilder(
        int index) {
      return extras_.get(index);
    }
    
    private void initFields() {
      provider_ = "";
      status_ = 0;
      extras_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasProvider()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasStatus()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getExtrasCount(); i++) {
        if (!getExtras(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getProviderBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, status_);
      }
      for (int i = 0; i < extras_.size(); i++) {
        output.writeMessage(3, extras_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getProviderBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, status_);
      }
      for (int i = 0; i < extras_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, extras_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatusOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        provider_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        extras_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus build() {
        org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus result = new org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.provider_ = provider_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          extras_ = java.util.Collections.unmodifiableList(extras_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.extras_ = extras_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.getDefaultInstance()) return this;
        if (other.hasProvider()) {
          setProvider(other.getProvider());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (!other.extras_.isEmpty()) {
          if (extras_.isEmpty()) {
            extras_ = other.extras_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureExtrasIsMutable();
            extras_.addAll(other.extras_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasProvider()) {
          
          return false;
        }
        if (!hasStatus()) {
          
          return false;
        }
        for (int i = 0; i < getExtrasCount(); i++) {
          if (!getExtras(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              provider_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              status_ = input.readInt32();
              break;
            }
            case 26: {
              org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addExtras(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string provider = 1;
      private java.lang.Object provider_ = "";
      public boolean hasProvider() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getProvider() {
        java.lang.Object ref = provider_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          provider_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setProvider(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        provider_ = value;
        
        return this;
      }
      public Builder clearProvider() {
        bitField0_ = (bitField0_ & ~0x00000001);
        provider_ = getDefaultInstance().getProvider();
        
        return this;
      }
      void setProvider(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        provider_ = value;
        
      }
      
      // required int32 status = 2;
      private int status_ ;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getStatus() {
        return status_;
      }
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000002;
        status_ = value;
        
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = 0;
        
        return this;
      }
      
      // repeated .svmp.LocationProviderStatus.Tuple extras = 3;
      private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple> extras_ =
        java.util.Collections.emptyList();
      private void ensureExtrasIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          extras_ = new java.util.ArrayList<org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple>(extras_);
          bitField0_ |= 0x00000004;
         }
      }
      
      public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple> getExtrasList() {
        return java.util.Collections.unmodifiableList(extras_);
      }
      public int getExtrasCount() {
        return extras_.size();
      }
      public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple getExtras(int index) {
        return extras_.get(index);
      }
      public Builder setExtras(
          int index, org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtrasIsMutable();
        extras_.set(index, value);
        
        return this;
      }
      public Builder setExtras(
          int index, org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple.Builder builderForValue) {
        ensureExtrasIsMutable();
        extras_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addExtras(org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtrasIsMutable();
        extras_.add(value);
        
        return this;
      }
      public Builder addExtras(
          int index, org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureExtrasIsMutable();
        extras_.add(index, value);
        
        return this;
      }
      public Builder addExtras(
          org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple.Builder builderForValue) {
        ensureExtrasIsMutable();
        extras_.add(builderForValue.build());
        
        return this;
      }
      public Builder addExtras(
          int index, org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple.Builder builderForValue) {
        ensureExtrasIsMutable();
        extras_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllExtras(
          java.lang.Iterable<? extends org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Tuple> values) {
        ensureExtrasIsMutable();
        super.addAll(values, extras_);
        
        return this;
      }
      public Builder clearExtras() {
        extras_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        
        return this;
      }
      public Builder removeExtras(int index) {
        ensureExtrasIsMutable();
        extras_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.LocationProviderStatus)
    }
    
    static {
      defaultInstance = new LocationProviderStatus(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.LocationProviderStatus)
  }
  
  public interface LocationProviderEnabledOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string provider = 1;
    boolean hasProvider();
    String getProvider();
    
    // required bool enabled = 2;
    boolean hasEnabled();
    boolean getEnabled();
  }
  public static final class LocationProviderEnabled extends
      com.google.protobuf.GeneratedMessageLite
      implements LocationProviderEnabledOrBuilder {
    // Use LocationProviderEnabled.newBuilder() to construct.
    private LocationProviderEnabled(Builder builder) {
      super(builder);
    }
    private LocationProviderEnabled(boolean noInit) {}
    
    private static final LocationProviderEnabled defaultInstance;
    public static LocationProviderEnabled getDefaultInstance() {
      return defaultInstance;
    }
    
    public LocationProviderEnabled getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string provider = 1;
    public static final int PROVIDER_FIELD_NUMBER = 1;
    private java.lang.Object provider_;
    public boolean hasProvider() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getProvider() {
      java.lang.Object ref = provider_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          provider_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getProviderBytes() {
      java.lang.Object ref = provider_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        provider_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required bool enabled = 2;
    public static final int ENABLED_FIELD_NUMBER = 2;
    private boolean enabled_;
    public boolean hasEnabled() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getEnabled() {
      return enabled_;
    }
    
    private void initFields() {
      provider_ = "";
      enabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasProvider()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEnabled()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getProviderBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, enabled_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getProviderBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, enabled_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabledOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        provider_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        enabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled build() {
        org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled result = new org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.provider_ = provider_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.enabled_ = enabled_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled.getDefaultInstance()) return this;
        if (other.hasProvider()) {
          setProvider(other.getProvider());
        }
        if (other.hasEnabled()) {
          setEnabled(other.getEnabled());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasProvider()) {
          
          return false;
        }
        if (!hasEnabled()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              provider_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              enabled_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string provider = 1;
      private java.lang.Object provider_ = "";
      public boolean hasProvider() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getProvider() {
        java.lang.Object ref = provider_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          provider_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setProvider(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        provider_ = value;
        
        return this;
      }
      public Builder clearProvider() {
        bitField0_ = (bitField0_ & ~0x00000001);
        provider_ = getDefaultInstance().getProvider();
        
        return this;
      }
      void setProvider(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        provider_ = value;
        
      }
      
      // required bool enabled = 2;
      private boolean enabled_ ;
      public boolean hasEnabled() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getEnabled() {
        return enabled_;
      }
      public Builder setEnabled(boolean value) {
        bitField0_ |= 0x00000002;
        enabled_ = value;
        
        return this;
      }
      public Builder clearEnabled() {
        bitField0_ = (bitField0_ & ~0x00000002);
        enabled_ = false;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.LocationProviderEnabled)
    }
    
    static {
      defaultInstance = new LocationProviderEnabled(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.LocationProviderEnabled)
  }
  
  public interface LocationUpdateOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required double latitude = 1;
    boolean hasLatitude();
    double getLatitude();
    
    // required double longitude = 2;
    boolean hasLongitude();
    double getLongitude();
    
    // required int64 time = 3;
    boolean hasTime();
    long getTime();
    
    // optional string provider = 4;
    boolean hasProvider();
    String getProvider();
    
    // optional float accuracy = 5;
    boolean hasAccuracy();
    float getAccuracy();
    
    // optional double altitude = 6;
    boolean hasAltitude();
    double getAltitude();
    
    // optional float bearing = 7;
    boolean hasBearing();
    float getBearing();
    
    // optional float speed = 8;
    boolean hasSpeed();
    float getSpeed();
  }
  public static final class LocationUpdate extends
      com.google.protobuf.GeneratedMessageLite
      implements LocationUpdateOrBuilder {
    // Use LocationUpdate.newBuilder() to construct.
    private LocationUpdate(Builder builder) {
      super(builder);
    }
    private LocationUpdate(boolean noInit) {}
    
    private static final LocationUpdate defaultInstance;
    public static LocationUpdate getDefaultInstance() {
      return defaultInstance;
    }
    
    public LocationUpdate getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required double latitude = 1;
    public static final int LATITUDE_FIELD_NUMBER = 1;
    private double latitude_;
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public double getLatitude() {
      return latitude_;
    }
    
    // required double longitude = 2;
    public static final int LONGITUDE_FIELD_NUMBER = 2;
    private double longitude_;
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public double getLongitude() {
      return longitude_;
    }
    
    // required int64 time = 3;
    public static final int TIME_FIELD_NUMBER = 3;
    private long time_;
    public boolean hasTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getTime() {
      return time_;
    }
    
    // optional string provider = 4;
    public static final int PROVIDER_FIELD_NUMBER = 4;
    private java.lang.Object provider_;
    public boolean hasProvider() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getProvider() {
      java.lang.Object ref = provider_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          provider_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getProviderBytes() {
      java.lang.Object ref = provider_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        provider_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional float accuracy = 5;
    public static final int ACCURACY_FIELD_NUMBER = 5;
    private float accuracy_;
    public boolean hasAccuracy() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public float getAccuracy() {
      return accuracy_;
    }
    
    // optional double altitude = 6;
    public static final int ALTITUDE_FIELD_NUMBER = 6;
    private double altitude_;
    public boolean hasAltitude() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public double getAltitude() {
      return altitude_;
    }
    
    // optional float bearing = 7;
    public static final int BEARING_FIELD_NUMBER = 7;
    private float bearing_;
    public boolean hasBearing() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public float getBearing() {
      return bearing_;
    }
    
    // optional float speed = 8;
    public static final int SPEED_FIELD_NUMBER = 8;
    private float speed_;
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public float getSpeed() {
      return speed_;
    }
    
    private void initFields() {
      latitude_ = 0D;
      longitude_ = 0D;
      time_ = 0L;
      provider_ = "";
      accuracy_ = 0F;
      altitude_ = 0D;
      bearing_ = 0F;
      speed_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasLatitude()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasLongitude()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, latitude_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeDouble(2, longitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, time_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getProviderBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, accuracy_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, altitude_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, bearing_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, speed_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, latitude_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, longitude_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, time_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getProviderBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, accuracy_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, altitude_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, bearing_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, speed_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.LocationUpdateOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        latitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        longitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000002);
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        provider_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        accuracy_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        altitude_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        bearing_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        speed_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate build() {
        org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate result = new org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.longitude_ = longitude_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.provider_ = provider_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.accuracy_ = accuracy_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.altitude_ = altitude_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bearing_ = bearing_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.speed_ = speed_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate.getDefaultInstance()) return this;
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasProvider()) {
          setProvider(other.getProvider());
        }
        if (other.hasAccuracy()) {
          setAccuracy(other.getAccuracy());
        }
        if (other.hasAltitude()) {
          setAltitude(other.getAltitude());
        }
        if (other.hasBearing()) {
          setBearing(other.getBearing());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasLatitude()) {
          
          return false;
        }
        if (!hasLongitude()) {
          
          return false;
        }
        if (!hasTime()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              latitude_ = input.readDouble();
              break;
            }
            case 17: {
              bitField0_ |= 0x00000002;
              longitude_ = input.readDouble();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              time_ = input.readInt64();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              provider_ = input.readBytes();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              accuracy_ = input.readFloat();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              altitude_ = input.readDouble();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              bearing_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              speed_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required double latitude = 1;
      private double latitude_ ;
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public double getLatitude() {
        return latitude_;
      }
      public Builder setLatitude(double value) {
        bitField0_ |= 0x00000001;
        latitude_ = value;
        
        return this;
      }
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000001);
        latitude_ = 0D;
        
        return this;
      }
      
      // required double longitude = 2;
      private double longitude_ ;
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public double getLongitude() {
        return longitude_;
      }
      public Builder setLongitude(double value) {
        bitField0_ |= 0x00000002;
        longitude_ = value;
        
        return this;
      }
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000002);
        longitude_ = 0D;
        
        return this;
      }
      
      // required int64 time = 3;
      private long time_ ;
      public boolean hasTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getTime() {
        return time_;
      }
      public Builder setTime(long value) {
        bitField0_ |= 0x00000004;
        time_ = value;
        
        return this;
      }
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        time_ = 0L;
        
        return this;
      }
      
      // optional string provider = 4;
      private java.lang.Object provider_ = "";
      public boolean hasProvider() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getProvider() {
        java.lang.Object ref = provider_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          provider_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setProvider(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        provider_ = value;
        
        return this;
      }
      public Builder clearProvider() {
        bitField0_ = (bitField0_ & ~0x00000008);
        provider_ = getDefaultInstance().getProvider();
        
        return this;
      }
      void setProvider(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        provider_ = value;
        
      }
      
      // optional float accuracy = 5;
      private float accuracy_ ;
      public boolean hasAccuracy() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public float getAccuracy() {
        return accuracy_;
      }
      public Builder setAccuracy(float value) {
        bitField0_ |= 0x00000010;
        accuracy_ = value;
        
        return this;
      }
      public Builder clearAccuracy() {
        bitField0_ = (bitField0_ & ~0x00000010);
        accuracy_ = 0F;
        
        return this;
      }
      
      // optional double altitude = 6;
      private double altitude_ ;
      public boolean hasAltitude() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public double getAltitude() {
        return altitude_;
      }
      public Builder setAltitude(double value) {
        bitField0_ |= 0x00000020;
        altitude_ = value;
        
        return this;
      }
      public Builder clearAltitude() {
        bitField0_ = (bitField0_ & ~0x00000020);
        altitude_ = 0D;
        
        return this;
      }
      
      // optional float bearing = 7;
      private float bearing_ ;
      public boolean hasBearing() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public float getBearing() {
        return bearing_;
      }
      public Builder setBearing(float value) {
        bitField0_ |= 0x00000040;
        bearing_ = value;
        
        return this;
      }
      public Builder clearBearing() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bearing_ = 0F;
        
        return this;
      }
      
      // optional float speed = 8;
      private float speed_ ;
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public float getSpeed() {
        return speed_;
      }
      public Builder setSpeed(float value) {
        bitField0_ |= 0x00000080;
        speed_ = value;
        
        return this;
      }
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000080);
        speed_ = 0F;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.LocationUpdate)
    }
    
    static {
      defaultInstance = new LocationUpdate(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.LocationUpdate)
  }
  
  public interface LocationRequestOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .svmp.LocationRequest.LocationRequestType type = 1;
    boolean hasType();
    org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.LocationRequestType getType();
    
    // optional .svmp.LocationProviderInfo providerInfo = 2;
    boolean hasProviderInfo();
    org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo getProviderInfo();
    
    // optional .svmp.LocationProviderStatus providerStatus = 3;
    boolean hasProviderStatus();
    org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus getProviderStatus();
    
    // optional .svmp.LocationProviderEnabled providerEnabled = 4;
    boolean hasProviderEnabled();
    org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled getProviderEnabled();
    
    // optional .svmp.LocationUpdate update = 5;
    boolean hasUpdate();
    org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate getUpdate();
  }
  public static final class LocationRequest extends
      com.google.protobuf.GeneratedMessageLite
      implements LocationRequestOrBuilder {
    // Use LocationRequest.newBuilder() to construct.
    private LocationRequest(Builder builder) {
      super(builder);
    }
    private LocationRequest(boolean noInit) {}
    
    private static final LocationRequest defaultInstance;
    public static LocationRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public LocationRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum LocationRequestType
        implements com.google.protobuf.Internal.EnumLite {
      PROVIDERINFO(0, 1),
      PROVIDERSTATUS(1, 2),
      PROVIDERENABLED(2, 3),
      LOCATIONUPDATE(3, 4),
      ;
      
      public static final int PROVIDERINFO_VALUE = 1;
      public static final int PROVIDERSTATUS_VALUE = 2;
      public static final int PROVIDERENABLED_VALUE = 3;
      public static final int LOCATIONUPDATE_VALUE = 4;
      
      
      public final int getNumber() { return value; }
      
      public static LocationRequestType valueOf(int value) {
        switch (value) {
          case 1: return PROVIDERINFO;
          case 2: return PROVIDERSTATUS;
          case 3: return PROVIDERENABLED;
          case 4: return LOCATIONUPDATE;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<LocationRequestType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<LocationRequestType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LocationRequestType>() {
              public LocationRequestType findValueByNumber(int number) {
                return LocationRequestType.valueOf(number);
              }
            };
      
      private final int value;
      
      private LocationRequestType(int index, int value) {
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:svmp.LocationRequest.LocationRequestType)
    }
    
    private int bitField0_;
    // required .svmp.LocationRequest.LocationRequestType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.LocationRequestType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.LocationRequestType getType() {
      return type_;
    }
    
    // optional .svmp.LocationProviderInfo providerInfo = 2;
    public static final int PROVIDERINFO_FIELD_NUMBER = 2;
    private org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo providerInfo_;
    public boolean hasProviderInfo() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo getProviderInfo() {
      return providerInfo_;
    }
    
    // optional .svmp.LocationProviderStatus providerStatus = 3;
    public static final int PROVIDERSTATUS_FIELD_NUMBER = 3;
    private org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus providerStatus_;
    public boolean hasProviderStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus getProviderStatus() {
      return providerStatus_;
    }
    
    // optional .svmp.LocationProviderEnabled providerEnabled = 4;
    public static final int PROVIDERENABLED_FIELD_NUMBER = 4;
    private org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled providerEnabled_;
    public boolean hasProviderEnabled() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled getProviderEnabled() {
      return providerEnabled_;
    }
    
    // optional .svmp.LocationUpdate update = 5;
    public static final int UPDATE_FIELD_NUMBER = 5;
    private org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate update_;
    public boolean hasUpdate() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate getUpdate() {
      return update_;
    }
    
    private void initFields() {
      type_ = org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.LocationRequestType.PROVIDERINFO;
      providerInfo_ = org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo.getDefaultInstance();
      providerStatus_ = org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.getDefaultInstance();
      providerEnabled_ = org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled.getDefaultInstance();
      update_ = org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasProviderInfo()) {
        if (!getProviderInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasProviderStatus()) {
        if (!getProviderStatus().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasProviderEnabled()) {
        if (!getProviderEnabled().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasUpdate()) {
        if (!getUpdate().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, providerInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, providerStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, providerEnabled_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, update_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, providerInfo_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, providerStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, providerEnabled_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, update_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.LocationRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.LocationRequest, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.LocationRequestOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.LocationRequestType.PROVIDERINFO;
        bitField0_ = (bitField0_ & ~0x00000001);
        providerInfo_ = org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        providerStatus_ = org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        providerEnabled_ = org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000008);
        update_ = org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationRequest getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationRequest build() {
        org.mitre.svmp.protocol.SVMPProtocol.LocationRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.LocationRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.LocationRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationRequest buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.LocationRequest result = new org.mitre.svmp.protocol.SVMPProtocol.LocationRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.providerInfo_ = providerInfo_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.providerStatus_ = providerStatus_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.providerEnabled_ = providerEnabled_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.update_ = update_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.LocationRequest other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasProviderInfo()) {
          mergeProviderInfo(other.getProviderInfo());
        }
        if (other.hasProviderStatus()) {
          mergeProviderStatus(other.getProviderStatus());
        }
        if (other.hasProviderEnabled()) {
          mergeProviderEnabled(other.getProviderEnabled());
        }
        if (other.hasUpdate()) {
          mergeUpdate(other.getUpdate());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (hasProviderInfo()) {
          if (!getProviderInfo().isInitialized()) {
            
            return false;
          }
        }
        if (hasProviderStatus()) {
          if (!getProviderStatus().isInitialized()) {
            
            return false;
          }
        }
        if (hasProviderEnabled()) {
          if (!getProviderEnabled().isInitialized()) {
            
            return false;
          }
        }
        if (hasUpdate()) {
          if (!getUpdate().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.LocationRequestType value = org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.LocationRequestType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo.newBuilder();
              if (hasProviderInfo()) {
                subBuilder.mergeFrom(getProviderInfo());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setProviderInfo(subBuilder.buildPartial());
              break;
            }
            case 26: {
              org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.newBuilder();
              if (hasProviderStatus()) {
                subBuilder.mergeFrom(getProviderStatus());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setProviderStatus(subBuilder.buildPartial());
              break;
            }
            case 34: {
              org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled.newBuilder();
              if (hasProviderEnabled()) {
                subBuilder.mergeFrom(getProviderEnabled());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setProviderEnabled(subBuilder.buildPartial());
              break;
            }
            case 42: {
              org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate.newBuilder();
              if (hasUpdate()) {
                subBuilder.mergeFrom(getUpdate());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUpdate(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .svmp.LocationRequest.LocationRequestType type = 1;
      private org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.LocationRequestType type_ = org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.LocationRequestType.PROVIDERINFO;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.LocationRequestType getType() {
        return type_;
      }
      public Builder setType(org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.LocationRequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.mitre.svmp.protocol.SVMPProtocol.LocationRequest.LocationRequestType.PROVIDERINFO;
        
        return this;
      }
      
      // optional .svmp.LocationProviderInfo providerInfo = 2;
      private org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo providerInfo_ = org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo.getDefaultInstance();
      public boolean hasProviderInfo() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo getProviderInfo() {
        return providerInfo_;
      }
      public Builder setProviderInfo(org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        providerInfo_ = value;
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setProviderInfo(
          org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo.Builder builderForValue) {
        providerInfo_ = builderForValue.build();
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeProviderInfo(org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            providerInfo_ != org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo.getDefaultInstance()) {
          providerInfo_ =
            org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo.newBuilder(providerInfo_).mergeFrom(value).buildPartial();
        } else {
          providerInfo_ = value;
        }
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearProviderInfo() {
        providerInfo_ = org.mitre.svmp.protocol.SVMPProtocol.LocationProviderInfo.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      // optional .svmp.LocationProviderStatus providerStatus = 3;
      private org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus providerStatus_ = org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.getDefaultInstance();
      public boolean hasProviderStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus getProviderStatus() {
        return providerStatus_;
      }
      public Builder setProviderStatus(org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        providerStatus_ = value;
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setProviderStatus(
          org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.Builder builderForValue) {
        providerStatus_ = builderForValue.build();
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeProviderStatus(org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            providerStatus_ != org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.getDefaultInstance()) {
          providerStatus_ =
            org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.newBuilder(providerStatus_).mergeFrom(value).buildPartial();
        } else {
          providerStatus_ = value;
        }
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearProviderStatus() {
        providerStatus_ = org.mitre.svmp.protocol.SVMPProtocol.LocationProviderStatus.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      // optional .svmp.LocationProviderEnabled providerEnabled = 4;
      private org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled providerEnabled_ = org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled.getDefaultInstance();
      public boolean hasProviderEnabled() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled getProviderEnabled() {
        return providerEnabled_;
      }
      public Builder setProviderEnabled(org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled value) {
        if (value == null) {
          throw new NullPointerException();
        }
        providerEnabled_ = value;
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setProviderEnabled(
          org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled.Builder builderForValue) {
        providerEnabled_ = builderForValue.build();
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeProviderEnabled(org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled value) {
        if (((bitField0_ & 0x00000008) == 0x00000008) &&
            providerEnabled_ != org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled.getDefaultInstance()) {
          providerEnabled_ =
            org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled.newBuilder(providerEnabled_).mergeFrom(value).buildPartial();
        } else {
          providerEnabled_ = value;
        }
        
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearProviderEnabled() {
        providerEnabled_ = org.mitre.svmp.protocol.SVMPProtocol.LocationProviderEnabled.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      // optional .svmp.LocationUpdate update = 5;
      private org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate update_ = org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate.getDefaultInstance();
      public boolean hasUpdate() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate getUpdate() {
        return update_;
      }
      public Builder setUpdate(org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate value) {
        if (value == null) {
          throw new NullPointerException();
        }
        update_ = value;
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setUpdate(
          org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate.Builder builderForValue) {
        update_ = builderForValue.build();
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeUpdate(org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate value) {
        if (((bitField0_ & 0x00000010) == 0x00000010) &&
            update_ != org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate.getDefaultInstance()) {
          update_ =
            org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate.newBuilder(update_).mergeFrom(value).buildPartial();
        } else {
          update_ = value;
        }
        
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearUpdate() {
        update_ = org.mitre.svmp.protocol.SVMPProtocol.LocationUpdate.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.LocationRequest)
    }
    
    static {
      defaultInstance = new LocationRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.LocationRequest)
  }
  
  public interface LocationSubscribeOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .svmp.LocationSubscribe.LocationSubscribeType type = 1;
    boolean hasType();
    org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.LocationSubscribeType getType();
    
    // required string provider = 2;
    boolean hasProvider();
    String getProvider();
    
    // optional int64 minTime = 3;
    boolean hasMinTime();
    long getMinTime();
    
    // optional float minDistance = 4;
    boolean hasMinDistance();
    float getMinDistance();
  }
  public static final class LocationSubscribe extends
      com.google.protobuf.GeneratedMessageLite
      implements LocationSubscribeOrBuilder {
    // Use LocationSubscribe.newBuilder() to construct.
    private LocationSubscribe(Builder builder) {
      super(builder);
    }
    private LocationSubscribe(boolean noInit) {}
    
    private static final LocationSubscribe defaultInstance;
    public static LocationSubscribe getDefaultInstance() {
      return defaultInstance;
    }
    
    public LocationSubscribe getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum LocationSubscribeType
        implements com.google.protobuf.Internal.EnumLite {
      SINGLE_UPDATE(0, 1),
      MULTIPLE_UPDATES(1, 2),
      ;
      
      public static final int SINGLE_UPDATE_VALUE = 1;
      public static final int MULTIPLE_UPDATES_VALUE = 2;
      
      
      public final int getNumber() { return value; }
      
      public static LocationSubscribeType valueOf(int value) {
        switch (value) {
          case 1: return SINGLE_UPDATE;
          case 2: return MULTIPLE_UPDATES;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<LocationSubscribeType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<LocationSubscribeType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LocationSubscribeType>() {
              public LocationSubscribeType findValueByNumber(int number) {
                return LocationSubscribeType.valueOf(number);
              }
            };
      
      private final int value;
      
      private LocationSubscribeType(int index, int value) {
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:svmp.LocationSubscribe.LocationSubscribeType)
    }
    
    private int bitField0_;
    // required .svmp.LocationSubscribe.LocationSubscribeType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.LocationSubscribeType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.LocationSubscribeType getType() {
      return type_;
    }
    
    // required string provider = 2;
    public static final int PROVIDER_FIELD_NUMBER = 2;
    private java.lang.Object provider_;
    public boolean hasProvider() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getProvider() {
      java.lang.Object ref = provider_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          provider_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getProviderBytes() {
      java.lang.Object ref = provider_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        provider_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int64 minTime = 3;
    public static final int MINTIME_FIELD_NUMBER = 3;
    private long minTime_;
    public boolean hasMinTime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getMinTime() {
      return minTime_;
    }
    
    // optional float minDistance = 4;
    public static final int MINDISTANCE_FIELD_NUMBER = 4;
    private float minDistance_;
    public boolean hasMinDistance() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getMinDistance() {
      return minDistance_;
    }
    
    private void initFields() {
      type_ = org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.LocationSubscribeType.SINGLE_UPDATE;
      provider_ = "";
      minTime_ = 0L;
      minDistance_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProvider()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getProviderBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, minTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, minDistance_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getProviderBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, minTime_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, minDistance_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribeOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.LocationSubscribeType.SINGLE_UPDATE;
        bitField0_ = (bitField0_ & ~0x00000001);
        provider_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        minTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        minDistance_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe build() {
        org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe result = new org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.provider_ = provider_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.minTime_ = minTime_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.minDistance_ = minDistance_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasProvider()) {
          setProvider(other.getProvider());
        }
        if (other.hasMinTime()) {
          setMinTime(other.getMinTime());
        }
        if (other.hasMinDistance()) {
          setMinDistance(other.getMinDistance());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (!hasProvider()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.LocationSubscribeType value = org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.LocationSubscribeType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              provider_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              minTime_ = input.readInt64();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              minDistance_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .svmp.LocationSubscribe.LocationSubscribeType type = 1;
      private org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.LocationSubscribeType type_ = org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.LocationSubscribeType.SINGLE_UPDATE;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.LocationSubscribeType getType() {
        return type_;
      }
      public Builder setType(org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.LocationSubscribeType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.LocationSubscribeType.SINGLE_UPDATE;
        
        return this;
      }
      
      // required string provider = 2;
      private java.lang.Object provider_ = "";
      public boolean hasProvider() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getProvider() {
        java.lang.Object ref = provider_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          provider_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setProvider(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        provider_ = value;
        
        return this;
      }
      public Builder clearProvider() {
        bitField0_ = (bitField0_ & ~0x00000002);
        provider_ = getDefaultInstance().getProvider();
        
        return this;
      }
      void setProvider(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        provider_ = value;
        
      }
      
      // optional int64 minTime = 3;
      private long minTime_ ;
      public boolean hasMinTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getMinTime() {
        return minTime_;
      }
      public Builder setMinTime(long value) {
        bitField0_ |= 0x00000004;
        minTime_ = value;
        
        return this;
      }
      public Builder clearMinTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        minTime_ = 0L;
        
        return this;
      }
      
      // optional float minDistance = 4;
      private float minDistance_ ;
      public boolean hasMinDistance() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getMinDistance() {
        return minDistance_;
      }
      public Builder setMinDistance(float value) {
        bitField0_ |= 0x00000008;
        minDistance_ = value;
        
        return this;
      }
      public Builder clearMinDistance() {
        bitField0_ = (bitField0_ & ~0x00000008);
        minDistance_ = 0F;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.LocationSubscribe)
    }
    
    static {
      defaultInstance = new LocationSubscribe(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.LocationSubscribe)
  }
  
  public interface LocationUnsubscribeOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string provider = 1;
    boolean hasProvider();
    String getProvider();
  }
  public static final class LocationUnsubscribe extends
      com.google.protobuf.GeneratedMessageLite
      implements LocationUnsubscribeOrBuilder {
    // Use LocationUnsubscribe.newBuilder() to construct.
    private LocationUnsubscribe(Builder builder) {
      super(builder);
    }
    private LocationUnsubscribe(boolean noInit) {}
    
    private static final LocationUnsubscribe defaultInstance;
    public static LocationUnsubscribe getDefaultInstance() {
      return defaultInstance;
    }
    
    public LocationUnsubscribe getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string provider = 1;
    public static final int PROVIDER_FIELD_NUMBER = 1;
    private java.lang.Object provider_;
    public boolean hasProvider() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getProvider() {
      java.lang.Object ref = provider_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          provider_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getProviderBytes() {
      java.lang.Object ref = provider_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        provider_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      provider_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasProvider()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getProviderBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getProviderBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribeOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        provider_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe build() {
        org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe result = new org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.provider_ = provider_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe.getDefaultInstance()) return this;
        if (other.hasProvider()) {
          setProvider(other.getProvider());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasProvider()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              provider_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string provider = 1;
      private java.lang.Object provider_ = "";
      public boolean hasProvider() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getProvider() {
        java.lang.Object ref = provider_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          provider_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setProvider(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        provider_ = value;
        
        return this;
      }
      public Builder clearProvider() {
        bitField0_ = (bitField0_ & ~0x00000001);
        provider_ = getDefaultInstance().getProvider();
        
        return this;
      }
      void setProvider(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        provider_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.LocationUnsubscribe)
    }
    
    static {
      defaultInstance = new LocationUnsubscribe(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.LocationUnsubscribe)
  }
  
  public interface LocationResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .svmp.LocationResponse.LocationResponseType type = 1;
    boolean hasType();
    org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.LocationResponseType getType();
    
    // optional .svmp.LocationSubscribe subscribe = 2;
    boolean hasSubscribe();
    org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe getSubscribe();
    
    // optional .svmp.LocationUnsubscribe unsubscribe = 3;
    boolean hasUnsubscribe();
    org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe getUnsubscribe();
  }
  public static final class LocationResponse extends
      com.google.protobuf.GeneratedMessageLite
      implements LocationResponseOrBuilder {
    // Use LocationResponse.newBuilder() to construct.
    private LocationResponse(Builder builder) {
      super(builder);
    }
    private LocationResponse(boolean noInit) {}
    
    private static final LocationResponse defaultInstance;
    public static LocationResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public LocationResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum LocationResponseType
        implements com.google.protobuf.Internal.EnumLite {
      SUBSCRIBE(0, 1),
      UNSUBSCRIBE(1, 2),
      ;
      
      public static final int SUBSCRIBE_VALUE = 1;
      public static final int UNSUBSCRIBE_VALUE = 2;
      
      
      public final int getNumber() { return value; }
      
      public static LocationResponseType valueOf(int value) {
        switch (value) {
          case 1: return SUBSCRIBE;
          case 2: return UNSUBSCRIBE;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<LocationResponseType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<LocationResponseType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<LocationResponseType>() {
              public LocationResponseType findValueByNumber(int number) {
                return LocationResponseType.valueOf(number);
              }
            };
      
      private final int value;
      
      private LocationResponseType(int index, int value) {
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:svmp.LocationResponse.LocationResponseType)
    }
    
    private int bitField0_;
    // required .svmp.LocationResponse.LocationResponseType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.LocationResponseType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.LocationResponseType getType() {
      return type_;
    }
    
    // optional .svmp.LocationSubscribe subscribe = 2;
    public static final int SUBSCRIBE_FIELD_NUMBER = 2;
    private org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe subscribe_;
    public boolean hasSubscribe() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe getSubscribe() {
      return subscribe_;
    }
    
    // optional .svmp.LocationUnsubscribe unsubscribe = 3;
    public static final int UNSUBSCRIBE_FIELD_NUMBER = 3;
    private org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe unsubscribe_;
    public boolean hasUnsubscribe() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe getUnsubscribe() {
      return unsubscribe_;
    }
    
    private void initFields() {
      type_ = org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.LocationResponseType.SUBSCRIBE;
      subscribe_ = org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.getDefaultInstance();
      unsubscribe_ = org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasSubscribe()) {
        if (!getSubscribe().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasUnsubscribe()) {
        if (!getUnsubscribe().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, subscribe_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, unsubscribe_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, subscribe_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, unsubscribe_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.LocationResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.LocationResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.LocationResponse, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.LocationResponseOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.LocationResponseType.SUBSCRIBE;
        bitField0_ = (bitField0_ & ~0x00000001);
        subscribe_ = org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000002);
        unsubscribe_ = org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationResponse getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationResponse build() {
        org.mitre.svmp.protocol.SVMPProtocol.LocationResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.LocationResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.LocationResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.LocationResponse buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.LocationResponse result = new org.mitre.svmp.protocol.SVMPProtocol.LocationResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.subscribe_ = subscribe_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.unsubscribe_ = unsubscribe_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.LocationResponse other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasSubscribe()) {
          mergeSubscribe(other.getSubscribe());
        }
        if (other.hasUnsubscribe()) {
          mergeUnsubscribe(other.getUnsubscribe());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        if (hasSubscribe()) {
          if (!getSubscribe().isInitialized()) {
            
            return false;
          }
        }
        if (hasUnsubscribe()) {
          if (!getUnsubscribe().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.LocationResponseType value = org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.LocationResponseType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.newBuilder();
              if (hasSubscribe()) {
                subBuilder.mergeFrom(getSubscribe());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSubscribe(subBuilder.buildPartial());
              break;
            }
            case 26: {
              org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe.newBuilder();
              if (hasUnsubscribe()) {
                subBuilder.mergeFrom(getUnsubscribe());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUnsubscribe(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .svmp.LocationResponse.LocationResponseType type = 1;
      private org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.LocationResponseType type_ = org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.LocationResponseType.SUBSCRIBE;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.LocationResponseType getType() {
        return type_;
      }
      public Builder setType(org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.LocationResponseType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.mitre.svmp.protocol.SVMPProtocol.LocationResponse.LocationResponseType.SUBSCRIBE;
        
        return this;
      }
      
      // optional .svmp.LocationSubscribe subscribe = 2;
      private org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe subscribe_ = org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.getDefaultInstance();
      public boolean hasSubscribe() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe getSubscribe() {
        return subscribe_;
      }
      public Builder setSubscribe(org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe value) {
        if (value == null) {
          throw new NullPointerException();
        }
        subscribe_ = value;
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setSubscribe(
          org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.Builder builderForValue) {
        subscribe_ = builderForValue.build();
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeSubscribe(org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe value) {
        if (((bitField0_ & 0x00000002) == 0x00000002) &&
            subscribe_ != org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.getDefaultInstance()) {
          subscribe_ =
            org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.newBuilder(subscribe_).mergeFrom(value).buildPartial();
        } else {
          subscribe_ = value;
        }
        
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearSubscribe() {
        subscribe_ = org.mitre.svmp.protocol.SVMPProtocol.LocationSubscribe.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      // optional .svmp.LocationUnsubscribe unsubscribe = 3;
      private org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe unsubscribe_ = org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe.getDefaultInstance();
      public boolean hasUnsubscribe() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe getUnsubscribe() {
        return unsubscribe_;
      }
      public Builder setUnsubscribe(org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe value) {
        if (value == null) {
          throw new NullPointerException();
        }
        unsubscribe_ = value;
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setUnsubscribe(
          org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe.Builder builderForValue) {
        unsubscribe_ = builderForValue.build();
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeUnsubscribe(org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            unsubscribe_ != org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe.getDefaultInstance()) {
          unsubscribe_ =
            org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe.newBuilder(unsubscribe_).mergeFrom(value).buildPartial();
        } else {
          unsubscribe_ = value;
        }
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearUnsubscribe() {
        unsubscribe_ = org.mitre.svmp.protocol.SVMPProtocol.LocationUnsubscribe.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.LocationResponse)
    }
    
    static {
      defaultInstance = new LocationResponse(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.LocationResponse)
  }
  
  public interface AuthResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .svmp.AuthResponse.AuthResponseType type = 1;
    boolean hasType();
    org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.AuthResponseType getType();
  }
  public static final class AuthResponse extends
      com.google.protobuf.GeneratedMessageLite
      implements AuthResponseOrBuilder {
    // Use AuthResponse.newBuilder() to construct.
    private AuthResponse(Builder builder) {
      super(builder);
    }
    private AuthResponse(boolean noInit) {}
    
    private static final AuthResponse defaultInstance;
    public static AuthResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public AuthResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum AuthResponseType
        implements com.google.protobuf.Internal.EnumLite {
      AUTH_FAIL(0, 0),
      SESSION_MAX_TIMEOUT(1, 1),
      ;
      
      public static final int AUTH_FAIL_VALUE = 0;
      public static final int SESSION_MAX_TIMEOUT_VALUE = 1;
      
      
      public final int getNumber() { return value; }
      
      public static AuthResponseType valueOf(int value) {
        switch (value) {
          case 0: return AUTH_FAIL;
          case 1: return SESSION_MAX_TIMEOUT;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<AuthResponseType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<AuthResponseType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AuthResponseType>() {
              public AuthResponseType findValueByNumber(int number) {
                return AuthResponseType.valueOf(number);
              }
            };
      
      private final int value;
      
      private AuthResponseType(int index, int value) {
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:svmp.AuthResponse.AuthResponseType)
    }
    
    private int bitField0_;
    // required .svmp.AuthResponse.AuthResponseType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.AuthResponseType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.AuthResponseType getType() {
      return type_;
    }
    
    private void initFields() {
      type_ = org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.AuthResponseType.AUTH_FAIL;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.AuthResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AuthResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AuthResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AuthResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AuthResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AuthResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AuthResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AuthResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AuthResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AuthResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.AuthResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.AuthResponse, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.AuthResponseOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.AuthResponseType.AUTH_FAIL;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.AuthResponse getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.AuthResponse build() {
        org.mitre.svmp.protocol.SVMPProtocol.AuthResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.AuthResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.AuthResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.AuthResponse buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.AuthResponse result = new org.mitre.svmp.protocol.SVMPProtocol.AuthResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.AuthResponse other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.AuthResponseType value = org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.AuthResponseType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .svmp.AuthResponse.AuthResponseType type = 1;
      private org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.AuthResponseType type_ = org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.AuthResponseType.AUTH_FAIL;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.AuthResponseType getType() {
        return type_;
      }
      public Builder setType(org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.AuthResponseType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.mitre.svmp.protocol.SVMPProtocol.AuthResponse.AuthResponseType.AUTH_FAIL;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.AuthResponse)
    }
    
    static {
      defaultInstance = new AuthResponse(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.AuthResponse)
  }
  
  public interface WebRTCMessageOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional .svmp.WebRTCMessage.WebRTCType type = 1;
    boolean hasType();
    org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.WebRTCType getType();
    
    // optional string json = 2;
    boolean hasJson();
    String getJson();
  }
  public static final class WebRTCMessage extends
      com.google.protobuf.GeneratedMessageLite
      implements WebRTCMessageOrBuilder {
    // Use WebRTCMessage.newBuilder() to construct.
    private WebRTCMessage(Builder builder) {
      super(builder);
    }
    private WebRTCMessage(boolean noInit) {}
    
    private static final WebRTCMessage defaultInstance;
    public static WebRTCMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public WebRTCMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum WebRTCType
        implements com.google.protobuf.Internal.EnumLite {
      OFFER(0, 1),
      ANSWER(1, 2),
      CANDIDATE(2, 3),
      BYE(3, 4),
      ;
      
      public static final int OFFER_VALUE = 1;
      public static final int ANSWER_VALUE = 2;
      public static final int CANDIDATE_VALUE = 3;
      public static final int BYE_VALUE = 4;
      
      
      public final int getNumber() { return value; }
      
      public static WebRTCType valueOf(int value) {
        switch (value) {
          case 1: return OFFER;
          case 2: return ANSWER;
          case 3: return CANDIDATE;
          case 4: return BYE;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<WebRTCType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<WebRTCType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<WebRTCType>() {
              public WebRTCType findValueByNumber(int number) {
                return WebRTCType.valueOf(number);
              }
            };
      
      private final int value;
      
      private WebRTCType(int index, int value) {
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:svmp.WebRTCMessage.WebRTCType)
    }
    
    private int bitField0_;
    // optional .svmp.WebRTCMessage.WebRTCType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.WebRTCType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.WebRTCType getType() {
      return type_;
    }
    
    // optional string json = 2;
    public static final int JSON_FIELD_NUMBER = 2;
    private java.lang.Object json_;
    public boolean hasJson() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getJson() {
      java.lang.Object ref = json_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          json_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getJsonBytes() {
      java.lang.Object ref = json_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        json_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      type_ = org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.WebRTCType.OFFER;
      json_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getJsonBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getJsonBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessageOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.WebRTCType.OFFER;
        bitField0_ = (bitField0_ & ~0x00000001);
        json_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage build() {
        org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage result = new org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.json_ = json_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasJson()) {
          setJson(other.getJson());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.WebRTCType value = org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.WebRTCType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              json_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .svmp.WebRTCMessage.WebRTCType type = 1;
      private org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.WebRTCType type_ = org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.WebRTCType.OFFER;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.WebRTCType getType() {
        return type_;
      }
      public Builder setType(org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.WebRTCType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.mitre.svmp.protocol.SVMPProtocol.WebRTCMessage.WebRTCType.OFFER;
        
        return this;
      }
      
      // optional string json = 2;
      private java.lang.Object json_ = "";
      public boolean hasJson() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getJson() {
        java.lang.Object ref = json_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          json_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setJson(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        json_ = value;
        
        return this;
      }
      public Builder clearJson() {
        bitField0_ = (bitField0_ & ~0x00000002);
        json_ = getDefaultInstance().getJson();
        
        return this;
      }
      void setJson(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        json_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.WebRTCMessage)
    }
    
    static {
      defaultInstance = new WebRTCMessage(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.WebRTCMessage)
  }
  
  public interface VideoStreamInfoOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional string iceServers = 1;
    boolean hasIceServers();
    String getIceServers();
    
    // optional string pcConstraints = 2;
    boolean hasPcConstraints();
    String getPcConstraints();
    
    // optional string videoConstraints = 3;
    boolean hasVideoConstraints();
    String getVideoConstraints();
  }
  public static final class VideoStreamInfo extends
      com.google.protobuf.GeneratedMessageLite
      implements VideoStreamInfoOrBuilder {
    // Use VideoStreamInfo.newBuilder() to construct.
    private VideoStreamInfo(Builder builder) {
      super(builder);
    }
    private VideoStreamInfo(boolean noInit) {}
    
    private static final VideoStreamInfo defaultInstance;
    public static VideoStreamInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public VideoStreamInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional string iceServers = 1;
    public static final int ICESERVERS_FIELD_NUMBER = 1;
    private java.lang.Object iceServers_;
    public boolean hasIceServers() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getIceServers() {
      java.lang.Object ref = iceServers_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          iceServers_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIceServersBytes() {
      java.lang.Object ref = iceServers_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        iceServers_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string pcConstraints = 2;
    public static final int PCCONSTRAINTS_FIELD_NUMBER = 2;
    private java.lang.Object pcConstraints_;
    public boolean hasPcConstraints() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getPcConstraints() {
      java.lang.Object ref = pcConstraints_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          pcConstraints_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPcConstraintsBytes() {
      java.lang.Object ref = pcConstraints_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        pcConstraints_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string videoConstraints = 3;
    public static final int VIDEOCONSTRAINTS_FIELD_NUMBER = 3;
    private java.lang.Object videoConstraints_;
    public boolean hasVideoConstraints() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getVideoConstraints() {
      java.lang.Object ref = videoConstraints_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          videoConstraints_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getVideoConstraintsBytes() {
      java.lang.Object ref = videoConstraints_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        videoConstraints_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      iceServers_ = "";
      pcConstraints_ = "";
      videoConstraints_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIceServersBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPcConstraintsBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getVideoConstraintsBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIceServersBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPcConstraintsBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getVideoConstraintsBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfoOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        iceServers_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        pcConstraints_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        videoConstraints_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo build() {
        org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo result = new org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.iceServers_ = iceServers_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pcConstraints_ = pcConstraints_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.videoConstraints_ = videoConstraints_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.VideoStreamInfo.getDefaultInstance()) return this;
        if (other.hasIceServers()) {
          setIceServers(other.getIceServers());
        }
        if (other.hasPcConstraints()) {
          setPcConstraints(other.getPcConstraints());
        }
        if (other.hasVideoConstraints()) {
          setVideoConstraints(other.getVideoConstraints());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              iceServers_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              pcConstraints_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              videoConstraints_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string iceServers = 1;
      private java.lang.Object iceServers_ = "";
      public boolean hasIceServers() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getIceServers() {
        java.lang.Object ref = iceServers_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          iceServers_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setIceServers(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        iceServers_ = value;
        
        return this;
      }
      public Builder clearIceServers() {
        bitField0_ = (bitField0_ & ~0x00000001);
        iceServers_ = getDefaultInstance().getIceServers();
        
        return this;
      }
      void setIceServers(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        iceServers_ = value;
        
      }
      
      // optional string pcConstraints = 2;
      private java.lang.Object pcConstraints_ = "";
      public boolean hasPcConstraints() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getPcConstraints() {
        java.lang.Object ref = pcConstraints_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          pcConstraints_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPcConstraints(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        pcConstraints_ = value;
        
        return this;
      }
      public Builder clearPcConstraints() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pcConstraints_ = getDefaultInstance().getPcConstraints();
        
        return this;
      }
      void setPcConstraints(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        pcConstraints_ = value;
        
      }
      
      // optional string videoConstraints = 3;
      private java.lang.Object videoConstraints_ = "";
      public boolean hasVideoConstraints() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getVideoConstraints() {
        java.lang.Object ref = videoConstraints_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          videoConstraints_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setVideoConstraints(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        videoConstraints_ = value;
        
        return this;
      }
      public Builder clearVideoConstraints() {
        bitField0_ = (bitField0_ & ~0x00000004);
        videoConstraints_ = getDefaultInstance().getVideoConstraints();
        
        return this;
      }
      void setVideoConstraints(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        videoConstraints_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.VideoStreamInfo)
    }
    
    static {
      defaultInstance = new VideoStreamInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.VideoStreamInfo)
  }
  
  public interface RotationInfoOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required int32 rotation = 1;
    boolean hasRotation();
    int getRotation();
  }
  public static final class RotationInfo extends
      com.google.protobuf.GeneratedMessageLite
      implements RotationInfoOrBuilder {
    // Use RotationInfo.newBuilder() to construct.
    private RotationInfo(Builder builder) {
      super(builder);
    }
    private RotationInfo(boolean noInit) {}
    
    private static final RotationInfo defaultInstance;
    public static RotationInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public RotationInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required int32 rotation = 1;
    public static final int ROTATION_FIELD_NUMBER = 1;
    private int rotation_;
    public boolean hasRotation() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getRotation() {
      return rotation_;
    }
    
    private void initFields() {
      rotation_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasRotation()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, rotation_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, rotation_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.RotationInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RotationInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RotationInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RotationInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RotationInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RotationInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RotationInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RotationInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RotationInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.RotationInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.RotationInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.RotationInfo, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.RotationInfoOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.RotationInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        rotation_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.RotationInfo getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.RotationInfo.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.RotationInfo build() {
        org.mitre.svmp.protocol.SVMPProtocol.RotationInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.RotationInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.RotationInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.RotationInfo buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.RotationInfo result = new org.mitre.svmp.protocol.SVMPProtocol.RotationInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rotation_ = rotation_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.RotationInfo other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.RotationInfo.getDefaultInstance()) return this;
        if (other.hasRotation()) {
          setRotation(other.getRotation());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasRotation()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rotation_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int32 rotation = 1;
      private int rotation_ ;
      public boolean hasRotation() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getRotation() {
        return rotation_;
      }
      public Builder setRotation(int value) {
        bitField0_ |= 0x00000001;
        rotation_ = value;
        
        return this;
      }
      public Builder clearRotation() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rotation_ = 0;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.RotationInfo)
    }
    
    static {
      defaultInstance = new RotationInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.RotationInfo)
  }
  
  public interface PingOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required int64 startDate = 1;
    boolean hasStartDate();
    long getStartDate();
  }
  public static final class Ping extends
      com.google.protobuf.GeneratedMessageLite
      implements PingOrBuilder {
    // Use Ping.newBuilder() to construct.
    private Ping(Builder builder) {
      super(builder);
    }
    private Ping(boolean noInit) {}
    
    private static final Ping defaultInstance;
    public static Ping getDefaultInstance() {
      return defaultInstance;
    }
    
    public Ping getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required int64 startDate = 1;
    public static final int STARTDATE_FIELD_NUMBER = 1;
    private long startDate_;
    public boolean hasStartDate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getStartDate() {
      return startDate_;
    }
    
    private void initFields() {
      startDate_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasStartDate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, startDate_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, startDate_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.Ping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Ping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Ping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Ping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Ping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Ping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Ping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Ping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Ping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Ping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.Ping prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.Ping, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.PingOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.Ping.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        startDate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Ping getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.Ping.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Ping build() {
        org.mitre.svmp.protocol.SVMPProtocol.Ping result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.Ping buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.Ping result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Ping buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.Ping result = new org.mitre.svmp.protocol.SVMPProtocol.Ping(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startDate_ = startDate_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.Ping other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.Ping.getDefaultInstance()) return this;
        if (other.hasStartDate()) {
          setStartDate(other.getStartDate());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasStartDate()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              startDate_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int64 startDate = 1;
      private long startDate_ ;
      public boolean hasStartDate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getStartDate() {
        return startDate_;
      }
      public Builder setStartDate(long value) {
        bitField0_ |= 0x00000001;
        startDate_ = value;
        
        return this;
      }
      public Builder clearStartDate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startDate_ = 0L;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.Ping)
    }
    
    static {
      defaultInstance = new Ping(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.Ping)
  }
  
  public interface AppsRequestOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .svmp.AppsRequest.AppsRequestType type = 1;
    boolean hasType();
    org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.AppsRequestType getType();
    
    // repeated .svmp.AppInfo current = 2;
    java.util.List<org.mitre.svmp.protocol.SVMPProtocol.AppInfo> 
        getCurrentList();
    org.mitre.svmp.protocol.SVMPProtocol.AppInfo getCurrent(int index);
    int getCurrentCount();
    
    // optional int32 screenDensity = 3;
    boolean hasScreenDensity();
    int getScreenDensity();
    
    // optional string pkgName = 4;
    boolean hasPkgName();
    String getPkgName();
    
    // optional string apkPath = 5;
    boolean hasApkPath();
    String getApkPath();
  }
  public static final class AppsRequest extends
      com.google.protobuf.GeneratedMessageLite
      implements AppsRequestOrBuilder {
    // Use AppsRequest.newBuilder() to construct.
    private AppsRequest(Builder builder) {
      super(builder);
    }
    private AppsRequest(boolean noInit) {}
    
    private static final AppsRequest defaultInstance;
    public static AppsRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public AppsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum AppsRequestType
        implements com.google.protobuf.Internal.EnumLite {
      REFRESH(0, 1),
      LAUNCH(1, 2),
      ;
      
      public static final int REFRESH_VALUE = 1;
      public static final int LAUNCH_VALUE = 2;
      
      
      public final int getNumber() { return value; }
      
      public static AppsRequestType valueOf(int value) {
        switch (value) {
          case 1: return REFRESH;
          case 2: return LAUNCH;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<AppsRequestType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<AppsRequestType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AppsRequestType>() {
              public AppsRequestType findValueByNumber(int number) {
                return AppsRequestType.valueOf(number);
              }
            };
      
      private final int value;
      
      private AppsRequestType(int index, int value) {
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:svmp.AppsRequest.AppsRequestType)
    }
    
    private int bitField0_;
    // required .svmp.AppsRequest.AppsRequestType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.AppsRequestType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.AppsRequestType getType() {
      return type_;
    }
    
    // repeated .svmp.AppInfo current = 2;
    public static final int CURRENT_FIELD_NUMBER = 2;
    private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.AppInfo> current_;
    public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.AppInfo> getCurrentList() {
      return current_;
    }
    public java.util.List<? extends org.mitre.svmp.protocol.SVMPProtocol.AppInfoOrBuilder> 
        getCurrentOrBuilderList() {
      return current_;
    }
    public int getCurrentCount() {
      return current_.size();
    }
    public org.mitre.svmp.protocol.SVMPProtocol.AppInfo getCurrent(int index) {
      return current_.get(index);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.AppInfoOrBuilder getCurrentOrBuilder(
        int index) {
      return current_.get(index);
    }
    
    // optional int32 screenDensity = 3;
    public static final int SCREENDENSITY_FIELD_NUMBER = 3;
    private int screenDensity_;
    public boolean hasScreenDensity() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getScreenDensity() {
      return screenDensity_;
    }
    
    // optional string pkgName = 4;
    public static final int PKGNAME_FIELD_NUMBER = 4;
    private java.lang.Object pkgName_;
    public boolean hasPkgName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getPkgName() {
      java.lang.Object ref = pkgName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          pkgName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPkgNameBytes() {
      java.lang.Object ref = pkgName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        pkgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string apkPath = 5;
    public static final int APKPATH_FIELD_NUMBER = 5;
    private java.lang.Object apkPath_;
    public boolean hasApkPath() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getApkPath() {
      java.lang.Object ref = apkPath_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          apkPath_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getApkPathBytes() {
      java.lang.Object ref = apkPath_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        apkPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      type_ = org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.AppsRequestType.REFRESH;
      current_ = java.util.Collections.emptyList();
      screenDensity_ = 0;
      pkgName_ = "";
      apkPath_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCurrentCount(); i++) {
        if (!getCurrent(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      for (int i = 0; i < current_.size(); i++) {
        output.writeMessage(2, current_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, screenDensity_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(4, getPkgNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, getApkPathBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      for (int i = 0; i < current_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, current_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, screenDensity_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getPkgNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getApkPathBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.AppsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.AppsRequest, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.AppsRequestOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.AppsRequestType.REFRESH;
        bitField0_ = (bitField0_ & ~0x00000001);
        current_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        screenDensity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        pkgName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        apkPath_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.AppsRequest getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.AppsRequest build() {
        org.mitre.svmp.protocol.SVMPProtocol.AppsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.AppsRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.AppsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.AppsRequest buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.AppsRequest result = new org.mitre.svmp.protocol.SVMPProtocol.AppsRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          current_ = java.util.Collections.unmodifiableList(current_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.current_ = current_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.screenDensity_ = screenDensity_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pkgName_ = pkgName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.apkPath_ = apkPath_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.AppsRequest other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (!other.current_.isEmpty()) {
          if (current_.isEmpty()) {
            current_ = other.current_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCurrentIsMutable();
            current_.addAll(other.current_);
          }
          
        }
        if (other.hasScreenDensity()) {
          setScreenDensity(other.getScreenDensity());
        }
        if (other.hasPkgName()) {
          setPkgName(other.getPkgName());
        }
        if (other.hasApkPath()) {
          setApkPath(other.getApkPath());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        for (int i = 0; i < getCurrentCount(); i++) {
          if (!getCurrent(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.AppsRequestType value = org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.AppsRequestType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              org.mitre.svmp.protocol.SVMPProtocol.AppInfo.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.AppInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCurrent(subBuilder.buildPartial());
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              screenDensity_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              pkgName_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              apkPath_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .svmp.AppsRequest.AppsRequestType type = 1;
      private org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.AppsRequestType type_ = org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.AppsRequestType.REFRESH;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.AppsRequestType getType() {
        return type_;
      }
      public Builder setType(org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.AppsRequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.mitre.svmp.protocol.SVMPProtocol.AppsRequest.AppsRequestType.REFRESH;
        
        return this;
      }
      
      // repeated .svmp.AppInfo current = 2;
      private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.AppInfo> current_ =
        java.util.Collections.emptyList();
      private void ensureCurrentIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          current_ = new java.util.ArrayList<org.mitre.svmp.protocol.SVMPProtocol.AppInfo>(current_);
          bitField0_ |= 0x00000002;
         }
      }
      
      public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.AppInfo> getCurrentList() {
        return java.util.Collections.unmodifiableList(current_);
      }
      public int getCurrentCount() {
        return current_.size();
      }
      public org.mitre.svmp.protocol.SVMPProtocol.AppInfo getCurrent(int index) {
        return current_.get(index);
      }
      public Builder setCurrent(
          int index, org.mitre.svmp.protocol.SVMPProtocol.AppInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCurrentIsMutable();
        current_.set(index, value);
        
        return this;
      }
      public Builder setCurrent(
          int index, org.mitre.svmp.protocol.SVMPProtocol.AppInfo.Builder builderForValue) {
        ensureCurrentIsMutable();
        current_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addCurrent(org.mitre.svmp.protocol.SVMPProtocol.AppInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCurrentIsMutable();
        current_.add(value);
        
        return this;
      }
      public Builder addCurrent(
          int index, org.mitre.svmp.protocol.SVMPProtocol.AppInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCurrentIsMutable();
        current_.add(index, value);
        
        return this;
      }
      public Builder addCurrent(
          org.mitre.svmp.protocol.SVMPProtocol.AppInfo.Builder builderForValue) {
        ensureCurrentIsMutable();
        current_.add(builderForValue.build());
        
        return this;
      }
      public Builder addCurrent(
          int index, org.mitre.svmp.protocol.SVMPProtocol.AppInfo.Builder builderForValue) {
        ensureCurrentIsMutable();
        current_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllCurrent(
          java.lang.Iterable<? extends org.mitre.svmp.protocol.SVMPProtocol.AppInfo> values) {
        ensureCurrentIsMutable();
        super.addAll(values, current_);
        
        return this;
      }
      public Builder clearCurrent() {
        current_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }
      public Builder removeCurrent(int index) {
        ensureCurrentIsMutable();
        current_.remove(index);
        
        return this;
      }
      
      // optional int32 screenDensity = 3;
      private int screenDensity_ ;
      public boolean hasScreenDensity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getScreenDensity() {
        return screenDensity_;
      }
      public Builder setScreenDensity(int value) {
        bitField0_ |= 0x00000004;
        screenDensity_ = value;
        
        return this;
      }
      public Builder clearScreenDensity() {
        bitField0_ = (bitField0_ & ~0x00000004);
        screenDensity_ = 0;
        
        return this;
      }
      
      // optional string pkgName = 4;
      private java.lang.Object pkgName_ = "";
      public boolean hasPkgName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getPkgName() {
        java.lang.Object ref = pkgName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          pkgName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPkgName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        pkgName_ = value;
        
        return this;
      }
      public Builder clearPkgName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        pkgName_ = getDefaultInstance().getPkgName();
        
        return this;
      }
      void setPkgName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        pkgName_ = value;
        
      }
      
      // optional string apkPath = 5;
      private java.lang.Object apkPath_ = "";
      public boolean hasApkPath() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getApkPath() {
        java.lang.Object ref = apkPath_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          apkPath_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setApkPath(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        apkPath_ = value;
        
        return this;
      }
      public Builder clearApkPath() {
        bitField0_ = (bitField0_ & ~0x00000010);
        apkPath_ = getDefaultInstance().getApkPath();
        
        return this;
      }
      void setApkPath(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        apkPath_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.AppsRequest)
    }
    
    static {
      defaultInstance = new AppsRequest(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.AppsRequest)
  }
  
  public interface AppsResponseOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required .svmp.AppsResponse.AppsResponseType type = 1;
    boolean hasType();
    org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.AppsResponseType getType();
    
    // repeated .svmp.AppInfo new = 2;
    java.util.List<org.mitre.svmp.protocol.SVMPProtocol.AppInfo> 
        getNewList();
    org.mitre.svmp.protocol.SVMPProtocol.AppInfo getNew(int index);
    int getNewCount();
    
    // repeated .svmp.AppInfo updated = 3;
    java.util.List<org.mitre.svmp.protocol.SVMPProtocol.AppInfo> 
        getUpdatedList();
    org.mitre.svmp.protocol.SVMPProtocol.AppInfo getUpdated(int index);
    int getUpdatedCount();
    
    // repeated string removed = 4;
    java.util.List<String> getRemovedList();
    int getRemovedCount();
    String getRemoved(int index);
  }
  public static final class AppsResponse extends
      com.google.protobuf.GeneratedMessageLite
      implements AppsResponseOrBuilder {
    // Use AppsResponse.newBuilder() to construct.
    private AppsResponse(Builder builder) {
      super(builder);
    }
    private AppsResponse(boolean noInit) {}
    
    private static final AppsResponse defaultInstance;
    public static AppsResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public AppsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum AppsResponseType
        implements com.google.protobuf.Internal.EnumLite {
      REFRESH(0, 1),
      EXIT(1, 2),
      LAUNCH(2, 3),
      ;
      
      public static final int REFRESH_VALUE = 1;
      public static final int EXIT_VALUE = 2;
      public static final int LAUNCH_VALUE = 3;
      
      
      public final int getNumber() { return value; }
      
      public static AppsResponseType valueOf(int value) {
        switch (value) {
          case 1: return REFRESH;
          case 2: return EXIT;
          case 3: return LAUNCH;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<AppsResponseType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<AppsResponseType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AppsResponseType>() {
              public AppsResponseType findValueByNumber(int number) {
                return AppsResponseType.valueOf(number);
              }
            };
      
      private final int value;
      
      private AppsResponseType(int index, int value) {
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:svmp.AppsResponse.AppsResponseType)
    }
    
    private int bitField0_;
    // required .svmp.AppsResponse.AppsResponseType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.AppsResponseType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.AppsResponseType getType() {
      return type_;
    }
    
    // repeated .svmp.AppInfo new = 2;
    public static final int NEW_FIELD_NUMBER = 2;
    private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.AppInfo> new_;
    public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.AppInfo> getNewList() {
      return new_;
    }
    public java.util.List<? extends org.mitre.svmp.protocol.SVMPProtocol.AppInfoOrBuilder> 
        getNewOrBuilderList() {
      return new_;
    }
    public int getNewCount() {
      return new_.size();
    }
    public org.mitre.svmp.protocol.SVMPProtocol.AppInfo getNew(int index) {
      return new_.get(index);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.AppInfoOrBuilder getNewOrBuilder(
        int index) {
      return new_.get(index);
    }
    
    // repeated .svmp.AppInfo updated = 3;
    public static final int UPDATED_FIELD_NUMBER = 3;
    private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.AppInfo> updated_;
    public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.AppInfo> getUpdatedList() {
      return updated_;
    }
    public java.util.List<? extends org.mitre.svmp.protocol.SVMPProtocol.AppInfoOrBuilder> 
        getUpdatedOrBuilderList() {
      return updated_;
    }
    public int getUpdatedCount() {
      return updated_.size();
    }
    public org.mitre.svmp.protocol.SVMPProtocol.AppInfo getUpdated(int index) {
      return updated_.get(index);
    }
    public org.mitre.svmp.protocol.SVMPProtocol.AppInfoOrBuilder getUpdatedOrBuilder(
        int index) {
      return updated_.get(index);
    }
    
    // repeated string removed = 4;
    public static final int REMOVED_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList removed_;
    public java.util.List<String>
        getRemovedList() {
      return removed_;
    }
    public int getRemovedCount() {
      return removed_.size();
    }
    public String getRemoved(int index) {
      return removed_.get(index);
    }
    
    private void initFields() {
      type_ = org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.AppsResponseType.REFRESH;
      new_ = java.util.Collections.emptyList();
      updated_ = java.util.Collections.emptyList();
      removed_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getNewCount(); i++) {
        if (!getNew(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getUpdatedCount(); i++) {
        if (!getUpdated(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      for (int i = 0; i < new_.size(); i++) {
        output.writeMessage(2, new_.get(i));
      }
      for (int i = 0; i < updated_.size(); i++) {
        output.writeMessage(3, updated_.get(i));
      }
      for (int i = 0; i < removed_.size(); i++) {
        output.writeBytes(4, removed_.getByteString(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      for (int i = 0; i < new_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, new_.get(i));
      }
      for (int i = 0; i < updated_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, updated_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < removed_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(removed_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getRemovedList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.AppsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.AppsResponse, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.AppsResponseOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.AppsResponseType.REFRESH;
        bitField0_ = (bitField0_ & ~0x00000001);
        new_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        updated_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        removed_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.AppsResponse getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.AppsResponse build() {
        org.mitre.svmp.protocol.SVMPProtocol.AppsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.AppsResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.AppsResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.AppsResponse buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.AppsResponse result = new org.mitre.svmp.protocol.SVMPProtocol.AppsResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          new_ = java.util.Collections.unmodifiableList(new_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.new_ = new_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          updated_ = java.util.Collections.unmodifiableList(updated_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.updated_ = updated_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          removed_ = new com.google.protobuf.UnmodifiableLazyStringList(
              removed_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.removed_ = removed_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.AppsResponse other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (!other.new_.isEmpty()) {
          if (new_.isEmpty()) {
            new_ = other.new_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureNewIsMutable();
            new_.addAll(other.new_);
          }
          
        }
        if (!other.updated_.isEmpty()) {
          if (updated_.isEmpty()) {
            updated_ = other.updated_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureUpdatedIsMutable();
            updated_.addAll(other.updated_);
          }
          
        }
        if (!other.removed_.isEmpty()) {
          if (removed_.isEmpty()) {
            removed_ = other.removed_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureRemovedIsMutable();
            removed_.addAll(other.removed_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        for (int i = 0; i < getNewCount(); i++) {
          if (!getNew(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getUpdatedCount(); i++) {
          if (!getUpdated(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.AppsResponseType value = org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.AppsResponseType.valueOf(rawValue);
              if (value != null) {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              org.mitre.svmp.protocol.SVMPProtocol.AppInfo.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.AppInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addNew(subBuilder.buildPartial());
              break;
            }
            case 26: {
              org.mitre.svmp.protocol.SVMPProtocol.AppInfo.Builder subBuilder = org.mitre.svmp.protocol.SVMPProtocol.AppInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addUpdated(subBuilder.buildPartial());
              break;
            }
            case 34: {
              ensureRemovedIsMutable();
              removed_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required .svmp.AppsResponse.AppsResponseType type = 1;
      private org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.AppsResponseType type_ = org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.AppsResponseType.REFRESH;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.AppsResponseType getType() {
        return type_;
      }
      public Builder setType(org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.AppsResponseType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = org.mitre.svmp.protocol.SVMPProtocol.AppsResponse.AppsResponseType.REFRESH;
        
        return this;
      }
      
      // repeated .svmp.AppInfo new = 2;
      private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.AppInfo> new_ =
        java.util.Collections.emptyList();
      private void ensureNewIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          new_ = new java.util.ArrayList<org.mitre.svmp.protocol.SVMPProtocol.AppInfo>(new_);
          bitField0_ |= 0x00000002;
         }
      }
      
      public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.AppInfo> getNewList() {
        return java.util.Collections.unmodifiableList(new_);
      }
      public int getNewCount() {
        return new_.size();
      }
      public org.mitre.svmp.protocol.SVMPProtocol.AppInfo getNew(int index) {
        return new_.get(index);
      }
      public Builder setNew(
          int index, org.mitre.svmp.protocol.SVMPProtocol.AppInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNewIsMutable();
        new_.set(index, value);
        
        return this;
      }
      public Builder setNew(
          int index, org.mitre.svmp.protocol.SVMPProtocol.AppInfo.Builder builderForValue) {
        ensureNewIsMutable();
        new_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addNew(org.mitre.svmp.protocol.SVMPProtocol.AppInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNewIsMutable();
        new_.add(value);
        
        return this;
      }
      public Builder addNew(
          int index, org.mitre.svmp.protocol.SVMPProtocol.AppInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNewIsMutable();
        new_.add(index, value);
        
        return this;
      }
      public Builder addNew(
          org.mitre.svmp.protocol.SVMPProtocol.AppInfo.Builder builderForValue) {
        ensureNewIsMutable();
        new_.add(builderForValue.build());
        
        return this;
      }
      public Builder addNew(
          int index, org.mitre.svmp.protocol.SVMPProtocol.AppInfo.Builder builderForValue) {
        ensureNewIsMutable();
        new_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllNew(
          java.lang.Iterable<? extends org.mitre.svmp.protocol.SVMPProtocol.AppInfo> values) {
        ensureNewIsMutable();
        super.addAll(values, new_);
        
        return this;
      }
      public Builder clearNew() {
        new_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }
      public Builder removeNew(int index) {
        ensureNewIsMutable();
        new_.remove(index);
        
        return this;
      }
      
      // repeated .svmp.AppInfo updated = 3;
      private java.util.List<org.mitre.svmp.protocol.SVMPProtocol.AppInfo> updated_ =
        java.util.Collections.emptyList();
      private void ensureUpdatedIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          updated_ = new java.util.ArrayList<org.mitre.svmp.protocol.SVMPProtocol.AppInfo>(updated_);
          bitField0_ |= 0x00000004;
         }
      }
      
      public java.util.List<org.mitre.svmp.protocol.SVMPProtocol.AppInfo> getUpdatedList() {
        return java.util.Collections.unmodifiableList(updated_);
      }
      public int getUpdatedCount() {
        return updated_.size();
      }
      public org.mitre.svmp.protocol.SVMPProtocol.AppInfo getUpdated(int index) {
        return updated_.get(index);
      }
      public Builder setUpdated(
          int index, org.mitre.svmp.protocol.SVMPProtocol.AppInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUpdatedIsMutable();
        updated_.set(index, value);
        
        return this;
      }
      public Builder setUpdated(
          int index, org.mitre.svmp.protocol.SVMPProtocol.AppInfo.Builder builderForValue) {
        ensureUpdatedIsMutable();
        updated_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addUpdated(org.mitre.svmp.protocol.SVMPProtocol.AppInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUpdatedIsMutable();
        updated_.add(value);
        
        return this;
      }
      public Builder addUpdated(
          int index, org.mitre.svmp.protocol.SVMPProtocol.AppInfo value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUpdatedIsMutable();
        updated_.add(index, value);
        
        return this;
      }
      public Builder addUpdated(
          org.mitre.svmp.protocol.SVMPProtocol.AppInfo.Builder builderForValue) {
        ensureUpdatedIsMutable();
        updated_.add(builderForValue.build());
        
        return this;
      }
      public Builder addUpdated(
          int index, org.mitre.svmp.protocol.SVMPProtocol.AppInfo.Builder builderForValue) {
        ensureUpdatedIsMutable();
        updated_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllUpdated(
          java.lang.Iterable<? extends org.mitre.svmp.protocol.SVMPProtocol.AppInfo> values) {
        ensureUpdatedIsMutable();
        super.addAll(values, updated_);
        
        return this;
      }
      public Builder clearUpdated() {
        updated_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        
        return this;
      }
      public Builder removeUpdated(int index) {
        ensureUpdatedIsMutable();
        updated_.remove(index);
        
        return this;
      }
      
      // repeated string removed = 4;
      private com.google.protobuf.LazyStringList removed_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRemovedIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          removed_ = new com.google.protobuf.LazyStringArrayList(removed_);
          bitField0_ |= 0x00000008;
         }
      }
      public java.util.List<String>
          getRemovedList() {
        return java.util.Collections.unmodifiableList(removed_);
      }
      public int getRemovedCount() {
        return removed_.size();
      }
      public String getRemoved(int index) {
        return removed_.get(index);
      }
      public Builder setRemoved(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemovedIsMutable();
        removed_.set(index, value);
        
        return this;
      }
      public Builder addRemoved(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRemovedIsMutable();
        removed_.add(value);
        
        return this;
      }
      public Builder addAllRemoved(
          java.lang.Iterable<String> values) {
        ensureRemovedIsMutable();
        super.addAll(values, removed_);
        
        return this;
      }
      public Builder clearRemoved() {
        removed_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        
        return this;
      }
      void addRemoved(com.google.protobuf.ByteString value) {
        ensureRemovedIsMutable();
        removed_.add(value);
        
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.AppsResponse)
    }
    
    static {
      defaultInstance = new AppsResponse(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.AppsResponse)
  }
  
  public interface AppInfoOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required string pkgName = 1;
    boolean hasPkgName();
    String getPkgName();
    
    // required string appName = 2;
    boolean hasAppName();
    String getAppName();
    
    // optional bytes icon = 3;
    boolean hasIcon();
    com.google.protobuf.ByteString getIcon();
    
    // optional bytes iconHash = 4;
    boolean hasIconHash();
    com.google.protobuf.ByteString getIconHash();
  }
  public static final class AppInfo extends
      com.google.protobuf.GeneratedMessageLite
      implements AppInfoOrBuilder {
    // Use AppInfo.newBuilder() to construct.
    private AppInfo(Builder builder) {
      super(builder);
    }
    private AppInfo(boolean noInit) {}
    
    private static final AppInfo defaultInstance;
    public static AppInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public AppInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required string pkgName = 1;
    public static final int PKGNAME_FIELD_NUMBER = 1;
    private java.lang.Object pkgName_;
    public boolean hasPkgName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getPkgName() {
      java.lang.Object ref = pkgName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          pkgName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPkgNameBytes() {
      java.lang.Object ref = pkgName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        pkgName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required string appName = 2;
    public static final int APPNAME_FIELD_NUMBER = 2;
    private java.lang.Object appName_;
    public boolean hasAppName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getAppName() {
      java.lang.Object ref = appName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          appName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAppNameBytes() {
      java.lang.Object ref = appName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        appName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bytes icon = 3;
    public static final int ICON_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString icon_;
    public boolean hasIcon() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public com.google.protobuf.ByteString getIcon() {
      return icon_;
    }
    
    // optional bytes iconHash = 4;
    public static final int ICONHASH_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString iconHash_;
    public boolean hasIconHash() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public com.google.protobuf.ByteString getIconHash() {
      return iconHash_;
    }
    
    private void initFields() {
      pkgName_ = "";
      appName_ = "";
      icon_ = com.google.protobuf.ByteString.EMPTY;
      iconHash_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasPkgName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAppName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getPkgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAppNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, icon_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, iconHash_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getPkgNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAppNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, icon_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, iconHash_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.AppInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.AppInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.AppInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.AppInfo, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.AppInfoOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.AppInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        pkgName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        appName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        icon_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        iconHash_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.AppInfo getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.AppInfo.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.AppInfo build() {
        org.mitre.svmp.protocol.SVMPProtocol.AppInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.AppInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.AppInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.AppInfo buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.AppInfo result = new org.mitre.svmp.protocol.SVMPProtocol.AppInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pkgName_ = pkgName_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.appName_ = appName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.icon_ = icon_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.iconHash_ = iconHash_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.AppInfo other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.AppInfo.getDefaultInstance()) return this;
        if (other.hasPkgName()) {
          setPkgName(other.getPkgName());
        }
        if (other.hasAppName()) {
          setAppName(other.getAppName());
        }
        if (other.hasIcon()) {
          setIcon(other.getIcon());
        }
        if (other.hasIconHash()) {
          setIconHash(other.getIconHash());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasPkgName()) {
          
          return false;
        }
        if (!hasAppName()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              pkgName_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              appName_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              icon_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              iconHash_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string pkgName = 1;
      private java.lang.Object pkgName_ = "";
      public boolean hasPkgName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getPkgName() {
        java.lang.Object ref = pkgName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          pkgName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPkgName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        pkgName_ = value;
        
        return this;
      }
      public Builder clearPkgName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pkgName_ = getDefaultInstance().getPkgName();
        
        return this;
      }
      void setPkgName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        pkgName_ = value;
        
      }
      
      // required string appName = 2;
      private java.lang.Object appName_ = "";
      public boolean hasAppName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getAppName() {
        java.lang.Object ref = appName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          appName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAppName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        appName_ = value;
        
        return this;
      }
      public Builder clearAppName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        appName_ = getDefaultInstance().getAppName();
        
        return this;
      }
      void setAppName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        appName_ = value;
        
      }
      
      // optional bytes icon = 3;
      private com.google.protobuf.ByteString icon_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasIcon() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public com.google.protobuf.ByteString getIcon() {
        return icon_;
      }
      public Builder setIcon(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        icon_ = value;
        
        return this;
      }
      public Builder clearIcon() {
        bitField0_ = (bitField0_ & ~0x00000004);
        icon_ = getDefaultInstance().getIcon();
        
        return this;
      }
      
      // optional bytes iconHash = 4;
      private com.google.protobuf.ByteString iconHash_ = com.google.protobuf.ByteString.EMPTY;
      public boolean hasIconHash() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public com.google.protobuf.ByteString getIconHash() {
        return iconHash_;
      }
      public Builder setIconHash(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        iconHash_ = value;
        
        return this;
      }
      public Builder clearIconHash() {
        bitField0_ = (bitField0_ & ~0x00000008);
        iconHash_ = getDefaultInstance().getIconHash();
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.AppInfo)
    }
    
    static {
      defaultInstance = new AppInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.AppInfo)
  }
  
  public interface KeyEventOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // required int64 eventTime = 1;
    boolean hasEventTime();
    long getEventTime();
    
    // required int32 deviceId = 2;
    boolean hasDeviceId();
    int getDeviceId();
    
    // required int32 flags = 3;
    boolean hasFlags();
    int getFlags();
    
    // optional int64 downTime = 4;
    boolean hasDownTime();
    long getDownTime();
    
    // optional int32 action = 5;
    boolean hasAction();
    int getAction();
    
    // optional int32 code = 6;
    boolean hasCode();
    int getCode();
    
    // optional int32 repeat = 7;
    boolean hasRepeat();
    int getRepeat();
    
    // optional int32 metaState = 8;
    boolean hasMetaState();
    int getMetaState();
    
    // optional int32 scanCode = 9;
    boolean hasScanCode();
    int getScanCode();
    
    // optional int32 source = 10;
    boolean hasSource();
    int getSource();
    
    // optional string characters = 11;
    boolean hasCharacters();
    String getCharacters();
  }
  public static final class KeyEvent extends
      com.google.protobuf.GeneratedMessageLite
      implements KeyEventOrBuilder {
    // Use KeyEvent.newBuilder() to construct.
    private KeyEvent(Builder builder) {
      super(builder);
    }
    private KeyEvent(boolean noInit) {}
    
    private static final KeyEvent defaultInstance;
    public static KeyEvent getDefaultInstance() {
      return defaultInstance;
    }
    
    public KeyEvent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // required int64 eventTime = 1;
    public static final int EVENTTIME_FIELD_NUMBER = 1;
    private long eventTime_;
    public boolean hasEventTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getEventTime() {
      return eventTime_;
    }
    
    // required int32 deviceId = 2;
    public static final int DEVICEID_FIELD_NUMBER = 2;
    private int deviceId_;
    public boolean hasDeviceId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getDeviceId() {
      return deviceId_;
    }
    
    // required int32 flags = 3;
    public static final int FLAGS_FIELD_NUMBER = 3;
    private int flags_;
    public boolean hasFlags() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getFlags() {
      return flags_;
    }
    
    // optional int64 downTime = 4;
    public static final int DOWNTIME_FIELD_NUMBER = 4;
    private long downTime_;
    public boolean hasDownTime() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public long getDownTime() {
      return downTime_;
    }
    
    // optional int32 action = 5;
    public static final int ACTION_FIELD_NUMBER = 5;
    private int action_;
    public boolean hasAction() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getAction() {
      return action_;
    }
    
    // optional int32 code = 6;
    public static final int CODE_FIELD_NUMBER = 6;
    private int code_;
    public boolean hasCode() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getCode() {
      return code_;
    }
    
    // optional int32 repeat = 7;
    public static final int REPEAT_FIELD_NUMBER = 7;
    private int repeat_;
    public boolean hasRepeat() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getRepeat() {
      return repeat_;
    }
    
    // optional int32 metaState = 8;
    public static final int METASTATE_FIELD_NUMBER = 8;
    private int metaState_;
    public boolean hasMetaState() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getMetaState() {
      return metaState_;
    }
    
    // optional int32 scanCode = 9;
    public static final int SCANCODE_FIELD_NUMBER = 9;
    private int scanCode_;
    public boolean hasScanCode() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getScanCode() {
      return scanCode_;
    }
    
    // optional int32 source = 10;
    public static final int SOURCE_FIELD_NUMBER = 10;
    private int source_;
    public boolean hasSource() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getSource() {
      return source_;
    }
    
    // optional string characters = 11;
    public static final int CHARACTERS_FIELD_NUMBER = 11;
    private java.lang.Object characters_;
    public boolean hasCharacters() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public String getCharacters() {
      java.lang.Object ref = characters_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          characters_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCharactersBytes() {
      java.lang.Object ref = characters_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        characters_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      eventTime_ = 0L;
      deviceId_ = 0;
      flags_ = 0;
      downTime_ = 0L;
      action_ = 0;
      code_ = 0;
      repeat_ = 0;
      metaState_ = 0;
      scanCode_ = 0;
      source_ = 0;
      characters_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasEventTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDeviceId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFlags()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, eventTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, deviceId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, flags_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, downTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, action_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, code_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, repeat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, metaState_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, scanCode_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, source_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getCharactersBytes());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, eventTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, deviceId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, flags_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, downTime_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, action_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, code_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, repeat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, metaState_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, scanCode_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, source_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getCharactersBytes());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.KeyEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.KeyEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.KeyEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.KeyEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.KeyEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.KeyEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.KeyEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.KeyEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.KeyEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.KeyEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.KeyEvent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.KeyEvent, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.KeyEventOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.KeyEvent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        eventTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        flags_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        downTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        action_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        repeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        metaState_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        scanCode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        source_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        characters_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.KeyEvent getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.KeyEvent.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.KeyEvent build() {
        org.mitre.svmp.protocol.SVMPProtocol.KeyEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.KeyEvent buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.KeyEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.KeyEvent buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.KeyEvent result = new org.mitre.svmp.protocol.SVMPProtocol.KeyEvent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eventTime_ = eventTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.deviceId_ = deviceId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.flags_ = flags_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.downTime_ = downTime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.action_ = action_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.code_ = code_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.repeat_ = repeat_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.metaState_ = metaState_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.scanCode_ = scanCode_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.source_ = source_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.characters_ = characters_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.KeyEvent other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.KeyEvent.getDefaultInstance()) return this;
        if (other.hasEventTime()) {
          setEventTime(other.getEventTime());
        }
        if (other.hasDeviceId()) {
          setDeviceId(other.getDeviceId());
        }
        if (other.hasFlags()) {
          setFlags(other.getFlags());
        }
        if (other.hasDownTime()) {
          setDownTime(other.getDownTime());
        }
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        if (other.hasRepeat()) {
          setRepeat(other.getRepeat());
        }
        if (other.hasMetaState()) {
          setMetaState(other.getMetaState());
        }
        if (other.hasScanCode()) {
          setScanCode(other.getScanCode());
        }
        if (other.hasSource()) {
          setSource(other.getSource());
        }
        if (other.hasCharacters()) {
          setCharacters(other.getCharacters());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasEventTime()) {
          
          return false;
        }
        if (!hasDeviceId()) {
          
          return false;
        }
        if (!hasFlags()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              eventTime_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              deviceId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              flags_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              downTime_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              action_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              code_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              repeat_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              metaState_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              scanCode_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              source_ = input.readInt32();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              characters_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required int64 eventTime = 1;
      private long eventTime_ ;
      public boolean hasEventTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getEventTime() {
        return eventTime_;
      }
      public Builder setEventTime(long value) {
        bitField0_ |= 0x00000001;
        eventTime_ = value;
        
        return this;
      }
      public Builder clearEventTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventTime_ = 0L;
        
        return this;
      }
      
      // required int32 deviceId = 2;
      private int deviceId_ ;
      public boolean hasDeviceId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getDeviceId() {
        return deviceId_;
      }
      public Builder setDeviceId(int value) {
        bitField0_ |= 0x00000002;
        deviceId_ = value;
        
        return this;
      }
      public Builder clearDeviceId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        deviceId_ = 0;
        
        return this;
      }
      
      // required int32 flags = 3;
      private int flags_ ;
      public boolean hasFlags() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getFlags() {
        return flags_;
      }
      public Builder setFlags(int value) {
        bitField0_ |= 0x00000004;
        flags_ = value;
        
        return this;
      }
      public Builder clearFlags() {
        bitField0_ = (bitField0_ & ~0x00000004);
        flags_ = 0;
        
        return this;
      }
      
      // optional int64 downTime = 4;
      private long downTime_ ;
      public boolean hasDownTime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public long getDownTime() {
        return downTime_;
      }
      public Builder setDownTime(long value) {
        bitField0_ |= 0x00000008;
        downTime_ = value;
        
        return this;
      }
      public Builder clearDownTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        downTime_ = 0L;
        
        return this;
      }
      
      // optional int32 action = 5;
      private int action_ ;
      public boolean hasAction() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getAction() {
        return action_;
      }
      public Builder setAction(int value) {
        bitField0_ |= 0x00000010;
        action_ = value;
        
        return this;
      }
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000010);
        action_ = 0;
        
        return this;
      }
      
      // optional int32 code = 6;
      private int code_ ;
      public boolean hasCode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getCode() {
        return code_;
      }
      public Builder setCode(int value) {
        bitField0_ |= 0x00000020;
        code_ = value;
        
        return this;
      }
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        code_ = 0;
        
        return this;
      }
      
      // optional int32 repeat = 7;
      private int repeat_ ;
      public boolean hasRepeat() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getRepeat() {
        return repeat_;
      }
      public Builder setRepeat(int value) {
        bitField0_ |= 0x00000040;
        repeat_ = value;
        
        return this;
      }
      public Builder clearRepeat() {
        bitField0_ = (bitField0_ & ~0x00000040);
        repeat_ = 0;
        
        return this;
      }
      
      // optional int32 metaState = 8;
      private int metaState_ ;
      public boolean hasMetaState() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getMetaState() {
        return metaState_;
      }
      public Builder setMetaState(int value) {
        bitField0_ |= 0x00000080;
        metaState_ = value;
        
        return this;
      }
      public Builder clearMetaState() {
        bitField0_ = (bitField0_ & ~0x00000080);
        metaState_ = 0;
        
        return this;
      }
      
      // optional int32 scanCode = 9;
      private int scanCode_ ;
      public boolean hasScanCode() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getScanCode() {
        return scanCode_;
      }
      public Builder setScanCode(int value) {
        bitField0_ |= 0x00000100;
        scanCode_ = value;
        
        return this;
      }
      public Builder clearScanCode() {
        bitField0_ = (bitField0_ & ~0x00000100);
        scanCode_ = 0;
        
        return this;
      }
      
      // optional int32 source = 10;
      private int source_ ;
      public boolean hasSource() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getSource() {
        return source_;
      }
      public Builder setSource(int value) {
        bitField0_ |= 0x00000200;
        source_ = value;
        
        return this;
      }
      public Builder clearSource() {
        bitField0_ = (bitField0_ & ~0x00000200);
        source_ = 0;
        
        return this;
      }
      
      // optional string characters = 11;
      private java.lang.Object characters_ = "";
      public boolean hasCharacters() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public String getCharacters() {
        java.lang.Object ref = characters_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          characters_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCharacters(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        characters_ = value;
        
        return this;
      }
      public Builder clearCharacters() {
        bitField0_ = (bitField0_ & ~0x00000400);
        characters_ = getDefaultInstance().getCharacters();
        
        return this;
      }
      void setCharacters(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000400;
        characters_ = value;
        
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.KeyEvent)
    }
    
    static {
      defaultInstance = new KeyEvent(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.KeyEvent)
  }
  
  public interface ConfigOrBuilder
      extends com.google.protobuf.MessageLiteOrBuilder {
    
    // optional bool hardKeyboard = 1;
    boolean hasHardKeyboard();
    boolean getHardKeyboard();
  }
  public static final class Config extends
      com.google.protobuf.GeneratedMessageLite
      implements ConfigOrBuilder {
    // Use Config.newBuilder() to construct.
    private Config(Builder builder) {
      super(builder);
    }
    private Config(boolean noInit) {}
    
    private static final Config defaultInstance;
    public static Config getDefaultInstance() {
      return defaultInstance;
    }
    
    public Config getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional bool hardKeyboard = 1;
    public static final int HARDKEYBOARD_FIELD_NUMBER = 1;
    private boolean hardKeyboard_;
    public boolean hasHardKeyboard() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getHardKeyboard() {
      return hardKeyboard_;
    }
    
    private void initFields() {
      hardKeyboard_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, hardKeyboard_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, hardKeyboard_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static org.mitre.svmp.protocol.SVMPProtocol.Config parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Config parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Config parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Config parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Config parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Config parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Config parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Config parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Config parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.mitre.svmp.protocol.SVMPProtocol.Config parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.mitre.svmp.protocol.SVMPProtocol.Config prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.mitre.svmp.protocol.SVMPProtocol.Config, Builder>
        implements org.mitre.svmp.protocol.SVMPProtocol.ConfigOrBuilder {
      // Construct using org.mitre.svmp.protocol.SVMPProtocol.Config.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        hardKeyboard_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Config getDefaultInstanceForType() {
        return org.mitre.svmp.protocol.SVMPProtocol.Config.getDefaultInstance();
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Config build() {
        org.mitre.svmp.protocol.SVMPProtocol.Config result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private org.mitre.svmp.protocol.SVMPProtocol.Config buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        org.mitre.svmp.protocol.SVMPProtocol.Config result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public org.mitre.svmp.protocol.SVMPProtocol.Config buildPartial() {
        org.mitre.svmp.protocol.SVMPProtocol.Config result = new org.mitre.svmp.protocol.SVMPProtocol.Config(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hardKeyboard_ = hardKeyboard_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(org.mitre.svmp.protocol.SVMPProtocol.Config other) {
        if (other == org.mitre.svmp.protocol.SVMPProtocol.Config.getDefaultInstance()) return this;
        if (other.hasHardKeyboard()) {
          setHardKeyboard(other.getHardKeyboard());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              hardKeyboard_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bool hardKeyboard = 1;
      private boolean hardKeyboard_ ;
      public boolean hasHardKeyboard() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getHardKeyboard() {
        return hardKeyboard_;
      }
      public Builder setHardKeyboard(boolean value) {
        bitField0_ |= 0x00000001;
        hardKeyboard_ = value;
        
        return this;
      }
      public Builder clearHardKeyboard() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hardKeyboard_ = false;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:svmp.Config)
    }
    
    static {
      defaultInstance = new Config(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:svmp.Config)
  }
  
  
  static {
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
